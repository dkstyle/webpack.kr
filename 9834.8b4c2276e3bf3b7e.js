"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9834],{9834:function(e,a,n){n.r(a),n(3696);var t=n(1445);function p(){return p=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},p.apply(this,arguments)}function s(e){let{components:a,...n}=e;return(0,t.yg)("wrapper",p({components:a},n),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"webpack은")," 모던 JavaScript 애플리케이션을 위한 ",(0,t.yg)("em",{parentName:"p"},"정적 모듈 번들러")," 입니다. webpack이 애플리케이션을 처리할 때, 내부적으로는 프로젝트에 필요한 모든 모듈을 매핑하고 하나 이상의 ",(0,t.yg)("em",{parentName:"p"},"번들을")," 생성하는 ",(0,t.yg)("a",{href:"/concepts/dependency-graph/",parentName:"p"},"디펜던시 그래프"),"를 만듭니다."),(0,t.yg)("aside",{className:"tip"},(0,t.yg)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,t.yg)("p",{parentName:"aside"},(0,t.yg)("a",{href:"/concepts/modules",parentName:"p"},"여기에서")," JavaScript 모듈 및 webpack 모듈에 대해 자세히 확인할 수 있습니다.")),(0,t.yg)("p",null,"webpack 버전 4.0.0 이후로는 프로젝트를 번들링하기 위한 ",(0,t.yg)("strong",{parentName:"p"},"설정 파일을 필요로 하지 않습니다.")," 하지만 사용자 요구에 따라 기대 이상으로 유연하게 ",(0,t.yg)("a",{href:"/configuration",parentName:"p"},"설정이 가능")," 합니다."),(0,t.yg)("p",null,"다음의 ",(0,t.yg)("strong",{parentName:"p"},"핵심 개념만")," 이해하면 시작할 수 있습니다."),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{href:"#entry",parentName:"li"},"Entry(엔트리)")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{href:"#output",parentName:"li"},"Output(출력)")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{href:"#loaders",parentName:"li"},"Loaders(로더)")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{href:"#plugins",parentName:"li"},"Plugins(플러그인)")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{href:"#mode",parentName:"li"},"Mode(모드)")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{href:"#browser-compatibility",parentName:"li"},"Browser Compatibility(브라우저 호환성)"))),(0,t.yg)("p",null,"이 문서에는 위 개념의 대략적인 개요를 제공하고, 개념별로 최적화된 사용 사례를 확인할 수 있는 링크를 제공하기 위한 목적으로 작성되었습니다."),(0,t.yg)("p",null,"모듈 번들러의 개념과 내부에서 동작하는 방식을 더 잘 이해하려면 다음 자료를 참고하세요."),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{href:"https://www.youtube.com/watch?v=UNMkLHzofQI",parentName:"li"},"수동으로 애플리케이션을 번들링하기")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{href:"https://www.youtube.com/watch?v=Gc9-7PBqOC8",parentName:"li"},"기본 모듈 번들러 라이브 코딩")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{href:"https://github.com/ronami/minipack",parentName:"li"},"기본 모듈 번들러에 대한 자세한 설명"))),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"entry",parentName:"h2"}),"Entry",(0,t.yg)("a",{href:"#entry","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"엔트리 포인트는")," webpack이 내부의 ",(0,t.yg)("a",{href:"/concepts/dependency-graph/",parentName:"p"},"디펜던시 그래프")," 를 생성하기 위해 사용해야 하는 모듈입니다. Webpack은 엔트리 포인트가 (직간접적으로) 의존하는 다른 모듈과 라이브러리를 찾아냅니다."),(0,t.yg)("p",null,"기본값은 ",(0,t.yg)("inlineCode",{parentName:"p"},"./src/index.js"),"이지만, ",(0,t.yg)("a",{href:"/configuration/entry-context/#entry",parentName:"p"},"webpack 설정에서 ",(0,t.yg)("inlineCode",{parentName:"a"},"entry")," 속성"),"을 설정하여 다른 (또는 여러 엔트리 포인트)를 지정할 수 있습니다. 예를 들어보겠습니다."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"webpack.config.js")),(0,t.yg)("pre",null,(0,t.yg)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  entry",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},"'./path/to/my/entry/file.js'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.yg)("aside",{className:"tip"},(0,t.yg)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,t.yg)("p",{parentName:"aside"},(0,t.yg)("a",{href:"/concepts/entry-points",parentName:"p"},"엔트리 포인트"),"에서 자세히 알아보세요.")),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"output",parentName:"h2"}),"Output",(0,t.yg)("a",{href:"#output","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"output")," 속성은 생성된 ",(0,t.yg)("em",{parentName:"p"},"번들을")," 내보낼 위치와 이 파일의 이름을 지정하는 방법을 webpack에 알려주는 역할을 합니다. 기본 출력 파일의 경우에는 ",(0,t.yg)("inlineCode",{parentName:"p"},"./dist/main.js"),"로 , 생성된 기타 파일의 경우에는 ",(0,t.yg)("inlineCode",{parentName:"p"},"./dist")," 폴더로 설정됩니다."),(0,t.yg)("p",null,"다음과 같이 설정에서 ",(0,t.yg)("inlineCode",{parentName:"p"},"output")," 필드를 지정할 수 있습니다."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"webpack.config.js")),(0,t.yg)("pre",null,(0,t.yg)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.yg)("span",{className:"token keyword",parentName:"code"},"const")," path ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.yg)("span",{className:"token function",parentName:"code"},"require"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.yg)("span",{className:"token string",parentName:"code"},"'path'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n\nmodule",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  entry",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},"'./path/to/my/entry/file.js'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n  output",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    path",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," path",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.yg)("span",{className:"token function",parentName:"code"},"resolve"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),"__dirname",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},"'dist'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n    filename",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},"'my-first-webpack.bundle.js'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.yg)("p",null,"위의 예제에서, ",(0,t.yg)("inlineCode",{parentName:"p"},"output.filename"),"과 ",(0,t.yg)("inlineCode",{parentName:"p"},"output.path")," 속성을 사용하여 webpack에 번들의 이름과 내보낼 위치를 알려주었습니다. 상단에서 가져오는 path 모듈이 무엇인지 궁금할 수 있는데, 이것은 파일 경로를 지정하기 위해 사용되는 core Node.js 모듈입니다."),(0,t.yg)("aside",{className:"tip"},(0,t.yg)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,t.yg)("p",{parentName:"aside"},(0,t.yg)("inlineCode",{parentName:"p"},"output")," 속성에는 ",(0,t.yg)("a",{href:"/configuration/output",parentName:"p"},"설정 가능한 더 많은 기능"),"이 있습니다. 그 밖의 개념에 대해 더 배우고 싶다면, ",(0,t.yg)("a",{href:"/concepts/output",parentName:"p"},"출력")," 을 읽어보세요.")),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"loaders",parentName:"h2"}),"Loaders",(0,t.yg)("a",{href:"#loaders","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,"webpack은 기본적으로 JavaScript와 JSON 파일만 이해합니다. ",(0,t.yg)("strong",{parentName:"p"},"로더를")," 사용하면 webpack이 다른 유형의 파일을 처리하거나, 그들을 유효한 ",(0,t.yg)("a",{href:"/concepts/modules",parentName:"p"},"모듈"),"로 변환 하여 애플리케이션에서 사용하거나 디펜던시 그래프에 추가합니다."),(0,t.yg)("aside",{className:"warning"},(0,t.yg)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.yg)("p",{parentName:"aside"},"webpack의 특정 기능 중 하나인 모든 유형의 모듈(예: ",(0,t.yg)("inlineCode",{parentName:"p"},".css"),")을 ",(0,t.yg)("inlineCode",{parentName:"p"},"import")," 하는 기능은 다른 번들러나 태스크 러너에서 지원하지 않을 수 있습니다. 개발자들에게 더욱 정확한 디펜던시 그래프를 생성하는 데 도움을 주기 때문에 이러한 언어의 확장이 필요하다고 생각합니다.")),(0,t.yg)("p",null,"상위 수준에서 ",(0,t.yg)("strong",{parentName:"p"},"로더는")," webpack 설정에 두 가지 속성을 가집니다."),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},"변환이 필요한 파일(들)을 식별하는 ",(0,t.yg)("inlineCode",{parentName:"li"},"test")," 속성"),(0,t.yg)("li",{parentName:"ol"},"변환을 수행하는데 사용되는 로더를 가리키는 ",(0,t.yg)("inlineCode",{parentName:"li"},"use")," 속성")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"webpack.config.js")),(0,t.yg)("pre",null,(0,t.yg)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.yg)("span",{className:"token keyword",parentName:"code"},"const")," path ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.yg)("span",{className:"token function",parentName:"code"},"require"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.yg)("span",{className:"token string",parentName:"code"},"'path'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n\nmodule",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  output",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    filename",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},"'my-first-webpack.bundle.js'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n  module",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    rules",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"["),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{")," test",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token regex",parentName:"code"},"/\\.txt$/"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},",")," use",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},"'raw-loader'")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.yg)("p",null,"위 설정에서는 ",(0,t.yg)("inlineCode",{parentName:"p"},"test"),"와 ",(0,t.yg)("inlineCode",{parentName:"p"},"use"),"라는 두 가지 필수 속성을 가진 하나의 모듈을 위해 ",(0,t.yg)("inlineCode",{parentName:"p"},"rules")," 속성을 정의했습니다. 이는 webpack의 컴파일러에 다음과 같이 말합니다."),(0,t.yg)("blockquote",null,(0,t.yg)("p",{parentName:"blockquote"},'"이봐 webpack 컴파일러, ',(0,t.yg)("inlineCode",{parentName:"p"},"require ()"),"/",(0,t.yg)("inlineCode",{parentName:"p"},"import")," 문 내에서 '.txt' 파일로 확인되는 경로를 발견하면 번들에 추가하기 전에 ",(0,t.yg)("inlineCode",{parentName:"p"},"raw-loader"),"를 ",(0,t.yg)("strong",{parentName:"p"},"사용하여"),' 변환해."')),(0,t.yg)("aside",{className:"warning"},(0,t.yg)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.yg)("p",{parentName:"aside"},"webpack 설정에서 규칙을 정의할 때 ",(0,t.yg)("inlineCode",{parentName:"p"},"rules"),"가 아닌 ",(0,t.yg)("inlineCode",{parentName:"p"},"module.rules")," 아래에 정의한다는 것을 기억하세요. 당신의 편의를 위해 webpack은 잘못 정의한 경우에 경고를 합니다.")),(0,t.yg)("aside",{className:"warning"},(0,t.yg)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.yg)("p",{parentName:"aside"},"정규식을 사용하여 파일을 매칭할 때 따옴표를 사용하지 않도록 주의하세요. 즉, ",(0,t.yg)("inlineCode",{parentName:"p"},"/\\.txt$/"),"는 ",(0,t.yg)("inlineCode",{parentName:"p"},"'/\\.txt$/'")," 또는 ",(0,t.yg)("inlineCode",{parentName:"p"},'"/\\.txt$/"'),"와 같지 않습니다. 전자는 webpack에 .txt로 끝나는 모든 파일과 일치하도록 지시하고 후자는 webpack에 절대 경로 '.txt'를 가진 단일 파일과 일치하도록 지시합니다. 이는 당신의 의도한 것이 아닐 가능성이 높습니다.")),(0,t.yg)("p",null,"더 상세한 사용자 지정 설정에 대해서는 ",(0,t.yg)("a",{href:"/concepts/loaders",parentName:"p"},"로더"),"에서 확인하실 수 있습니다."),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"plugins",parentName:"h2"}),"Plugins",(0,t.yg)("a",{href:"#plugins","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,"로더는 특정 유형의 모듈을 변환하는 데 사용되지만, 플러그인을 활용하여 번들을 최적화하거나, 애셋을 관리하고, 또 환경 변수 주입등과 같은 광범위한 작업을 수행 할 수 있습니다."),(0,t.yg)("aside",{className:"tip"},(0,t.yg)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,t.yg)("p",{parentName:"aside"},(0,t.yg)("a",{href:"/api/plugins",parentName:"p"},"플러그인 인터페이스"),"를 사용하여 webpack의 기능을 확장하는 방법을 확인해보세요.")),(0,t.yg)("p",null,"플러그인을 사용하려면 ",(0,t.yg)("inlineCode",{parentName:"p"},"require ()"),"를 통해 플러그인을 요청하고 ",(0,t.yg)("inlineCode",{parentName:"p"},"plugins")," 배열에 추가해야 합니다. 대부분의 플러그인은 옵션을 통해 사용자가 지정할 수 있습니다. 다른 목적으로 플러그인을 여러 번 사용하도록 설정할 수 있으므로 ",(0,t.yg)("inlineCode",{parentName:"p"},"new")," 연산자로 호출하여 플러그인의 인스턴스를 만들어야 합니다."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"webpack.config.js")),(0,t.yg)("pre",null,(0,t.yg)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.yg)("span",{className:"token keyword",parentName:"code"},"const")," HtmlWebpackPlugin ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.yg)("span",{className:"token function",parentName:"code"},"require"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.yg)("span",{className:"token string",parentName:"code"},"'html-webpack-plugin'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.yg)("span",{className:"token keyword",parentName:"code"},"const")," webpack ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.yg)("span",{className:"token function",parentName:"code"},"require"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.yg)("span",{className:"token string",parentName:"code"},"'webpack'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";")," ",(0,t.yg)("span",{className:"token comment",parentName:"code"},"// 내장 plugin에 접근하는 데 사용"),"\n\nmodule",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  module",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    rules",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"["),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{")," test",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token regex",parentName:"code"},"/\\.txt$/"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},",")," use",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},"'raw-loader'")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n  plugins",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"["),(0,t.yg)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,t.yg)("span",{className:"token class-name",parentName:"code"},"HtmlWebpackPlugin"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{")," template",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},"'./src/index.html'")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.yg)("p",null,"위의 예제에서 ",(0,t.yg)("inlineCode",{parentName:"p"},"html-webpack-plugin"),"은 생성된 모든 번들을 자동으로 삽입하여 애플리케이션용 HTML 파일을 생성합니다."),(0,t.yg)("aside",{className:"tip"},(0,t.yg)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,t.yg)("p",{parentName:"aside"},"webpack은 설치 없이 사용할 수 있는 많은 플러그인을 제공합니다! ",(0,t.yg)("a",{href:"/plugins",parentName:"p"},"plugin 목록"),"을 확인해보세요.")),(0,t.yg)("p",null,"webpack 설정에서 플러그인을 사용하는 것은 간단하지만, 추가로 실제 사용 사례들도 살펴볼만한 가치가 있습니다. ",(0,t.yg)("a",{href:"/concepts/plugins",parentName:"p"},"여기에서")," 자세히 알아보세요."),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"mode",parentName:"h2"}),"Mode",(0,t.yg)("a",{href:"#mode","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"mode")," 파라미터를 ",(0,t.yg)("inlineCode",{parentName:"p"},"development"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"production")," 또는 ",(0,t.yg)("inlineCode",{parentName:"p"},"none"),"으로 설정하면 webpack에 내장된 환경별 최적화를 활성화 할 수 있습니다. 기본값은 ",(0,t.yg)("inlineCode",{parentName:"p"},"production")," 입니다."),(0,t.yg)("pre",null,(0,t.yg)("code",{className:"hljs language-javascript",parentName:"pre"},"module",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  mode",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},"'production'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.yg)("p",null,(0,t.yg)("a",{href:"/configuration/mode",parentName:"p"},"여기에서")," 모드 구성에 대해 자세히 알아보고 각 값에서 어떤 최적화가 수행되는지 알아보세요."),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"browser-compatibility",parentName:"h2"}),"Browser Compatibility",(0,t.yg)("a",{href:"#browser-compatibility","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,"Webpack은 ",(0,t.yg)("a",{href:"https://kangax.github.io/compat-table/es5/",parentName:"p"},"ES5"),"가 호환되는 모든 브라우저를 지원합니다(IE8 이하는 지원되지 않습니다). Webpack은 ",(0,t.yg)("a",{href:"/guides/code-splitting/#dynamic-imports",parentName:"p"},(0,t.yg)("inlineCode",{parentName:"a"},"import()")," 및 ",(0,t.yg)("inlineCode",{parentName:"a"},"require.ensure()")),"을 위한 ",(0,t.yg)("inlineCode",{parentName:"p"},"Promise"),"를 요구합니다. 구형 브라우저를 지원하려면 이러한 표현식을 사용하기 전에 ",(0,t.yg)("a",{href:"/guides/shimming/",parentName:"p"},"폴리필을 로드"),"해야 합니다."),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"environment",parentName:"h2"}),"Environment",(0,t.yg)("a",{href:"#environment","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,"Webpack 5는 Node.js 버전 10.13.0 이상에서 실행됩니다."))}s.isMDXComponent=!0,a.default=s}}]);