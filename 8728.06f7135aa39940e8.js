"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8728],{8728:function(e,n,a){a.r(n),a(3696);var t=a(1445);function p(){return p=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e},p.apply(this,arguments)}function r(e){let{components:n,...a}=e;return(0,t.yg)("wrapper",p({components:n},a),(0,t.yg)("p",null,"Webpack은 로드하는 모든 스크립트에 ",(0,t.yg)("inlineCode",{parentName:"p"},"nonce"),"를 추가할 수 있습니다. 기능 세트를 활성화하려면 엔트리 스크립트에 ",(0,t.yg)("inlineCode",{parentName:"p"},"__webpack_nonce__")," 변수를 포함해야 합니다. 고유한 해시 기반 nonce가 생성되고 고유한 페이지 뷰에 대해 각각 제공됩니다. 이것이 바로 ",(0,t.yg)("inlineCode",{parentName:"p"},"__webpack_nonce__")," 가 설정이 아닌 엔트리 파일에 지정된 이유입니다. ",(0,t.yg)("inlineCode",{parentName:"p"},"__webpack_nonce__"),"는 항상 base64로 인코딩된 문자열이어야 합니다."),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"examples",parentName:"h2"}),"Examples",(0,t.yg)("a",{href:"#examples","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,"엔트리 파일 안의 경우:"),(0,t.yg)("pre",null,(0,t.yg)("code",{className:"hljs language-js",parentName:"pre"},(0,t.yg)("span",{className:"token comment",parentName:"code"},"// ..."),"\n__webpack_nonce__ ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},"'c29tZSBjb29sIHN0cmluZyB3aWxsIHBvcCB1cCAxMjM='"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.yg)("span",{className:"token comment",parentName:"code"},"// ..."))),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"enabling-csp",parentName:"h2"}),"Enabling CSP",(0,t.yg)("a",{href:"#enabling-csp","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,"CSP는 기본적으로 활성화되어 있지 않습니다. 브라우저에 CSP를 사용하도록 지시하려면 해당하는 헤더인 ",(0,t.yg)("inlineCode",{parentName:"p"},"Content-Security-Policy")," 혹은 메타 태그 ",(0,t.yg)("inlineCode",{parentName:"p"},'<meta http-equiv="Content-Security-Policy" ...>'),"를 도큐먼트와 함께 보내야 합니다. 다음은 CDN 화이트리스트 URL을 포함한 CSP 헤더의 예시입니다."),(0,t.yg)("pre",null,(0,t.yg)("code",{className:"hljs language-html",parentName:"pre"},"Content-Security-Policy: default-src 'self'; script-src 'self'\nhttps://trusted.cdn.com;")),(0,t.yg)("p",null,"CSP 및 ",(0,t.yg)("inlineCode",{parentName:"p"},"nonce")," 속성에 대한 자세한 내용은 이 페이지 하단의 ",(0,t.yg)("strong",{parentName:"p"},"더 읽어보기")," 섹션을 참고하세요."),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"trusted-types",parentName:"h2"}),"Trusted Types",(0,t.yg)("a",{href:"#trusted-types","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,"Webpack은 또한 Trusted Types을 사용하여 동적으로 구성된 스크립트를 로드하고 CSP ",(0,t.yg)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/require-trusted-types-for",parentName:"p"},(0,t.yg)("inlineCode",{parentName:"a"},"require-trusted-types-for"))," 지시문의 제한을 준수할 수 있습니다. ",(0,t.yg)("a",{href:"/configuration/output/#outputtrustedtypes",parentName:"p"},(0,t.yg)("inlineCode",{parentName:"a"},"output.trustedTypes"))," 설정 옵션을 참고하세요."))}r.isMDXComponent=!0,n.default=r}}]);