"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6695],{6695:function(e,a,n){n.r(a),n(3696);var s=n(1445);function p(){return p=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s])}return e},p.apply(this,arguments)}function t(e){let{components:a,...n}=e;return(0,s.yg)("wrapper",p({components:a},n),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"다음 섹션에서는 webpack 1에서 2로의 주요 변경 사항을 설명합니다.")),(0,s.yg)("aside",{className:"tip"},(0,s.yg)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,s.yg)("p",{parentName:"aside"},"webpack 2와 3 사이에 변경 사항이 훨씬 적으므로 마이그레이션이 그렇게 나쁘지 않을 것입니다. 문제가 발생하는 경우, 자세한 내용은 ",(0,s.yg)("a",{href:"https://github.com/webpack/webpack/releases",parentName:"p"},"the changelog"),"를 참고하세요.")),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"resolveroot-resolvefallback-resolvemodulesdirectories",parentName:"h2"}),"resolve.root, resolve.fallback, resolve.modulesDirectories",(0,s.yg)("a",{href:"#resolveroot-resolvefallback-resolvemodulesdirectories","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"위 옵션들은 ",(0,s.yg)("inlineCode",{parentName:"p"},"resolve.modules")," 로 대체되었습니다. 자세한 사용법은 ",(0,s.yg)("a",{href:"/configuration/resolve",parentName:"p"},"resolving"),"을 참고하세요."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," resolve: {\n")),(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},'   root: path.join(__dirname, "src")\n')),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"   modules: [\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},'     path.join(__dirname, "src"),\n'),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},'     "node_modules"\n'),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"   ]\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," }")))),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"resolveextensions",parentName:"h2"}),"resolve.extensions",(0,s.yg)("a",{href:"#resolveextensions","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"이 옵션은 더 이상 빈 문자열을 전달할 필요가 없습니다. 이 동작은 ",(0,s.yg)("inlineCode",{parentName:"p"},"resolve.enforceExtension"),"으로 이동되었습니다. 자세한 사용법은 ",(0,s.yg)("a",{href:"/configuration/resolve",parentName:"p"},"resolving")," 를 참고하세요."),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"resolve",parentName:"h2"}),"resolve.*",(0,s.yg)("a",{href:"#resolve","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"여기에서 여러 API가 변경되었습니다. 흔히 사용되지 않으므로 자세히 나열하지 않습니다. 자세한 내용은 ",(0,s.yg)("a",{href:"/configuration/resolve",parentName:"p"},"resolving"),"을 참고하세요."),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"moduleloaders-is-now-modulerules",parentName:"h2"}),"module.loaders is now module.rules",(0,s.yg)("a",{href:"#moduleloaders-is-now-modulerules","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"이전의 로더설정은 로더와 그 이상의 설정이 허가되는 강력한 규칙 시스템으로 대체 되었습니다.\n호환성을 위해 이전의 ",(0,s.yg)("inlineCode",{parentName:"p"},"module.loaders")," 구문은 여전히 유효하며 이전 이름은 구문 분석됩니다.\n네이밍 컨벤션들이 이해하기 쉬워졌고 ",(0,s.yg)("inlineCode",{parentName:"p"},"module.rules"),"를 사용하도록 설정을 업그레이드 해야하는 좋은 이유입니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," module: {\n")),(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},"   loaders: [\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"   rules: [\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"     {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"       test: /\\.css$/,\n")),(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},"       loaders: [\n"),(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},'         "style-loader",\n'),(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},'         "css-loader?modules=true"\n')),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"       use: [\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"         {\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},'           loader: "style-loader"\n'),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"         },\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"         {\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},'           loader: "css-loader",\n'),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"           options: {\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"             modules: true\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"           }\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"         }\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"       ]\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"     },\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"     {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"       test: /\\.jsx$/,\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},'       loader: "babel-loader", // Do not use "use" here\n'),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"       options: {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"         // ...\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"       }\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"     }\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"   ]\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," }")))),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"chaining-loaders",parentName:"h2"}),"Chaining loaders",(0,s.yg)("a",{href:"#chaining-loaders","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"webpack 1에서와 같이 로더를 연결하여 로더에서 로더로 결과를 전달할 수 있습니다.\n",(0,s.yg)("a",{href:"/configuration/module/#ruleuse",parentName:"p"},"rule.use")," 를 사용하여, ",(0,s.yg)("inlineCode",{parentName:"p"},"use")," 를 로더 배열로 설정할 수 있습니다.\nwebpack 1에서 로더는 일반적으로 ",(0,s.yg)("inlineCode",{parentName:"p"},"!"),"로 연결되었습니다. 이 스타일은 레거시 옵션 ",(0,s.yg)("inlineCode",{parentName:"p"},"module.loaders")," 를 사용하는 경우에만 지원됩니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," module: {\n")),(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},"   loaders: [{\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"   rules: [{\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"     test: /\\.less$/,\n")),(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},'     loader: "style-loader!css-loader!less-loader"\n')),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"     use: [\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},'       "style-loader",\n'),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},'       "css-loader",\n'),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},'       "less-loader"\n'),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"     ]\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"   }]\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," }")))),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"automatic--loader-module-name-extension-removed",parentName:"h2"}),"Automatic ",(0,s.yg)("inlineCode",{parentName:"h2"},"-loader")," module name extension removed",(0,s.yg)("a",{href:"#automatic--loader-module-name-extension-removed","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"로더를 참고할 때 ",(0,s.yg)("inlineCode",{parentName:"p"},"-loader")," 확장자를 더 이상 생략할 수 없습니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," module: {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"   rules: [\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"     {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"       use: [\n")),(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},'         "style",\n')),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},'         "style-loader",\n')),(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},'         "css",\n')),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},'         "css-loader",\n')),(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},'         "less",\n')),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},'         "less-loader",\n')),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"       ]\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"     }\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"   ]\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," }")))),(0,s.yg)("p",null,(0,s.yg)("inlineCode",{parentName:"p"},"resolveLoader.moduleExtensions")," 설정 옵션을 사용하여 이전 동작을 계속 선택할 수 있지만 이는 권장되지 않습니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"}," resolveLoader: {\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},'   moduleExtensions: ["-loader"]\n'),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"}," }")))),(0,s.yg)("p",null,"이 변경 이유는 ",(0,s.yg)("a",{href:"https://github.com/webpack/webpack/issues/2986",parentName:"p"},"#2986")," 을 참고하세요."),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"json-loader-is-not-required-anymore",parentName:"h2"}),"json-loader is not required anymore",(0,s.yg)("a",{href:"#json-loader-is-not-required-anymore","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"JSON 파일에 대해 설정된 로더가 없으면, webpack은 자동으로 ",(0,s.yg)("a",{href:"https://github.com/webpack-contrib/json-loader",parentName:"p"},(0,s.yg)("inlineCode",{parentName:"a"},"json-loader")),"로 JSON 파일을 로드하려고 시도합니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," module: {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"   rules: [\n")),(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},"     {\n"),(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},"       test: /\\.json/,\n"),(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},'       loader: "json-loader"\n'),(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},"     }\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"   ]\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," }")))),(0,s.yg)("p",null,"webpack, node.js 및 browserify 간의 ",(0,s.yg)("a",{href:"https://github.com/webpack/webpack/issues/3363",parentName:"p"},"환경차이를 없애기 위해 그렇게 하기로 결정했습니다.")),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"loaders-in-configuration-resolve-relative-to-context",parentName:"h2"}),"Loaders in configuration resolve relative to context",(0,s.yg)("a",{href:"#loaders-in-configuration-resolve-relative-to-context","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"webpack 1")," 에서, 설정된 로더가 일치하는 파일을 기준으로 확인되어집니다. 하지만, ",(0,s.yg)("strong",{parentName:"p"},"webpack 2")," 에서는, 설정된 로더는 ",(0,s.yg)("inlineCode",{parentName:"p"},"context")," 옵션을 기준으로 확인됩니다."),(0,s.yg)("p",null,"이것은 ",(0,s.yg)("inlineCode",{parentName:"p"},"npm link")," 를 사용하거나 외부 ",(0,s.yg)("inlineCode",{parentName:"p"},"context")," 모듈을 참고할 때 로더에 의해 발생하는 중복 모듈 문제를 해결합니다."),(0,s.yg)("p",null,"이 문제를 해결하기 위해 몇 가지 핵을 제거할 수 있습니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," module: {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"   rules: [\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"     {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"       // ...\n")),(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},'       loader: require.resolve("my-loader")\n')),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},'       loader: "my-loader"\n')),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"     }\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"   ]\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," },\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," resolveLoader: {\n")),(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},'   root: path.resolve(__dirname, "node_modules")\n')),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," }")))),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"modulepreloaders-and-modulepostloaders-were-removed",parentName:"h2"}),"module.preLoaders and module.postLoaders were removed:",(0,s.yg)("a",{href:"#modulepreloaders-and-modulepostloaders-were-removed","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," module: {\n")),(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},"   preLoaders: [\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"   rules: [\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"     {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"       test: /\\.js$/,\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},'       enforce: "pre",\n')),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},'       loader: "eslint-loader"\n'),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"     }\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"   ]\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," }")))),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"uglifyjsplugin-sourcemap",parentName:"h2"}),"UglifyJsPlugin sourceMap",(0,s.yg)("a",{href:"#uglifyjsplugin-sourcemap","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,(0,s.yg)("inlineCode",{parentName:"p"},"UglifyJsPlugin")," 의 ",(0,s.yg)("inlineCode",{parentName:"p"},"sourceMap")," 옵션은 ",(0,s.yg)("inlineCode",{parentName:"p"},"true")," 대신 ",(0,s.yg)("inlineCode",{parentName:"p"},"false")," 로 기본 설정됩니다. 즉, 최소화된 코드에 소스맵을 사용하거나 uglifyjs 경고에 대한 올바른 줄 번호를 원하는 경우 ",(0,s.yg)("inlineCode",{parentName:"p"},"UglifyJsPlugin"),"에서 ",(0,s.yg)("inlineCode",{parentName:"p"},"sourceMap: true"),"를 설정해야 합니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},' devtool: "source-map",\n'),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," plugins: [\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"   new UglifyJsPlugin({\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"     sourceMap: true\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"   })\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," ]")))),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"uglifyjsplugin-warnings",parentName:"h2"}),"UglifyJsPlugin warnings",(0,s.yg)("a",{href:"#uglifyjsplugin-warnings","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,(0,s.yg)("inlineCode",{parentName:"p"},"UglifyJsPlugin"),"의 ",(0,s.yg)("inlineCode",{parentName:"p"},"compress.warnings")," 옵션은 이제 ",(0,s.yg)("inlineCode",{parentName:"p"},"true")," 대신 ",(0,s.yg)("inlineCode",{parentName:"p"},"false"),"로 기본 설정됩니다.\n즉, uglifyjs 경고를 보려면 ",(0,s.yg)("inlineCode",{parentName:"p"},"compress.warnings"),"를 ",(0,s.yg)("inlineCode",{parentName:"p"},"true"),"로 설정해야 합니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},' devtool: "source-map",\n'),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," plugins: [\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"   new UglifyJsPlugin({\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"     compress: {\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"       warnings: true\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"     }\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"   })\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," ]")))),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"uglifyjsplugin-minimize-loaders",parentName:"h2"}),"UglifyJsPlugin minimize loaders",(0,s.yg)("a",{href:"#uglifyjsplugin-minimize-loaders","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,(0,s.yg)("inlineCode",{parentName:"p"},"UglifyJsPlugin")," 은 더 이상 로더를 최소화 모드로 전환하지 않습니다. ",(0,s.yg)("inlineCode",{parentName:"p"},"minimize: true")," 설정은 장기적으로 로더 옵션을 통해 전달되어야 합니다. 관련 옵션은 로더 문서를 참고하세요."),(0,s.yg)("p",null,"로더의 최소화 모드는 webpack 3 이상에서 제거됩니다."),(0,s.yg)("p",null,"이전 로더와의 호환성을 유지하기 위해 플러그인을 통해 로더를 최소화 모드로 전환할 수 있습니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," plugins: [\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"   new webpack.LoaderOptionsPlugin({\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"     minimize: true\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"   })\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," ]")))),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"dedupeplugin-has-been-removed",parentName:"h2"}),"DedupePlugin has been removed",(0,s.yg)("a",{href:"#dedupeplugin-has-been-removed","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,(0,s.yg)("inlineCode",{parentName:"p"},"webpack.optimize.DedupePlugin"),"은 더 이상 필요하지 않습니다. 설정에서 제거하세요."),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"bannerplugin---breaking-change",parentName:"h2"}),"BannerPlugin - breaking change",(0,s.yg)("a",{href:"#bannerplugin---breaking-change","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,(0,s.yg)("inlineCode",{parentName:"p"},"BannerPlugin"),"은 더 이상 두 개의 매개변수를 허용하지 않고 단일 옵션 개체를 허용합니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," plugins: [\n")),(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    new webpack.BannerPlugin('Banner', {raw: true, entryOnly: true});\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    new webpack.BannerPlugin({banner: 'Banner', raw: true, entryOnly: true});\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," ]")))),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"occurrenceorderplugin-is-now-on-by-default",parentName:"h2"}),"OccurrenceOrderPlugin is now on by default",(0,s.yg)("a",{href:"#occurrenceorderplugin-is-now-on-by-default","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,(0,s.yg)("inlineCode",{parentName:"p"},"OccurrenceOrderPlugin"),"은 이제 기본적으로 활성화되며 이름이 변경되었습니다(webpack 1의 ",(0,s.yg)("inlineCode",{parentName:"p"},"OccurenceOrderPlugin"),").\n따라서 설정에서 플러그인을 제거해야 합니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," plugins: [\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"   // webpack 1\n")),(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},"   new webpack.optimize.OccurenceOrderPlugin()\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"   // webpack 2\n")),(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},"   new webpack.optimize.OccurrenceOrderPlugin()\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," ]")))),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"extracttextwebpackplugin---breaking-change",parentName:"h2"}),"ExtractTextWebpackPlugin - breaking change",(0,s.yg)("a",{href:"#extracttextwebpackplugin---breaking-change","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,(0,s.yg)("a",{href:"https://github.com/webpack-contrib/extract-text-webpack-plugin",parentName:"p"},"ExtractTextPlugin")," 이 webpack 2와 함께 작동하려면 버전 2가 필요합니다."),(0,s.yg)("p",null,(0,s.yg)("inlineCode",{parentName:"p"},"npm install --save-dev extract-text-webpack-plugin")),(0,s.yg)("p",null,"이 플러그인의 설정 변경은 주로 구문입니다."),(0,s.yg)("h3",null,(0,s.yg)("span",{id:"extracttextpluginextract",parentName:"h3"}),"ExtractTextPlugin.extract",(0,s.yg)("a",{href:"#extracttextpluginextract","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},"module: {\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," rules: [\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"   {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"     test: /.css$/,\n")),(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},'      loader: ExtractTextPlugin.extract("style-loader", "css-loader", { publicPath: "/dist" })\n')),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"      use: ExtractTextPlugin.extract({\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},'        fallback: "style-loader",\n'),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},'        use: "css-loader",\n'),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},'        publicPath: "/dist"\n'),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"      })\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"   }\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," ]\n")),"}")),(0,s.yg)("h3",null,(0,s.yg)("span",{id:"new-extracttextpluginoptions",parentName:"h3"}),(0,s.yg)("inlineCode",{parentName:"h3"},"new ExtractTextPlugin({options})"),(0,s.yg)("a",{href:"#new-extracttextpluginoptions","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},"plugins: [\n",(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},'  new ExtractTextPlugin("bundle.css", { allChunks: true, disable: false })\n')),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  new ExtractTextPlugin({\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},'    filename: "bundle.css",\n'),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    disable: false,\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    allChunks: true\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  })\n")),"]")),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"full-dynamic-requires-now-fail-by-default",parentName:"h2"}),"Full dynamic requires now fail by default",(0,s.yg)("a",{href:"#full-dynamic-requires-now-fail-by-default","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"표현식(즉, ",(0,s.yg)("inlineCode",{parentName:"p"},"require(expr)"),")만 있는 종속성은 이제 전체 디렉터리의 컨텍스트 대신 빈 컨텍스트를 생성합니다."),(0,s.yg)("p",null,"이와 같은 코드는 ES2015 모듈에서 작동하지 않으므로 리팩토링해야 합니다.\n이것이 가능하지 않다면 ",(0,s.yg)("inlineCode",{parentName:"p"},"ContextReplacementPlugin"),"을 사용하여 컴파일러가 올바른 해결을 하도록 힌트를 줄 수 있습니다."),(0,s.yg)("aside",{className:"todo"},(0,s.yg)("h6",{className:"todo__prefix",parentName:"aside"},"todo"),(0,s.yg)("p",{parentName:"aside"},"동적 의존성에 대한 기사 링크.")),(0,s.yg)("h3",null,(0,s.yg)("span",{id:"using-custom-arguments-in-cli-and-configuration",parentName:"h3"}),"Using custom arguments in CLI and configuration",(0,s.yg)("a",{href:"#using-custom-arguments-in-cli-and-configuration","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"CLI를 남용하여 다음과 같이 설정에 사용자 지정 인수를 전달한 경우."),(0,s.yg)("p",null,(0,s.yg)("inlineCode",{parentName:"p"},"webpack --custom-stuff")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-js",parentName:"pre"},(0,s.yg)("span",{className:"token comment",parentName:"code"},"// webpack.config.js"),"\n",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"var")," customStuff ",(0,s.yg)("span",{className:"token operator",parentName:"code"},"=")," process",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"."),"argv",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"."),(0,s.yg)("span",{className:"token function",parentName:"code"},"indexOf"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token string",parentName:"code"},"'--custom-stuff'"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,s.yg)("span",{className:"token operator",parentName:"code"},">=")," ",(0,s.yg)("span",{className:"token number",parentName:"code"},"0"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,s.yg)("span",{className:"token comment",parentName:"code"},"/* ... */"),"\nmodule",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,s.yg)("span",{className:"token operator",parentName:"code"},"=")," config",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,s.yg)("p",null,"이것이 더 이상 허용되지 않음을 알 수 있습니다. 이제 CLI가 더 엄격해졌습니다."),(0,s.yg)("p",null,"대신 설정에 인수를 전달하기 위한 인터페이스가 있습니다. 대신 사용해야 합니다. 미래의 도구는 이것에 의존할 수 있습니다."),(0,s.yg)("p",null,(0,s.yg)("inlineCode",{parentName:"p"},"webpack --env.customStuff")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"."),(0,s.yg)("span",{className:"token function-variable function",parentName:"code"},"exports")," ",(0,s.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token parameter",parentName:"code"},"env"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"var")," customStuff ",(0,s.yg)("span",{className:"token operator",parentName:"code"},"=")," env",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"."),"customStuff",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n  ",(0,s.yg)("span",{className:"token comment",parentName:"code"},"/* ... */"),"\n  ",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"return")," config",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,s.yg)("p",null,(0,s.yg)("a",{href:"/api/cli",parentName:"p"},"CLI"),"를 참고하세요."),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"requireensure-and-amd-require-are-asynchronous",parentName:"h2"}),"require.ensure and AMD require are asynchronous",(0,s.yg)("a",{href:"#requireensure-and-amd-require-are-asynchronous","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"이러한 함수는 이제 청크가 이미 로드된 경우 동기식으로 콜백을 호출하는 대신 항상 비동기식입니다."),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},(0,s.yg)("inlineCode",{parentName:"strong"},"require.ensure"),"는 이제 네이티브 ",(0,s.yg)("inlineCode",{parentName:"strong"},"Promise"),"에 의존합니다. 그것들이 없는 환경에서 ",(0,s.yg)("inlineCode",{parentName:"strong"},"require.ensure"),"를 사용한다면 폴리필이 필요할 것입니다.")),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"loader-configuration-is-through-options",parentName:"h2"}),"Loader configuration is through ",(0,s.yg)("inlineCode",{parentName:"h2"},"options"),(0,s.yg)("a",{href:"#loader-configuration-is-through-options","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,(0,s.yg)("inlineCode",{parentName:"p"},"webpack.config.js"),"에서 사용자 정의 속성으로 로더를 ",(0,s.yg)("em",{parentName:"p"},"더 이상")," 설정할 수없습니다. ",(0,s.yg)("inlineCode",{parentName:"p"},"options"),"을 통해 수행해야 합니다. ",(0,s.yg)("inlineCode",{parentName:"p"},"ts")," 속성이 있는 다음 설정은 더 이상 webpack 2에서 유효하지 않습니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,s.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,s.yg)("span",{className:"token comment",parentName:"code"},"//..."),"\n  module",(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    rules",(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"\n      ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        test",(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token regex",parentName:"code"},"/\\.tsx?$/"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n        loader",(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token string",parentName:"code"},"'ts-loader'"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,s.yg)("span",{className:"token comment",parentName:"code"},"// does not work with webpack 2"),"\n  ts",(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{")," transpileOnly",(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token boolean",parentName:"code"},"false")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,s.yg)("h3",null,(0,s.yg)("span",{id:"what-are-options",parentName:"h3"}),"What are ",(0,s.yg)("inlineCode",{parentName:"h3"},"options"),"?",(0,s.yg)("a",{href:"#what-are-options","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"좋은 질문입니다. 엄밀히 말하면 2가지로 해석 가능하며, 모두 webpack 로더를 설정하는 방법입니다. 고전적으로 ",(0,s.yg)("inlineCode",{parentName:"p"},"options"),"은 ",(0,s.yg)("inlineCode",{parentName:"p"},"query"),"라고 했으며 로더 이름에 추가할 수 있는 문자열이었습니다. 쿼리 문자열과 매우 유사하지만 실제로는 ",(0,s.yg)("a",{href:"https://github.com/webpack/loader-utils#parsequery",parentName:"p"},"더 강력한 기능"),"입니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,s.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,s.yg)("span",{className:"token comment",parentName:"code"},"//..."),"\n  module",(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    rules",(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"\n      ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        test",(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token regex",parentName:"code"},"/\\.tsx?$/"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n        loader",(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token string",parentName:"code"},"'ts-loader?'")," ",(0,s.yg)("span",{className:"token operator",parentName:"code"},"+")," ",(0,s.yg)("span",{className:"token constant",parentName:"code"},"JSON"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"."),(0,s.yg)("span",{className:"token function",parentName:"code"},"stringify"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{")," transpileOnly",(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token boolean",parentName:"code"},"false")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,s.yg)("p",null,"그러나 로더와 함께 제공되는 별도로 지정된 객체일 수도 있습니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,s.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,s.yg)("span",{className:"token comment",parentName:"code"},"//..."),"\n  module",(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    rules",(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"\n      ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        test",(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token regex",parentName:"code"},"/\\.tsx?$/"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n        loader",(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token string",parentName:"code"},"'ts-loader'"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n        options",(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{")," transpileOnly",(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token boolean",parentName:"code"},"false")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"loaderoptionsplugin-context",parentName:"h2"}),"LoaderOptionsPlugin context",(0,s.yg)("a",{href:"#loaderoptionsplugin-context","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"일부 로더는 컨텍스트 정보가 필요하고 설정에서 이를 읽습니다. 이것은 장기적으로 로더 옵션을 통해 전달되어야 합니다. 관련 옵션은 로더 문서를 참고하세요."),(0,s.yg)("p",null,"이전 로더와의 호환성을 유지하기 위해 플러그인을 통해 이 정보를 전달할 수 있습니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," plugins: [\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"   new webpack.LoaderOptionsPlugin({\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"     options: {\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"       context: __dirname\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"     }\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"   })\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," ]")))),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"debug",parentName:"h2"}),"debug",(0,s.yg)("a",{href:"#debug","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,(0,s.yg)("inlineCode",{parentName:"p"},"debug")," 옵션은 webpack 1에서 로더를 디버그 모드로 전환했습니다. 이것은 장기적으로 로더 옵션을 통해 전달되어야 합니다. 관련 옵션은 로더 문서를 참고하세요."),(0,s.yg)("p",null,"로더의 디버그 모드는 webpack 3 이상에서 제거됩니다."),(0,s.yg)("p",null,"이전 로더와의 호환성을 유지하기 위해 플러그인을 통해 로더를 디버그 모드로 전환할 수 있습니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"}," debug: true,\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," plugins: [\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"   new webpack.LoaderOptionsPlugin({\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"     debug: true\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"   })\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," ]")))),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"code-splitting-with-es2015",parentName:"h2"}),"Code Splitting with ES2015",(0,s.yg)("a",{href:"#code-splitting-with-es2015","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"webpack 1에서는 ",(0,s.yg)("a",{href:"/api/module-methods/#requireensure",parentName:"p"},(0,s.yg)("inlineCode",{parentName:"a"},"require.ensure()"))," 를 응용 프로그램의 청크를 지연 로드하는 방법으로 사용할 수 있습니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-javascript",parentName:"pre"},"require",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"."),(0,s.yg)("span",{className:"token function",parentName:"code"},"ensure"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token parameter",parentName:"code"},"require"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"var")," foo ",(0,s.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,s.yg)("span",{className:"token function",parentName:"code"},"require"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token string",parentName:"code"},"'./module'"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,s.yg)("p",null,"ES2015 로더 사양은 ",(0,s.yg)("a",{href:"/api/module-methods/#import-1",parentName:"p"},(0,s.yg)("inlineCode",{parentName:"a"},"import()")),"를 런타임에 동적으로 ES2015 모듈을 로드하는 방법으로 정의합니다. Webpack은 ",(0,s.yg)("inlineCode",{parentName:"p"},"import()"),"를 분리점으로 처리하고 요청된 모듈을 별도의 청크에 넣습니다. ",(0,s.yg)("inlineCode",{parentName:"p"},"import()"),"는 모듈 이름을 인수로 취하고 Promise를 반환합니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-js",parentName:"pre"},(0,s.yg)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,s.yg)("span",{className:"token function",parentName:"code"},"onClick"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"import"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token string",parentName:"code"},"'./module'"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")"),"\n    ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"."),(0,s.yg)("span",{className:"token function",parentName:"code"},"then"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token parameter",parentName:"code"},"module"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,s.yg)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      ",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"return")," module",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"."),"default",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n    ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")"),"\n    ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"."),(0,s.yg)("span",{className:"token function",parentName:"code"},"catch"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token parameter",parentName:"code"},"err"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,s.yg)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      console",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"."),(0,s.yg)("span",{className:"token function",parentName:"code"},"log"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token string",parentName:"code"},"'Chunk loading failed'"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n    ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"))),(0,s.yg)("p",null,"좋은 소식: 청크 로드 실패는 ",(0,s.yg)("inlineCode",{parentName:"p"},"Promise")," 기반이기 때문에 이제 처리할 수 있습니다."),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"dynamic-expressions",parentName:"h2"}),"Dynamic expressions",(0,s.yg)("a",{href:"#dynamic-expressions","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"부분 표현식을 ",(0,s.yg)("inlineCode",{parentName:"p"},"import()"),"에 전달할 수 있습니다. 이것은 CommonJS의 표현식과 유사하게 처리됩니다(webpack은 가능한 모든 파일과 함께 ",(0,s.yg)("a",{href:"/plugins/context-replacement-plugin/",parentName:"p"},"context"),"을 생성합니다)."),(0,s.yg)("p",null,(0,s.yg)("inlineCode",{parentName:"p"},"import()"),"는 가능한 각 모듈에 대해 별도의 청크를 생성합니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-js",parentName:"pre"},(0,s.yg)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,s.yg)("span",{className:"token function",parentName:"code"},"route"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token parameter",parentName:"code"},"path",(0,s.yg)("span",{className:"token punctuation",parentName:"span"},",")," query"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"return")," ",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"import"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token template-string",parentName:"code"},(0,s.yg)("span",{className:"token template-punctuation string",parentName:"span"},"`"),(0,s.yg)("span",{className:"token string",parentName:"span"},"./routes/"),(0,s.yg)("span",{className:"token interpolation",parentName:"span"},(0,s.yg)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"${"),"path",(0,s.yg)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"}")),(0,s.yg)("span",{className:"token string",parentName:"span"},"/route"),(0,s.yg)("span",{className:"token template-punctuation string",parentName:"span"},"`")),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"."),(0,s.yg)("span",{className:"token function",parentName:"code"},"then"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),"\n    ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token parameter",parentName:"code"},"route"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,s.yg)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,s.yg)("span",{className:"token class-name",parentName:"code"},"route",(0,s.yg)("span",{className:"token punctuation",parentName:"span"},"."),"Route"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),"query",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")"),"\n  ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),"\n",(0,s.yg)("span",{className:"token comment",parentName:"code"},"// This creates a separate chunk for each possible route"))),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"mixing-es2015-with-amd-and-commonjs",parentName:"h2"}),"Mixing ES2015 with AMD and CommonJS",(0,s.yg)("a",{href:"#mixing-es2015-with-amd-and-commonjs","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"AMD 및 CommonJS의 경우 세 가지 모듈 유형을 모두 자유롭게 혼합할 수 있습니다(동일한 파일 내에서도). 이 경우 Webpack은 babel 및 node-eps와 유사하게 동작합니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-javascript",parentName:"pre"},(0,s.yg)("span",{className:"token comment",parentName:"code"},"// CommonJS consuming ES2015 Module"),"\n",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"var")," book ",(0,s.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,s.yg)("span",{className:"token function",parentName:"code"},"require"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token string",parentName:"code"},"'./book'"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n\nbook",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"."),"currentPage",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\nbook",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"."),(0,s.yg)("span",{className:"token function",parentName:"code"},"readPage"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\nbook",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"."),"default ",(0,s.yg)("span",{className:"token operator",parentName:"code"},"===")," ",(0,s.yg)("span",{className:"token string",parentName:"code"},"'This is a book'"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-javascript",parentName:"pre"},(0,s.yg)("span",{className:"token comment",parentName:"code"},"// ES2015 Module consuming CommonJS"),"\n",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"import")," fs ",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"from")," ",(0,s.yg)("span",{className:"token string",parentName:"code"},"'fs'"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";")," ",(0,s.yg)("span",{className:"token comment",parentName:"code"},"// module.exports map to default"),"\n",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{")," readFileSync ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}")," ",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"from")," ",(0,s.yg)("span",{className:"token string",parentName:"code"},"'fs'"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";")," ",(0,s.yg)("span",{className:"token comment",parentName:"code"},"// named exports are read from returned object+"),"\n\n",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"typeof")," fs",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"."),"readFileSync ",(0,s.yg)("span",{className:"token operator",parentName:"code"},"===")," ",(0,s.yg)("span",{className:"token string",parentName:"code"},"'function'"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"typeof")," readFileSync ",(0,s.yg)("span",{className:"token operator",parentName:"code"},"===")," ",(0,s.yg)("span",{className:"token string",parentName:"code"},"'function'"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,s.yg)("p",null,"Webpack이 사용할 수 있도록 이러한 모듈 기호를 구문 분석하지 않도록 Babel에 지시하는 것이 중요합니다.\n",(0,s.yg)("inlineCode",{parentName:"p"},".babelrc")," 또는 ",(0,s.yg)("inlineCode",{parentName:"p"},"babel-loader")," 옵션에서 다음을 설정하면 됩니다."),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},".babelrc")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-json",parentName:"pre"},(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,s.yg)("span",{className:"token property",parentName:"code"},'"presets"'),(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),(0,s.yg)("span",{className:"token string",parentName:"code"},'"es2015"'),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{")," ",(0,s.yg)("span",{className:"token property",parentName:"code"},'"modules"'),(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token boolean",parentName:"code"},"false")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]"),"\n",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"))),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"hints",parentName:"h2"}),"Hints",(0,s.yg)("a",{href:"#hints","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"무언가를 바꿀 필요는 없지만 기회입니다."),(0,s.yg)("h3",null,(0,s.yg)("span",{id:"template-strings",parentName:"h3"}),"Template strings",(0,s.yg)("a",{href:"#template-strings","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"Webpack은 이제 표현식에서 템플릿 문자열을 지원합니다. 이는 Webpack 설정에서 사용할 수 있음을 의미합니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},' require("./templates/" + name);\n')),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"}," require(`./templates/${name}`);")))),(0,s.yg)("h3",null,(0,s.yg)("span",{id:"configuration-promise",parentName:"h3"}),"Configuration Promise",(0,s.yg)("a",{href:"#configuration-promise","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"Webpack은 이제 설정 파일에서 ",(0,s.yg)("inlineCode",{parentName:"p"},"Promise")," 반환을 지원합니다. 이렇게 하면 설정 파일에서 비동기 처리가 가능합니다."),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"webpack.config.js")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"."),(0,s.yg)("span",{className:"token function-variable function",parentName:"code"},"exports")," ",(0,s.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"return")," ",(0,s.yg)("span",{className:"token function",parentName:"code"},"fetchLangs"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"."),(0,s.yg)("span",{className:"token function",parentName:"code"},"then"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token parameter",parentName:"code"},"lang"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,s.yg)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    entry",(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token string",parentName:"code"},"'...'"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,s.yg)("span",{className:"token comment",parentName:"code"},"// ..."),"\n    plugins",(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),(0,s.yg)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,s.yg)("span",{className:"token class-name",parentName:"code"},"DefinePlugin"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{")," ",(0,s.yg)("span",{className:"token constant",parentName:"code"},"LANGUAGE"),(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," lang ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,s.yg)("h3",null,(0,s.yg)("span",{id:"advanced-loader-matching",parentName:"h3"}),"Advanced loader matching",(0,s.yg)("a",{href:"#advanced-loader-matching","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"Webpack은 이제 로더에 대해 일치시킬 더 많은 항목을 지원합니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,s.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,s.yg)("span",{className:"token comment",parentName:"code"},"//..."),"\n  module",(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    rules",(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"\n      ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        resource",(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token regex",parentName:"code"},"/filename/"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,s.yg)("span",{className:"token comment",parentName:"code"},'// matches "/path/filename.js"'),"\n        resourceQuery",(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token regex",parentName:"code"},"/^\\?querystring$/"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,s.yg)("span",{className:"token comment",parentName:"code"},'// matches "?querystring"'),"\n        issuer",(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token regex",parentName:"code"},"/filename/"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,s.yg)("span",{className:"token comment",parentName:"code"},'// matches "/path/something.js" if requested from "/path/filename.js"'),"\n      ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,s.yg)("h3",null,(0,s.yg)("span",{id:"more-cli-options",parentName:"h3"}),"More CLI options",(0,s.yg)("a",{href:"#more-cli-options","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"사용할 수 있는 몇 가지 새로운 CLI 옵션이 있습니다."),(0,s.yg)("p",null,(0,s.yg)("inlineCode",{parentName:"p"},'--define process.env.NODE_ENV="production"')," ",(0,s.yg)("a",{href:"/plugins/define-plugin/",parentName:"p"},(0,s.yg)("inlineCode",{parentName:"a"},"DefinePlugin")),"를 참고하세요."),(0,s.yg)("p",null,(0,s.yg)("inlineCode",{parentName:"p"},"--display-depth")," 는 각 모듈의 진입점까지의 거리를 표시합니다."),(0,s.yg)("p",null,(0,s.yg)("inlineCode",{parentName:"p"},"--display-used-exports")," 는 모듈에서 사용되는 내보내기 정보를 표시합니다."),(0,s.yg)("p",null,(0,s.yg)("inlineCode",{parentName:"p"},"--display-max-modules")," 는 출력에 표시되는 모듈의 수를 설정합니다(기본값은 15)."),(0,s.yg)("p",null,(0,s.yg)("inlineCode",{parentName:"p"},"-p"),"는 이제 ",(0,s.yg)("inlineCode",{parentName:"p"},"process.env.NODE_ENV"),"를 ",(0,s.yg)("inlineCode",{parentName:"p"},'"production"'),"으로 정의합니다."),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"loader-changes",parentName:"h2"}),"Loader changes",(0,s.yg)("a",{href:"#loader-changes","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"변경 사항은 로더 작성자에게만 해당됩니다."),(0,s.yg)("h3",null,(0,s.yg)("span",{id:"cacheable",parentName:"h3"}),"Cacheable",(0,s.yg)("a",{href:"#cacheable","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"이제 기본적으로 로더를 캐시할 수 있습니다. 로더는 캐시할 수 없는 경우 옵트아웃해야 합니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," // Cacheable loader\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," module.exports = function(source) {\n")),(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},"   this.cacheable();\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"   return source;\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," }")))),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," // Not cacheable loader\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," module.exports = function(source) {\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"   this.cacheable(false);\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"   return source;\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," }")))),(0,s.yg)("h3",null,(0,s.yg)("span",{id:"complex-options",parentName:"h3"}),"Complex options",(0,s.yg)("a",{href:"#complex-options","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"webpack 1")," 은 로더에 대해 ",(0,s.yg)("inlineCode",{parentName:"p"},"JSON.stringify")," 가능 옵션만 지원합니다."),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"webpack 2")," 는 이제 모든 JS 개체를 로더 옵션으로 지원합니다."),(0,s.yg)("p",null,"webpack ",(0,s.yg)("a",{href:"https://github.com/webpack/webpack/releases/tag/v2.2.1",parentName:"p"},"2.2.1")," 이전(즉, 2.0.0에서 2.2.0까지), ",(0,s.yg)("inlineCode",{parentName:"p"},"ident"),"를 사용하는 데 필요한 복잡한 옵션을 사용하여 ",(0,s.yg)("inlineCode",{parentName:"p"},"options")," 객체를 사용하여 다른 로더에서 참고할 수 있습니다. ",(0,s.yg)("strong",{parentName:"p"},"이는 2.2.1에서 제거되었으므로")," 현재 마이그레이션에서는 ",(0,s.yg)("inlineCode",{parentName:"p"},"ident")," 키를 사용할 필요가 없습니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},"{\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," test: /\\.ext/\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," use: {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"   loader: '...',\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"   options: {\n")),(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},"     ident: 'id',\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"     fn: () => require('./foo.js')\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"   }\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," }\n")),"}")))}t.isMDXComponent=!0,a.default=t}}]);