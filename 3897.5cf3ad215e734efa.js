"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3897],{3897:function(e,a,n){n.r(a),n(3696);var t=n(1445);function p(){return p=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},p.apply(this,arguments)}function i(e){let{components:a,...n}=e;return(0,t.yg)("wrapper",p({components:a},n),(0,t.yg)("p",null,"이 가이드는 webpack을 직접 사용할 때 webpack 5로 마이그레이션 하는 데 도움이 되는 것을 목표로 합니다. webpack을 실행하기 위해 더 높은 수준의 도구를 사용하는 경우 그 도구의 마이그레이션 지침을 참고하세요."),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"preparations",parentName:"h2"}),"Preparations",(0,t.yg)("a",{href:"#preparations","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,"Webpack 5는 Node.js 10.13.0 (LTS) 이상의 버전이 필요합니다. 따라서 여전히 이전 버전을 실행 중인 경우 Node.js를 업그레이드해야 합니다."),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"upgrade-webpack-4-and-its-pluginsloaders",parentName:"h2"}),"Upgrade webpack 4 and its plugins/loaders",(0,t.yg)("a",{href:"#upgrade-webpack-4-and-its-pluginsloaders","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("inlineCode",{parentName:"p"},"webpack")," 4의 사용 가능한 최신 버전으로 업그레이드하세요."),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"webpack >= 4를 사용하는 경우 최신 webpack 4 버전으로 업그레이드할 때 추가 지침이 필요하지 않습니다.")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"webpack 버전 4 미만을 사용하는 경우 ",(0,t.yg)("a",{href:"/migrate/4/",parentName:"p"},"webpack 4 마이그레이션 가이드"),"를 참고하세요.")))),(0,t.yg)("li",{parentName:"ol"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("inlineCode",{parentName:"p"},"webpack-cli")," 을 사용한다면 사용 가능한 최신 버전으로 업그레이드하세요.")),(0,t.yg)("li",{parentName:"ol"},(0,t.yg)("p",{parentName:"li"},"사용한 모든 플러그인과 로더를 사용 가능한 최신 버전으로 업그레이드하세요."),(0,t.yg)("p",{parentName:"li"},"일부 플러그인 또는 로더에는 webpack 5와 호환되기 위해 사용해야 하는 베타 버전이 있을 수 있습니다.\n최신 버전이 webpack 5만 지원할 수 있고, 이때 v4에서는 실패할 수 있으므로 업그레이드할 때는 개별 플러그인과 로더의 릴리스 정보를 읽어보세요. 이 경우 webpack 4를 지원하는 최신 버전으로 업데이트 하는 것을 권장합니다."))),(0,t.yg)("h3",null,(0,t.yg)("span",{id:"make-sure-your-build-has-no-errors-or-warnings",parentName:"h3"}),"Make sure your build has no errors or warnings",(0,t.yg)("a",{href:"#make-sure-your-build-has-no-errors-or-warnings","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"webpack"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"webpack-cli"),", 플러그인 그리고 로더를 업그레이드하면서 새로운 오류와 경고가 있을 수 있습니다. 빌드 중 사용 중단 경고를 주시하세요."),(0,t.yg)("p",null,"이 방법으로 ",(0,t.yg)("inlineCode",{parentName:"p"},"webpack"),"을 호출하여 어떤 플러그인과 로더가 책임이 있는지 파악하기 위해 사용 중단 경고에 대한 스택 추적을 얻을 수 있습니다."),(0,t.yg)("pre",null,(0,t.yg)("code",{className:"hljs language-bash",parentName:"pre"},"node --trace-deprecation node_modules/webpack/bin/webpack.js")),(0,t.yg)("p",null,"webpack 5는 이제는 사용되지 않는 기능을 모두 제거하므로 계속 진행하려면 빌드 중에 webpack 사용 중단 경고가 없는지 확인하세요."),(0,t.yg)("h3",null,(0,t.yg)("span",{id:"make-sure-to-use-mode",parentName:"h3"}),"Make sure to use ",(0,t.yg)("inlineCode",{parentName:"h3"},"mode"),(0,t.yg)("a",{href:"#make-sure-to-use-mode","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"mode"),"를 ",(0,t.yg)("a",{href:"/configuration/mode/#mode-production",parentName:"p"},"production")," 또는 ",(0,t.yg)("a",{href:"/configuration/mode/#mode-development",parentName:"p"},"develop"),"으로 설정하여 해당 기본값이 설정되어 있는지 확인하세요."),(0,t.yg)("h3",null,(0,t.yg)("span",{id:"update-outdated-options",parentName:"h3"}),"Update outdated options",(0,t.yg)("a",{href:"#update-outdated-options","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,"다음 옵션을 새 버전으로 업데이트합니다. (사용되는 경우)"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"optimization.hashedModuleIds: true")," → ",(0,t.yg)("inlineCode",{parentName:"li"},"optimization.moduleIds: 'hashed'")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"optimization.namedChunks: true")," → ",(0,t.yg)("inlineCode",{parentName:"li"},"optimization.chunkIds: 'named'")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"optimization.namedModules: true")," → ",(0,t.yg)("inlineCode",{parentName:"li"},"optimization.moduleIds: 'named'")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"NamedModulesPlugin")," → ",(0,t.yg)("inlineCode",{parentName:"li"},"optimization.moduleIds: 'named'")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"NamedChunksPlugin")," → ",(0,t.yg)("inlineCode",{parentName:"li"},"optimization.chunkIds: 'named'")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"HashedModuleIdsPlugin")," → ",(0,t.yg)("inlineCode",{parentName:"li"},"optimization.moduleIds: 'hashed'")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"optimization.noEmitOnErrors: false")," → ",(0,t.yg)("inlineCode",{parentName:"li"},"optimization.emitOnErrors: true")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"optimization.occurrenceOrder: true")," → ",(0,t.yg)("inlineCode",{parentName:"li"},"optimization: { chunkIds: 'total-size', moduleIds: 'size' }")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"optimization.splitChunks.cacheGroups.vendors")," → ",(0,t.yg)("inlineCode",{parentName:"li"},"optimization.splitChunks.cacheGroups.defaultVendors")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"optimization.splitChunks.cacheGroups.test(module, chunks)")," → ",(0,t.yg)("inlineCode",{parentName:"li"},"optimization.splitChunks.cacheGroups.test(module, { chunkGraph, moduleGraph })")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"Compilation.entries")," → ",(0,t.yg)("inlineCode",{parentName:"li"},"Compilation.entryDependencies")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"serve")," → ",(0,t.yg)("a",{href:"/configuration/dev-server/",parentName:"li"},(0,t.yg)("inlineCode",{parentName:"a"},"DevServer")),"를 위해 ",(0,t.yg)("inlineCode",{parentName:"li"},"serve"),"가 제거되었습니다."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{href:"/configuration/module/#ruleoptions--rulequery",parentName:"li"},(0,t.yg)("inlineCode",{parentName:"a"},"Rule.query"))," (v3부터 사용 중단됨) → ",(0,t.yg)("inlineCode",{parentName:"li"},"Rule.options"),"/",(0,t.yg)("inlineCode",{parentName:"li"},"UseEntry.options")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"Rule.loaders")," → ",(0,t.yg)("a",{href:"/configuration/module/#ruleuse",parentName:"li"},(0,t.yg)("inlineCode",{parentName:"a"},"Rule.use")))),(0,t.yg)("aside",{className:"tip"},(0,t.yg)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,t.yg)("p",{parentName:"aside"},"설정 옵션의 자세한 변경 사항은 ",(0,t.yg)("a",{href:"/blog/2020-10-10-webpack-5-release/#changes-to-the-configuration",parentName:"p"},"여기"),"에서 확인하세요.")),(0,t.yg)("h3",null,(0,t.yg)("span",{id:"test-webpack-5-compatibility",parentName:"h3"}),"Test webpack 5 compatibility",(0,t.yg)("a",{href:"#test-webpack-5-compatibility","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,"webpack 4 설정에서 다음 옵션을 설정하고 빌드가 여전히 올바르게 작동하는지 확인하세요."),(0,t.yg)("pre",null,(0,t.yg)("code",{className:"hljs language-javascript",parentName:"pre"},"module",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.yg)("span",{className:"token comment",parentName:"code"},"// ..."),"\n  node",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    Buffer",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token boolean",parentName:"code"},"false"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n    process",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token boolean",parentName:"code"},"false"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.yg)("p",null,"webpack 5의 설정을 업그레이드할 때 이 옵션을 다시 제거해야 합니다."),(0,t.yg)("aside",{className:"tip"},(0,t.yg)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,t.yg)("p",{parentName:"aside"},"webpack 5는 설정 스키마에서 이러한 옵션을 제거하고 항상 ",(0,t.yg)("inlineCode",{parentName:"p"},"false"),"를 사용합니다.")),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"upgrade-webpack-to-5",parentName:"h2"}),"Upgrade webpack to 5",(0,t.yg)("a",{href:"#upgrade-webpack-to-5","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,"이제 webpack을 버전 5로 업그레이드해 봅시다."),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"npm: ",(0,t.yg)("inlineCode",{parentName:"p"},"npm install webpack@latest"))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Yarn: ",(0,t.yg)("inlineCode",{parentName:"p"},"yarn add webpack@latest")))),(0,t.yg)("p",null,"Webpack 4 및 해당 플러그인/로더 업그레이드 단계에서 일부 플러그인/로더를 최신 버전으로 업그레이드할 수 없는 경우, 지금 잊지 말고 업그레이드하세요."),(0,t.yg)("h3",null,(0,t.yg)("span",{id:"clean-up-configuration",parentName:"h3"}),"Clean up configuration",(0,t.yg)("a",{href:"#clean-up-configuration","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"webpack 설정에서 ",(0,t.yg)("inlineCode",{parentName:"p"},"optimization.moduleIds")," 및 ",(0,t.yg)("inlineCode",{parentName:"p"},"optimization.chunkIds")," 제거를 고려하세요. 기본값은 ",(0,t.yg)("a",{href:"/configuration/mode/#mode-production",parentName:"p"},(0,t.yg)("inlineCode",{parentName:"a"},"production")," 모드"),"에서 장기 캐싱을 지원하고 ",(0,t.yg)("a",{href:"/configuration/mode/#mode-development",parentName:"p"},(0,t.yg)("inlineCode",{parentName:"a"},"development")," 모드"),"에서 디버깅을 지원하기 때문에 더 나을 수 있습니다.")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"webpack 설정에서 ",(0,t.yg)("inlineCode",{parentName:"p"},"[hash]")," placeholder를 사용할 때 ",(0,t.yg)("inlineCode",{parentName:"p"},"[contenthash]"),"로 변경하는 것이 좋습니다. 동일하지는 않지만, 더 효과적인 것으로 입증되었습니다.")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Yarn의 PnP 및 ",(0,t.yg)("inlineCode",{parentName:"p"},"pnp-webpack-plugin"),"을 사용하는 경우 좋은 소식이 있습니다. 이제 기본적으로 지원됩니다. 설정에서 제거해야 합니다.")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"정규 표현식과 함께 ",(0,t.yg)("inlineCode",{parentName:"p"},"IgnorePlugin"),"을 인수로 사용하는 경우 이제 ",(0,t.yg)("inlineCode",{parentName:"p"},"options")," object를 사용합니다. ",(0,t.yg)("inlineCode",{parentName:"p"},"new IgnorePlugin({ resourceRegExp: /regExp/ })"),".")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("inlineCode",{parentName:"p"},"node.fs: 'empty'"),"와 같은 것을 사용하는 경우 ",(0,t.yg)("inlineCode",{parentName:"p"},"resolve.fallback.fs: false"),"로 교체하세요.")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"webpack Node.js API에서 ",(0,t.yg)("inlineCode",{parentName:"p"},"watch: true"),"를 사용하는 경우 제거하세요. 호출하는 컴파일러 메서드가 나타내는 대로 설정할 필요가 없습니다. ",(0,t.yg)("inlineCode",{parentName:"p"},"watch()"),"의 경우 ",(0,t.yg)("inlineCode",{parentName:"p"},"true")," 또는 ",(0,t.yg)("inlineCode",{parentName:"p"},"run()"),"의 경우 ",(0,t.yg)("inlineCode",{parentName:"p"},"false")," 입니다.")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("inlineCode",{parentName:"p"},"raw-loader"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"url-loader")," 또는 ",(0,t.yg)("inlineCode",{parentName:"p"},"file-loader"),"를 사용하여 애셋들을 load 하기 위해 정의된 ",(0,t.yg)("inlineCode",{parentName:"p"},"rules"),"가 있는 경우 가까운 장래에 사용되지 않을 것이므로 ",(0,t.yg)("a",{href:"/guides/asset-modules/",parentName:"p"},"Asset Modules")," 을 대신 사용하세요.")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("inlineCode",{parentName:"p"},"target"),"이 함수로 설정되어 있으면 ",(0,t.yg)("inlineCode",{parentName:"p"},"false"),"로 업데이트하고 ",(0,t.yg)("inlineCode",{parentName:"p"},"plugins")," option 내에서 해당 함수를 적용하세요. 아래 예를 참고하세요."),(0,t.yg)("pre",{parentName:"li"},(0,t.yg)("code",{className:"hljs language-json",parentName:"pre"},(0,t.yg)("span",{className:"token comment",parentName:"code"},"// for webpack 4"),"\n",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    target",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," WebExtensionTarget(nodeConfig)\n",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),"\n\n",(0,t.yg)("span",{className:"token comment",parentName:"code"},"// for webpack 5"),"\n",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    target",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token boolean",parentName:"code"},"false"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n    plugins",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"["),"\n        WebExtensionTarget(nodeConfig)\n    ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"]"),"\n",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"output.library 또는 output.libraryTarget이 정의된 경우 속성 이름을 변경합니다 (output.libraryTarget -> output.library.type, output.library -> output.library.name). 예를 들면 다음과 같습니다."),(0,t.yg)("pre",{parentName:"li"},(0,t.yg)("code",{className:"hljs language-json",parentName:"pre"},(0,t.yg)("span",{className:"token comment",parentName:"code"},"// for webpack 4"),"\n",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    output",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      library",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," 'MyLibrary'",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n      libraryTarget",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," 'commonjs2'\n    ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),"\n",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),"\n\n",(0,t.yg)("span",{className:"token comment",parentName:"code"},"// for webpack 5"),"\n",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    output",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      library",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        name",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," 'MyLibrary'",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n        type",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," 'commonjs2'\n      ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),"\n    ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),"\n",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"))))),(0,t.yg)("p",null,"import를 통해 WebAssembly를 사용하는 경우 다음 두 단계 프로세스를 따라야 합니다."),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"webpack 4에서와 동일한 동작을 얻으려면 ",(0,t.yg)("inlineCode",{parentName:"li"},"experiments.syncWebAssembly: true"),"를 설정하여 이제는 사용되지 않는 사양을 활성화합니다."),(0,t.yg)("li",{parentName:"ul"},"webpack 5로 성공적으로 마이그레이션 한 후 WASM 통합을 위한 최신 사양을 사용하려면 ",(0,t.yg)("inlineCode",{parentName:"li"},"experiments")," 값을 ",(0,t.yg)("inlineCode",{parentName:"li"},"experiments: { asyncWebAssembly: true }"),"으로 변경합니다.")),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"optimization.splitChunks")," 를 재고하세요."),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"기본값 또는 ",(0,t.yg)("inlineCode",{parentName:"li"},"optimization.splitChunks: { chunks: 'all' }"),"을 사용하는 것을 권장합니다."),(0,t.yg)("li",{parentName:"ul"},"사용자 정의 설정을 사용할 때 ",(0,t.yg)("inlineCode",{parentName:"li"},"name: false"),"를 삭제하고 ",(0,t.yg)("inlineCode",{parentName:"li"},"name: string | function"),"을 ",(0,t.yg)("inlineCode",{parentName:"li"},"idHint: string | function"),"로 교체하세요."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"Optimization.splitChunks.cacheGroups: { default: false, vendors: false }"),"를 설정하여 기본값을 끌 수 있었습니다. 이것을 권장하지 않지만, webpack 5에서 같은 효과를 얻고 싶다면 ",(0,t.yg)("inlineCode",{parentName:"li"},"optimization.splitChunks.cacheGroups: { default: false, defaultVendors: false }"),"를 사용할 수 있습니다.")),(0,t.yg)("p",null,"기본값 제거를 고려하세요."),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"entry: './src/index.js'"),"는 생략할 수 있습니다. 이것이 기본값입니다."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"output.path: path.resolve(__dirname, 'dist')"),"는 생략할 수 있습니다. 이것이 기본값입니다."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"output.filename: '[name].js'"),"는 생략할 수 있습니다. 이것이 기본값입니다.")),(0,t.yg)("h3",null,(0,t.yg)("span",{id:"need-to-support-an-older-browser-like-ie-11",parentName:"h3"}),"Need to support an older browser like IE 11?",(0,t.yg)("a",{href:"#need-to-support-an-older-browser-like-ie-11","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"프로젝트에 대해 ",(0,t.yg)("a",{href:"https://github.com/browserslist/browserslist",parentName:"p"},"browserslist"),"를 활성화한 경우 webpack 5는 ",(0,t.yg)("inlineCode",{parentName:"p"},"browserslist")," 설정을 재사용하여 런타임 코드에 대해 내보낼 코드 스타일을 결정합니다."),(0,t.yg)("p",{parentName:"li"},"확실히 할 것들."),(0,t.yg)("ol",{parentName:"li"},(0,t.yg)("li",{parentName:"ol"},(0,t.yg)("a",{href:"/configuration/target/#root",parentName:"li"},(0,t.yg)("inlineCode",{parentName:"a"},"target")),"을 ",(0,t.yg)("inlineCode",{parentName:"li"},"browserslist"),"으로 설정하거나 webpack이 자동으로 ",(0,t.yg)("inlineCode",{parentName:"li"},"browserslist"),"을 설정하도록 ",(0,t.yg)("inlineCode",{parentName:"li"},"target"),"을 제거합니다."),(0,t.yg)("li",{parentName:"ol"},(0,t.yg)("inlineCode",{parentName:"li"},"IE 11"),"을 browserslist 설정에 추가합니다."))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("inlineCode",{parentName:"p"},"browserslist"),"가 없으면 webpack의 런타임 코드는 ES2015 구문(예: 화살표 함수)을 사용하여 더 작은 번들을 빌드합니다. 따라서 ES2015 구문을 지원하지 않는 브라우저(예: IE11)에 ES5 구문을 사용하려면 ",(0,t.yg)("inlineCode",{parentName:"p"},"target: ['web', 'es5']"),"를 설정해야 합니다.")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Node.js의 경우 빌드에는 ",(0,t.yg)("inlineCode",{parentName:"p"},"target")," option에 지원되는 Node.js 버전이 포함되며 webpack은 지원되는 구문을 자동으로 파악합니다. 예를 들어 ",(0,t.yg)("inlineCode",{parentName:"p"},"target: 'node8.6'"),"와 같이 사용합니다."))),(0,t.yg)("h3",null,(0,t.yg)("span",{id:"cleanup-the-code",parentName:"h3"}),"Cleanup the code",(0,t.yg)("a",{href:"#cleanup-the-code","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("h4",null,(0,t.yg)("span",{id:"using--webpackchunkname--",parentName:"h4"}),"Using ",(0,t.yg)("inlineCode",{parentName:"h4"},"/* webpackChunkName: '...' */"),(0,t.yg)("a",{href:"#using--webpackchunkname--","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,"사용 의도를 이해해야 합니다."),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"여기서 chunk's name은 public 용입니다."),(0,t.yg)("li",{parentName:"ul"},"오직 개발을 위한 이름이 아닙니다."),(0,t.yg)("li",{parentName:"ul"},"Webpack은 이를 사용하여 production 및 development 모드에서 파일 이름을 지정합니다."),(0,t.yg)("li",{parentName:"ul"},"Webpack 5는 ",(0,t.yg)("inlineCode",{parentName:"li"},"webpackChunkName"),"을 사용하지 않는 경우에도 ",(0,t.yg)("inlineCode",{parentName:"li"},"development")," 모드에서 유용한 파일 이름을 자동으로 할당합니다.")),(0,t.yg)("h4",null,(0,t.yg)("span",{id:"using-named-exports-from-json-modules",parentName:"h4"}),"Using named exports from JSON modules",(0,t.yg)("a",{href:"#using-named-exports-from-json-modules","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,"이것은 새 사양에서 지원되지 않으며 경고가 표시됩니다."),(0,t.yg)("pre",null,(0,t.yg)("code",{className:"hljs language-js",parentName:"pre"},(0,t.yg)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{")," version ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}")," ",(0,t.yg)("span",{className:"token keyword",parentName:"code"},"from")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},"'./package.json'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\nconsole",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.yg)("span",{className:"token function",parentName:"code"},"log"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),"version",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.yg)("p",null,"위 코드 대신 아래 코드를 사용하세요."),(0,t.yg)("pre",null,(0,t.yg)("code",{className:"hljs language-js",parentName:"pre"},(0,t.yg)("span",{className:"token keyword",parentName:"code"},"import")," pkg ",(0,t.yg)("span",{className:"token keyword",parentName:"code"},"from")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},"'./package.json'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\nconsole",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.yg)("span",{className:"token function",parentName:"code"},"log"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),"pkg",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"."),"version",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.yg)("h4",null,(0,t.yg)("span",{id:"cleanup-the-build-code",parentName:"h4"}),"Cleanup the build code",(0,t.yg)("a",{href:"#cleanup-the-build-code","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"const compiler = webpack(...);"),"을 사용할 때 컴파일러를 사용한 후에는 반드시 컴파일러를 닫아야 합니다. ",(0,t.yg)("inlineCode",{parentName:"li"},"compiler.close(callback);"),".",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"이것은 자동으로 닫히는 ",(0,t.yg)("inlineCode",{parentName:"li"},"webpack(..., callback)")," 양식에는 적용되지 않습니다."),(0,t.yg)("li",{parentName:"ul"},"사용자가 프로세스를 종료할 때까지 감시 모드에서 webpack을 사용하는 경우 선택 사항입니다. 이런 종류의 작업에는 감시 모드의 유휴 단계가 사용됩니다.")))),(0,t.yg)("h3",null,(0,t.yg)("span",{id:"run-a-single-build-and-follow-advice",parentName:"h3"}),"Run a single build and follow advice",(0,t.yg)("a",{href:"#run-a-single-build-and-follow-advice","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,"빌드 오류/경고를 주의 깊게 읽어보세요. 해당하는 조언이 없는 경우 issue를 생성해 주시면 해결해 드리겠습니다."),(0,t.yg)("p",null,"최소한 레벨 3 또는 4를 풀 때까지 다음 단계를 반복합니다."),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Level 1: ",(0,t.yg)("strong",{parentName:"p"},"Schema validation fails"),"."),(0,t.yg)("p",{parentName:"li"},"Configuration options가 변경되었습니다. ",(0,t.yg)("inlineCode",{parentName:"p"},"BREAKING CHANGE:")," 메모 또는 대신 사용해야 하는 옵션에 대한 힌트에 유효성 검사 오류가 있어야 합니다.")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Level 2: ",(0,t.yg)("strong",{parentName:"p"},"Webpack exits with an error"),"."),(0,t.yg)("p",{parentName:"li"},"오류 메시지는 변경해야 할 사항을 알려야 합니다.")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Level 3: ",(0,t.yg)("strong",{parentName:"p"},"Build Errors"),"."),(0,t.yg)("p",{parentName:"li"},"오류 메시지에는 ",(0,t.yg)("inlineCode",{parentName:"p"},"BREAKING CHANGE:")," 메모가 있어야 합니다.")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Level 4: ",(0,t.yg)("strong",{parentName:"p"},"Build Warnings"),"."),(0,t.yg)("p",{parentName:"li"},"경고 메시지는 무엇을 개선할 수 있는지 알려야 합니다.")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Level 5: ",(0,t.yg)("strong",{parentName:"p"},"Runtime Errors"),"."),(0,t.yg)("p",{parentName:"li"},"이것은 까다롭습니다. 문제를 찾으려면 디버그해야 할 것입니다. 일반적인 조언은 여기에서 어렵습니다. 그러나 런타임 오류와 관련하여 아래에 몇 가지 일반적인 조언을 나열합니다."),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"process"),"는 정의되지 않았습니다.",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"webpack 5는 더 이 Node.js 변수에 대한 폴리필을 포함하지 않습니다. 프론트엔드 코드에서 사용하지 마세요."),(0,t.yg)("li",{parentName:"ul"},"브라우저 사용을 지원하고 싶으신가요? 환경에 따라 다른 코드를 사용하려면 ",(0,t.yg)("inlineCode",{parentName:"li"},"export")," 또는 ",(0,t.yg)("inlineCode",{parentName:"li"},"imports")," package.json 필드를 사용하세요.",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"또한 이전 번들러를 지원하려면 ",(0,t.yg)("inlineCode",{parentName:"li"},"browser")," 필드를 사용합니다."),(0,t.yg)("li",{parentName:"ul"},"대안: ",(0,t.yg)("inlineCode",{parentName:"li"},"typeof process")," 검사로 코드 블록을 래핑 합니다. 이는 번들 크기에 부정적인 영향을 미칩니다."))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"process.env.VARIABLE"),"과 함께 환경 변수를 사용하고 싶으신가요? 설정에서 이러한 변수를 정의하려면 ",(0,t.yg)("inlineCode",{parentName:"li"},"DefinePlugin")," 또는 ",(0,t.yg)("inlineCode",{parentName:"li"},"EnvironmentPlugin"),"을 사용해야 합니다.",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"그것 대신 ",(0,t.yg)("inlineCode",{parentName:"li"},"VARIABLE")," 사용을 고려하고 ",(0,t.yg)("inlineCode",{parentName:"li"},"typeof VARIABLE !== 'undefined'"),"도 확인하세요. ",(0,t.yg)("inlineCode",{parentName:"li"},"process.env"),"는 Node.js에 따라 다르며 프론트엔드 코드에서는 피해야 합니다."))))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"auto"),"가 포함된 URL을 가리키는 404 오류",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"모든 생태계 도구가 ",(0,t.yg)("inlineCode",{parentName:"li"},'output.publicPath: "auto"'),"를 통한 새로운 기본 자동 ",(0,t.yg)("inlineCode",{parentName:"li"},"publicPath"),"에 대해 준비된 것은 아닙니다",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"대신 고정값 ",(0,t.yg)("inlineCode",{parentName:"li"},'output.publicPath: ""'),"를 사용하세요."))))))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Level 6: ",(0,t.yg)("strong",{parentName:"p"},"Deprecation Warnings"),"."),(0,t.yg)("p",{parentName:"li"},"사용 중단 경고가 많을 수 있습니다. 이것은 직접적인 문제가 아닙니다. 플러그인은 핵심 변경 사항을 따라잡을 시간이 필요합니다. 이러한 지원 중단을 플러그인에 보고하세요. 이러한 지원 중단은 경고일 뿐이며 빌드는 여전히 약간의 단점(예: 성능 저하)으로만 작동합니다."),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"--no-deprecation")," 플래그와 함께 node를 실행하여 사용 중단 경고를 숨길 수 있습니다(예: ",(0,t.yg)("inlineCode",{parentName:"li"},"node --no-deprecation node_modules/webpack/bin/webpack.js)"),". 이것은 일시적인 해결 방법일 뿐입니다."),(0,t.yg)("li",{parentName:"ul"},"플러그인 및 로더 기여자는 사용 중단 메시지의 조언을 따라 코드를 개선할 수 있습니다."))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Level 7: ",(0,t.yg)("strong",{parentName:"p"},"Performance issues"),"."),(0,t.yg)("p",{parentName:"li"},"일반적으로 webpack 5에서는 성능이 향상되지만, 성능이 나빠지는 경우도 있습니다."),(0,t.yg)("p",{parentName:"li"},"그리고 상황을 개선하기 위해 다음과 같이 할 수 있습니다."),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"시간이 어디에서 소요되었는지 설명합니다.",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"--profile --progress"),"는 이제 간단한 성능 프로필을 표시합니다."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"node --inspect-brk node_modules/webpack/bin/webpack.js")," + ",(0,t.yg)("a",{href:"chrome://inspect",parentName:"li"},(0,t.yg)("inlineCode",{parentName:"a"},"chrome://inspect"))," / ",(0,t.yg)("a",{href:"edge://inspect",parentName:"li"},(0,t.yg)("inlineCode",{parentName:"a"},"edge://inspect"))," (프로파일러 탭 참고).",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"이러한 프로필을 파일에 저장하고 이슈에 제공할 수 있습니다."),(0,t.yg)("li",{parentName:"ul"},"어떤 경우에는 더 나은 스택 추적을 위해 ",(0,t.yg)("inlineCode",{parentName:"li"},"--no-turbo-inlining")," 플래그를 사용해 보세요."))))),(0,t.yg)("li",{parentName:"ul"},"증분 빌드에서 모듈을 빌드하는 시간은 webpack 4에서와 같이 안전하지 않은 캐싱으로 되돌리면 개선될 수 있습니다.",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"module.unsafeCache: true")),(0,t.yg)("li",{parentName:"ul"},"그러나 이것은 코드 기반의 일부 변경 사항을 처리하는 기능에 영향을 미칠 수 있습니다."))),(0,t.yg)("li",{parentName:"ul"},"Full build",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"이제는 사용되지 않는 기능에 대한 이전 버전과의 호환성 계층은 일반적으로 새 기능에 비해 성능이 저하됩니다."),(0,t.yg)("li",{parentName:"ul"},"경고를 많이 생성하면 무시하더라도 빌드 성능에 영향을 줄 수 있습니다."),(0,t.yg)("li",{parentName:"ul"},"Source Maps는 비용이 많이 듭니다. 문서에서 ",(0,t.yg)("a",{href:"/configuration/devtool/",parentName:"li"},(0,t.yg)("inlineCode",{parentName:"a"},"devtool"))," 옵션을 확인하여 다양한 옵션을 비교하세요."),(0,t.yg)("li",{parentName:"ul"},"바이러스 백신 보호는 파일 시스템 액세스 성능에 영향을 줄 수 있습니다."),(0,t.yg)("li",{parentName:"ul"},"영구 캐싱은 반복적인 전체 빌드를 개선하는 데 도움이 될 수 있습니다."),(0,t.yg)("li",{parentName:"ul"},"모듈 연합을 사용하면 애플리케이션을 여러 개의 작은 빌드로 분할할 수 있습니다.")))))),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"everything-works",parentName:"h2"}),"Everything works?",(0,t.yg)("a",{href:"#everything-works","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,"webpack 5로 성공적으로 마이그레이션 했다고 트윗해주세요. ",(0,t.yg)("a",{href:"https://twitter.com/intent/tweet?source=https://webpack.js.org/migrate/5/&text=I%20just%20migrated%20to%20webpack%205%20using%20its%20migration%20guide!%20&via=webpack&hashtags=webpack,webpack5",parentName:"p"},"Tweet it")),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"it-is-not-working",parentName:"h2"}),"It is not working?",(0,t.yg)("a",{href:"#it-is-not-working","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,(0,t.yg)("a",{href:"https://github.com/webpack/webpack/issues/new?template=Bug_report.md",parentName:"p"},"issue"),"를 만들고 마이그레이션 중에 발생한 문제에 대해 알려주세요."),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"something-missing-in-this-guide",parentName:"h2"}),"Something missing in this guide?",(0,t.yg)("a",{href:"#something-missing-in-this-guide","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,(0,t.yg)("a",{href:"https://github.com/webpack/webpack.js.org/edit/main/src/content/migrate/5.mdx",parentName:"p"},"Pull Request"),"를 만들어 이 가이드를 사용하는 다음 사람을 도와주세요."),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"changes-to-internals",parentName:"h2"}),"Changes to internals",(0,t.yg)("a",{href:"#changes-to-internals","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,"유형 추가, 코드 리팩토링 및 메서드 이름 변경과 같은 webpack 내부의 변경 사항은 관심 있는 모든 사람을 위해 여기에 나열됩니다. 그러나 일반적인 사용 사례 마이그레이션의 일부로 의도한 것은 아닙니다."),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"Module.nameForCondition"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"Module.updateCacheModule")," 및 ",(0,t.yg)("inlineCode",{parentName:"li"},"Module.chunkCondition"),"은 더 이상 선택 사항이 아닙니다.")),(0,t.yg)("h3",null,(0,t.yg)("span",{id:"getoptions-method-for-loaders",parentName:"h3"}),"getOptions method for Loaders",(0,t.yg)("a",{href:"#getoptions-method-for-loaders","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,"Webpack 5는 로더 컨텍스트에서 사용할 수 있는 내장 ",(0,t.yg)("a",{href:"/api/loaders/#thisgetoptionsschema",parentName:"p"},(0,t.yg)("inlineCode",{parentName:"a"},"this.getOptions"))," 메서드와 함께 제공됩니다. 이것은 이전에 선호하는 ",(0,t.yg)("a",{href:"https://github.com/webpack/schema-utils",parentName:"p"},"schema-utils"),"에서 ",(0,t.yg)("inlineCode",{parentName:"p"},"getOptions")," 메소드를 사용했던 로더에 대한 주요 변경 사항입니다."),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"this.getOptions"),"는 webpack 5부터 사용할 수 있습니다."),(0,t.yg)("li",{parentName:"ul"},"JSON5 대신 쿼리 문자열로 JSON을 지원합니다. ",(0,t.yg)("inlineCode",{parentName:"li"},"?{arg:true}")," → ",(0,t.yg)("inlineCode",{parentName:"li"},'?{"arg":true}'),". JSON5를 사용하는 것은 해당 로더의 문서에서 이제는 사용되지 않는 것으로 간주하고 문서화되어야 합니다."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{href:"https://github.com/webpack/loader-utils",parentName:"li"},(0,t.yg)("inlineCode",{parentName:"a"},"loader-utils")),"에는 쿼리 문자열 구문 분석을 위한 특정 동작이 있습니다(",(0,t.yg)("inlineCode",{parentName:"li"},"true"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"false")," 및 ",(0,t.yg)("inlineCode",{parentName:"li"},"null"),"은 ",(0,t.yg)("inlineCode",{parentName:"li"},"string"),"로 구문 분석되지 않고 원시 값으로 구문 분석됨). 기본 ",(0,t.yg)("a",{href:"https://nodejs.org/api/querystring.html",parentName:"li"},(0,t.yg)("inlineCode",{parentName:"a"},"querystring"))," 구문 분석(Node.js와 함께 제공됨) 을 사용하는 새로운 내장 ",(0,t.yg)("inlineCode",{parentName:"li"},"this.getOptions")," 메서드의 경우에는 그렇지 않습니다. ",(0,t.yg)("inlineCode",{parentName:"li"},"this.getOptions")," 메소드를 사용하여 옵션을 가져온 후 로더의 코드에서 이러한 경우에 대한 사용자 정의 동작을 추가하는 것은 여전히 가능합니다."),(0,t.yg)("li",{parentName:"ul"},"새로운 ",(0,t.yg)("inlineCode",{parentName:"li"},"this.getOptions")," 메서드에 대해 스키마 인수는 선택 사항이지만 로더 옵션에 대한 스키마 유효성 검사를 추가하는 것이 좋습니다. 스키마의 ",(0,t.yg)("inlineCode",{parentName:"li"},"title")," 필드는 유효성 검사 오류 메시지를 사용자 정의하는 데 사용할 수 있습니다. 예를 들면 ",(0,t.yg)("inlineCode",{parentName:"li"},'"title": "My Loader ooptions"'),"는 다음과 같은 방식으로 오류를 표시합니다. ",(0,t.yg)("inlineCode",{parentName:"li"},"Invalid ooooptions object. My Loader has been initialised using an ooooptions object that does not match the API schema. - ooooptions.foo.bar.baz should be a string."))))}i.isMDXComponent=!0,a.default=i}}]);