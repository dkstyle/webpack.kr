"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8366],{8366:function(a,e,n){n.r(e),n(7378);var t=n(2682);function p(){return p=Object.assign?Object.assign.bind():function(a){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(a[t]=n[t])}return a},p.apply(this,arguments)}function s(a){let{components:e,...n}=a;return(0,t.kt)("wrapper",p({components:e},n),(0,t.kt)("p",null,"코드를 작성할 때, 이미 필요한 것을 로드할 많은 코드 분할 지점을 추가했을 것입니다. 컴파일 후에 어떤 청크가 너무 작다는 것을 깨달을 것입니다. 이는 더 큰 HTTP 오버헤드를 만듭니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"LimitChunkCountPlugin"),"은 청크를 합침으로써 그것들을 후속 처리할 수 있게 해줍니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,t.kt)("span",{className:"token class-name",parentName:"code"},"webpack",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"."),"optimize",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"."),"LimitChunkCountPlugin"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// Options..."),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"options",parentName:"h2"}),"Options",(0,t.kt)("a",{href:"#options","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"다음의 옵션들이 지원됩니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"maxchunks",parentName:"h3"}),"maxChunks",(0,t.kt)("a",{href:"#maxchunks","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"number")),(0,t.kt)("p",null,"청크의 최대 개수를 ",(0,t.kt)("inlineCode",{parentName:"p"},"1"),"보다 크거나 같도록 제한합니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"1"),"을 사용하는 것은 엔트리/메인 청크가 카운트에 포함될 때 추가적인 청크가 더해지는 것을 방지합니다."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," webpack ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token function",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'webpack'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\nmodule",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// ..."),"\n  plugins",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"\n    ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,t.kt)("span",{className:"token class-name",parentName:"code"},"webpack",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"."),"optimize",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"."),"LimitChunkCountPlugin"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      maxChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"5"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"minchunksize",parentName:"h3"}),"minChunkSize",(0,t.kt)("a",{href:"#minchunksize","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"위의 지정된 청크 크기를 유지하는 것은 이 플러그인에서 구현하지 않습니다. ",(0,t.kt)("a",{href:"/plugins/min-chunk-size-plugin",parentName:"p"},"MinChunkSizePlugin"),"을 대신 사용하세요."),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"usage-via-cli",parentName:"h2"}),"Usage via CLI",(0,t.kt)("a",{href:"#usage-via-cli","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"이 플러그인과 옵션은 ",(0,t.kt)("a",{href:"/api/cli/",parentName:"p"},"CLI"),"를 통해 호출될 수도 있습니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-bash",parentName:"pre"},"webpack --optimize-max-chunks ",(0,t.kt)("span",{className:"token number",parentName:"code"},"15"))))}s.isMDXComponent=!0,e.default=s}}]);