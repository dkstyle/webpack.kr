"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6197],{6197:function(e,a,n){n.r(a),n(3696);var t=n(1445);function p(){return p=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},p.apply(this,arguments)}function s(e){let{components:a,...n}=e;return(0,t.yg)("wrapper",p({components:a},n),(0,t.yg)("p",null,"IgnorePlugin은 정규 표현식 또는 필터 함수와 일치하는 ",(0,t.yg)("inlineCode",{parentName:"p"},"import")," 또는 ",(0,t.yg)("inlineCode",{parentName:"p"},"require")," 호출에 대한 모듈 생성을 방지합니다."),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"using-regular-expressions",parentName:"h2"}),"Using regular expressions",(0,t.yg)("a",{href:"#using-regular-expressions","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"resourceRegExp"),": 리소스 테스트를 위한 정규 표현식"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"contextRegExp"),": (선택) 컨텍스트 (디렉터리) 테스트를 위한 정규 표현식")),(0,t.yg)("pre",null,(0,t.yg)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.yg)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,t.yg)("span",{className:"token class-name",parentName:"code"},"webpack",(0,t.yg)("span",{className:"token punctuation",parentName:"span"},"."),"IgnorePlugin"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{")," resourceRegExp",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},",")," contextRegExp ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"using-filter-functions",parentName:"h2"}),"Using filter functions",(0,t.yg)("a",{href:"#using-filter-functions","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"checkResource (resource, context)"),"는 ",(0,t.yg)("inlineCode",{parentName:"li"},"resource"),"와 ",(0,t.yg)("inlineCode",{parentName:"li"},"context"),"를 인수로 받는 필터 함수로, 불리언 값을 반환해야 합니다.")),(0,t.yg)("pre",null,(0,t.yg)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.yg)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,t.yg)("span",{className:"token class-name",parentName:"code"},"webpack",(0,t.yg)("span",{className:"token punctuation",parentName:"span"},"."),"IgnorePlugin"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.yg)("span",{className:"token function",parentName:"code"},"checkResource"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.yg)("span",{className:"token parameter",parentName:"code"},"resource"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    ",(0,t.yg)("span",{className:"token comment",parentName:"code"},"// 리소스를 사용합니다"),"\n    ",(0,t.yg)("span",{className:"token keyword",parentName:"code"},"return")," ",(0,t.yg)("span",{className:"token boolean",parentName:"code"},"true")," ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"|")," ",(0,t.yg)("span",{className:"token boolean",parentName:"code"},"false"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n  ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"example-of-ignoring-moment-locales",parentName:"h2"}),"Example of ignoring Moment Locales",(0,t.yg)("a",{href:"#example-of-ignoring-moment-locales","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,(0,t.yg)("a",{href:"https://momentjs.com/",parentName:"p"},"moment")," 2.18 부터, 모든 로케일이 코어 라이브러리와 함께 번들로 제공됩니다 (",(0,t.yg)("a",{href:"https://github.com/moment/moment/issues/2373",parentName:"p"},"깃허브 이슈"),"를 참고하세요)."),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"IgnorePlugin"),"에 전달된 ",(0,t.yg)("inlineCode",{parentName:"p"},"resourceRegExp")," 파라미터는 import 또는 require 되는 해석된 파일 이름 혹은 절대 모듈 이름에 대해 테스트 되지 않고, ",(0,t.yg)("em",{parentName:"p"},"가져오기가 실행되는 소스 코드 내에서")," ",(0,t.yg)("inlineCode",{parentName:"p"},"require")," 또는 ",(0,t.yg)("inlineCode",{parentName:"p"},"import"),"로 전달된 ",(0,t.yg)("em",{parentName:"p"},"문자열")," 에 대해 테스트 됩니다. 예를 들어 ",(0,t.yg)("inlineCode",{parentName:"p"},"node_modules/moment/locale/*.js"),"를 제외하려는 경우 다음과 같은 작업이 수행되지 않습니다."),(0,t.yg)("pre",null,(0,t.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.yg)("span",{className:"token line",parentName:"span"},"new webpack.IgnorePlugin({ resourceRegExp: /moment\\/locale\\// });")))),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"moment"),"는 아래의 코드로 가져오기 때문입니다."),(0,t.yg)("pre",null,(0,t.yg)("code",{className:"hljs language-js",parentName:"pre"},(0,t.yg)("span",{className:"token function",parentName:"code"},"require"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.yg)("span",{className:"token string",parentName:"code"},"'./locale/'")," ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"+")," name",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.yg)("p",null,"첫 번째 정규 표현식은 ",(0,t.yg)("inlineCode",{parentName:"p"},"'./locale/'")," 문자열과 일치해야 합니다. 그다음 두 번째 ",(0,t.yg)("inlineCode",{parentName:"p"},"contextRegExp")," 파라미터를 사용하여 가져오기가 수행된 특정 디렉터리를 선택합니다. 다음은 로케일 파일이 무시되는 경우입니다."),(0,t.yg)("pre",null,(0,t.yg)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.yg)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,t.yg)("span",{className:"token class-name",parentName:"code"},"webpack",(0,t.yg)("span",{className:"token punctuation",parentName:"span"},"."),"IgnorePlugin"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  resourceRegExp",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token regex",parentName:"code"},"/^\\.\\/locale$/"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n  contextRegExp",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token regex",parentName:"code"},"/moment$/"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.yg)("p",null,"이는 ",(0,t.yg)("inlineCode",{parentName:"p"},"'moment'"),"로 끝나는 디렉터리에서 ",(0,t.yg)("inlineCode",{parentName:"p"},"'./locale'"),"과 일치하는 모든 require 문이 무시됨을 의미합니다."))}s.isMDXComponent=!0,a.default=s}}]);