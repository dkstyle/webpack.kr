"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[486],{486:function(e,a,n){n.r(a),n(7378);var t=n(2682);function s(){return s=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},s.apply(this,arguments)}function p(e){let{components:a,...n}=e;return(0,t.kt)("wrapper",s({components:a},n),(0,t.kt)("p",null,"이 플러그인은 해시가 모듈의 상대 경로를 기반으로 해 모듈 ID로 4개의 문자열이 생성됩니다. 프로덕션에 사용할 것을 권장합니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,t.kt)("span",{className:"token class-name",parentName:"code"},"webpack",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"."),"ids",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"."),"HashedModuleIdsPlugin"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 옵션..."),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"options",parentName:"h2"}),"Options",(0,t.kt)("a",{href:"#options","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"이 플러그인은 다음 옵션을 지원합니다:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"context"),": 이름을 만들기 위한 컨텍스트 디렉터리 (",(0,t.kt)("strong",{parentName:"li"},"절대 경로"),")."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"hashFunction"),": 사용할 해싱 알고리즘, 기본 값은 ",(0,t.kt)("inlineCode",{parentName:"li"},"'md4'"),"입니다. Node.JS의 ",(0,t.kt)("a",{href:"https://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm_options",parentName:"li"},(0,t.kt)("inlineCode",{parentName:"a"},"crypto.createHash")),"의 모든 기능이 지원됩니다."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"hashDigest"),": 해시를 생성할 때 사용할 인코딩, 기본 값은 ",(0,t.kt)("inlineCode",{parentName:"li"},"'base64'"),"입니다. Node.JS의 ",(0,t.kt)("a",{href:"https://nodejs.org/api/crypto.html#crypto_hash_digest_encoding",parentName:"li"},(0,t.kt)("inlineCode",{parentName:"a"},"hash.digest")),"의 모든 인코딩이 지원됩니다."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"hashDigestLength"),": 사용할 해시 다이제스트의 접두사 길이, 기본 값은 ",(0,t.kt)("inlineCode",{parentName:"li"},"4"),"입니다. 생성된 일부 ID는 모듈 ID 충돌을 피하기 위해 여기에서 지정된 것보다 길 수 있습니다.")),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"usage",parentName:"h2"}),"Usage",(0,t.kt)("a",{href:"#usage","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"다음은 이 플러그인을 사용하는 방법의 예시입니다:"),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,t.kt)("span",{className:"token class-name",parentName:"code"},"webpack",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"."),"ids",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"."),"HashedModuleIdsPlugin"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  context",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," __dirname",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  hashFunction",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'sha256'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  hashDigest",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'hex'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  hashDigestLength",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"20"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))))}p.isMDXComponent=!0,a.default=p}}]);