"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[388],{388:function(e,n,a){a.r(n),a(7378);var t=a(2682);function l(){return l=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e},l.apply(this,arguments)}function i(e){let{components:n,...a}=e;return(0,t.kt)("wrapper",l({components:n},a),(0,t.kt)("p",null,"Compilation 객체에는 사용 가능한 많은 메소드와 훅이 있습니다. 이 페이지에서는, 사용 가능한 메소드와 프로퍼티를 나열합니다."),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"compilation-object-methods",parentName:"h2"}),"compilation object methods",(0,t.kt)("a",{href:"#compilation-object-methods","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"getstats",parentName:"h3"}),"getStats",(0,t.kt)("a",{href:"#getstats","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function")),(0,t.kt)("p",null,"현재 컴파일에 대한 State 객체를 반환합니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"addmodule",parentName:"h3"}),"addModule",(0,t.kt)("a",{href:"#addmodule","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (module, cacheGroup)")),(0,t.kt)("p",null,"현재 컴파일에 모듈을 추가합니다."),(0,t.kt)("p",null,"파라미터:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"module")," - 추가할 모듈."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"cacheGroup")," - 모듈의 ",(0,t.kt)("inlineCode",{parentName:"li"},"cacheGroup"),".")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"getmodule",parentName:"h3"}),"getModule",(0,t.kt)("a",{href:"#getmodule","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (module)")),(0,t.kt)("p",null,"식별자를 통해 컴파일에서 모듈을 가져옵니다."),(0,t.kt)("p",null,"파라미터:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"module")," - 가져올 모듈. 식별자는 ",(0,t.kt)("inlineCode",{parentName:"li"},"module.identifier()")," 메소드를 사용한 컴파일을 통해 모듈에서 추출됩니다.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"findmodule",parentName:"h3"}),"findModule",(0,t.kt)("a",{href:"#findmodule","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (module)")),(0,t.kt)("p",null,"식별자로 모듈 검색을 시도합니다."),(0,t.kt)("p",null,"파라미터:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"module")," - 검색할 모듈. 식별자는 ",(0,t.kt)("inlineCode",{parentName:"li"},"module.identifier()")," 메소드를 사용한 컴파일을 통해 모듈에서 추출됩니다.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"buildmodule",parentName:"h3"}),"buildModule",(0,t.kt)("a",{href:"#buildmodule","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (module, optional, origin, dependencies)")),(0,t.kt)("p",null,"주어진 모듈을 빌드합니다."),(0,t.kt)("p",null,"파라미터:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"module")," - 빌드할 모듈."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"optional")," - 선택적 플래그."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"origin")," - 모듈 빌드가 요청된 원본 모듈."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"dependencies")," - 빌드할 모듈의 선택적 의존성.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"processmoduledependencies",parentName:"h3"}),"processModuleDependencies",(0,t.kt)("a",{href:"#processmoduledependencies","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (module, callback)")),(0,t.kt)("p",null,"주어진 모듈 의존성을 처리합니다."),(0,t.kt)("p",null,"파라미터:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"module")," - 의존성에 대해 처리할 모듈."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"callback")," - 모듈의 의존성이 처리되었을 때 호출되는 함수.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"addentry",parentName:"h3"}),"addEntry",(0,t.kt)("a",{href:"#addentry","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (context, entry, name, callback)")),(0,t.kt)("p",null,"컴파일에 엔트리를 추가합니다."),(0,t.kt)("p",null,"파라미터:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"context")," - 엔트리의 컨텍스트 경로."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"entry")," - 엔트리 의존성."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"name")," - 엔트리 이름."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"callback")," - addEntry가 완료될 때 호출되는 함수.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"rebuildmodule",parentName:"h3"}),"rebuildModule",(0,t.kt)("a",{href:"#rebuildmodule","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (module, thisCallback)")),(0,t.kt)("p",null,"모듈 재빌드를 트리거 합니다."),(0,t.kt)("p",null,"파라미터:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"module")," - 재빌드 할 모듈."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"thisCallback")," - 모듈이 재빌드를 마쳤을 때 호출되는 함수.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"finish",parentName:"h3"}),"finish",(0,t.kt)("a",{href:"#finish","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (callback)")),(0,t.kt)("p",null,"컴파일을 완료하고 주어진 콜백을 호출합니다."),(0,t.kt)("p",null,"파라미터:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"callback")," - 컴파일이 완료되면 호출되는 함수.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"seal",parentName:"h3"}),"seal",(0,t.kt)("a",{href:"#seal","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (callback)")),(0,t.kt)("p",null,"컴파일을 봉인합니다."),(0,t.kt)("p",null,"파라미터:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"callback")," - 컴파일이 봉인되었을 때 호출되는 함수.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"unseal",parentName:"h3"}),"unseal",(0,t.kt)("a",{href:"#unseal","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function")),(0,t.kt)("p",null,"컴파일 봉인을 해제합니다."),(0,t.kt)("p",null,"파라미터:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"callback")," - 컴파일 봉인이 해제될 때 호출되는 함수.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"reportdependencyerrorsandwarnings",parentName:"h3"}),"reportDependencyErrorsAndWarnings",(0,t.kt)("a",{href:"#reportdependencyerrorsandwarnings","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (module, blocks)")),(0,t.kt)("p",null,"컴파일 오류 및 경고에 주어진 모듈의 오류 및 경고를 추가합니다."),(0,t.kt)("p",null,"파라미터:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"module")," - 오류 및 경고를 보고할 모듈."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"blocks")," - 보고할 의존성 블록 집합.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"addchunkingroup",parentName:"h3"}),"addChunkInGroup",(0,t.kt)("a",{href:"#addchunkingroup","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (groupOptions, module, loc, request)")),(0,t.kt)("p",null,"기존 청크 그룹에 모듈을 추가하거나 새 그룹을 만듭니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"chunkGroup"),"을 반환합니다."),(0,t.kt)("p",null,"파라미터:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"groupOptions")," - 청크 그룹에 대한 옵션."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"module")," - 청크 그룹을 참조하는 모듈."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"loc")," - 청크 그룹이 참조되는 위치(모듈 내부)."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"request")," - 청크 그룹이 참조되는 요청.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"addchunk",parentName:"h3"}),"addChunk",(0,t.kt)("a",{href:"#addchunk","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (name)")),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"compilation.chunks"),"에 새 청크를 만들고 추가합니다. 해당 ",(0,t.kt)("inlineCode",{parentName:"p"},"chunk"),"를 반환합니다."),(0,t.kt)("p",null,"파라미터:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"name")," - 청크 이름.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"assigndepth",parentName:"h3"}),"assignDepth",(0,t.kt)("a",{href:"#assigndepth","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (module)")),(0,t.kt)("p",null,"주어진 모듈과 그 의존성 블록에 재귀적으로 ",(0,t.kt)("inlineCode",{parentName:"p"},"depth"),"를 할당합니다."),(0,t.kt)("p",null,"파라미터:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"module")," - depth를 할당할 모듈.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"getdependencyreference",parentName:"h3"}),"getDependencyReference",(0,t.kt)("a",{href:"#getdependencyreference","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (module, dependency)")),(0,t.kt)("p",null,"주어진 모듈에서 의존성에 대한 참조를 반환합니다."),(0,t.kt)("p",null,"파라미터:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"module")," - 주어진 모듈."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"dependency")," - 참조할 의존성.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"processdependenciesblocksforchunkgroups",parentName:"h3"}),"processDependenciesBlocksForChunkGroups",(0,t.kt)("a",{href:"#processdependenciesblocksforchunkgroups","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (inputChunkGroups)")),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"Module")," 그래프에서 ",(0,t.kt)("inlineCode",{parentName:"p"},"Chunk")," 그래프를 생성합니다. 이 과정은 두 단계로 이루어집니다. 1단계: 모듈 그래프를 탐색하고 ",(0,t.kt)("inlineCode",{parentName:"p"},"chunkDependencies"),"에서 기본 청크 그래프를 빌드합니다. 2단계: 기본 청크 그래프를 통해 가능한 모든 방법을 탐색하고 사용 가능한 모듈을 추적합니다. 탐색하는 동안, ",(0,t.kt)("inlineCode",{parentName:"p"},"processDependenciesBlocksForChunkGroups"),"는 청크를 서로 연결하고 ",(0,t.kt)("inlineCode",{parentName:"p"},"Blocks"),"는 ",(0,t.kt)("inlineCode",{parentName:"p"},"Chunks"),"와 연결합니다. 청크에 대한 모든 모듈이 이미 사용 가능하고 불필요한 청크를 연결하지 않으면 탐색을 중지합니다."),(0,t.kt)("p",null,"파라미터:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"inputChunkGroups")," - 처리되는 청크 그룹.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"removereasonsofdependencyblock",parentName:"h3"}),"removeReasonsOfDependencyBlock",(0,t.kt)("a",{href:"#removereasonsofdependencyblock","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (module, block)")),(0,t.kt)("p",null,"모듈과 의존성 블록의 관계를 제거합니다."),(0,t.kt)("p",null,"파라미터:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"module")," - 제거할 모듈 관계."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"block")," - 의존성 블록.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"patchchunksafterreasonremoval",parentName:"h3"}),"patchChunksAfterReasonRemoval",(0,t.kt)("a",{href:"#patchchunksafterreasonremoval","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (module, chunk)")),(0,t.kt)("p",null,"의존성 이유를 제거한 후 모듈 및 청크의 연결을 패치합니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"removeReasonsOfDependencyBlock"),"에 의해 자동으로 호출됩니다."),(0,t.kt)("p",null,"파라미터:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"module")," - 패치 할 모듈."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"chunk")," - 패치 할 청크.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"removechunkfromdependencies",parentName:"h3"}),"removeChunkFromDependencies",(0,t.kt)("a",{href:"#removechunkfromdependencies","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (block, chunk)")),(0,t.kt)("p",null,"의존성 이유를 제거한 후 의존성 블록 모듈 및 청크에서 주어진 청크를 제거합니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"removeReasonsOfDependencyBlock"),"에 의해 자동으로 호출됩니다."),(0,t.kt)("p",null,"파라미터:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"block")," - ",(0,t.kt)("inlineCode",{parentName:"li"},"Chunk"),"의 블록."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"chunk")," - 의존성에서 제거할 청크.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"sortitemswithchunkids",parentName:"h3"}),"sortItemsWithChunkIds",(0,t.kt)("a",{href:"#sortitemswithchunkids","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"summarizedependencies",parentName:"h3"}),"summarizeDependencies",(0,t.kt)("a",{href:"#summarizedependencies","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"createhash",parentName:"h3"}),"createHash",(0,t.kt)("a",{href:"#createhash","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"createmoduleassets",parentName:"h3"}),"createModuleAssets",(0,t.kt)("a",{href:"#createmoduleassets","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"createchunkassets",parentName:"h3"}),"createChunkAssets",(0,t.kt)("a",{href:"#createchunkassets","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"getpath",parentName:"h3"}),"getPath",(0,t.kt)("a",{href:"#getpath","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (filename, data)")),(0,t.kt)("p",null,"삽입된 경로를 반환합니다."),(0,t.kt)("p",null,"파라미터:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"filename")," - 해시로 애셋 경로를 얻는 데 사용."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"data")," - data 객체.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"getpathwithinfo",parentName:"h3"}),"getPathWithInfo",(0,t.kt)("a",{href:"#getpathwithinfo","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (filename, data)")),(0,t.kt)("p",null,"삽입된 경로 및 애셋 정보를 반환합니다."),(0,t.kt)("p",null,"파라미터:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"filename")," - 해시로 애셋 경로를 얻는 데 사용."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"data")," - data 객체.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"createchildcompiler",parentName:"h3"}),"createChildCompiler",(0,t.kt)("a",{href:"#createchildcompiler","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (name, outputOptions, plugins)")),(0,t.kt)("p",null,"webpack 내에서 webpack의 다른 인스턴스를 실행할 수 있습니다. 그러나, 다른 설정과 구성이 적용된 하위 컴파일러로서 상위(또는 최상위 컴파일러)에서 모든 훅과 플러그인을 복사하고 하위 ",(0,t.kt)("inlineCode",{parentName:"p"},"Compiler")," 인스턴스를 만듭니다. 생성된 ",(0,t.kt)("inlineCode",{parentName:"p"},"Compiler"),"를 반환합니다."),(0,t.kt)("p",null,"파라미터:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"name")," - 하위 ",(0,t.kt)("inlineCode",{parentName:"li"},"Compiler"),"의 이름."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"outputOptions")," - 출력 옵션 객체."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"plugins")," - 적용될 webpack 플러그인.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"checkconstraints",parentName:"h3"}),"checkConstraints",(0,t.kt)("a",{href:"#checkconstraints","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"emitasset",parentName:"h3"}),"emitAsset",(0,t.kt)("a",{href:"#emitasset","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (file, source, assetInfo = {})")),(0,t.kt)("p",null,"파라미터:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"file")," - 애셋의 파일 이름"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"source")," - 애셋의 소스"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"assetInfo")," - 추가 애셋 정보")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"updateasset",parentName:"h3"}),"updateAsset",(0,t.kt)("a",{href:"#updateasset","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (file, newSourceOrFunction, assetInfoUpdateOrFunction)")),(0,t.kt)("p",null,"파라미터:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"file")," - 애셋의 파일 이름"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"newSourceOrFunction")," - 새 애셋 소스 또는 이전의 것을 새것으로 변환하는 함수"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"assetInfoUpdateOrFunction")," - 새 애셋 정보 또는 이전의 것을 새것으로 변환하는 함수")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"deleteasset",parentName:"h3"}),"deleteAsset",(0,t.kt)("a",{href:"#deleteasset","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (file)")),(0,t.kt)("p",null,"파라미터:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"file")," - 애셋의 파일 이름")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"getassets",parentName:"h3"}),"getAssets",(0,t.kt)("a",{href:"#getassets","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function")),(0,t.kt)("p",null,"현재 컴파일에서 모든 애셋의 배열을 반환합니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"getasset",parentName:"h3"}),"getAsset",(0,t.kt)("a",{href:"#getasset","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (name)")),(0,t.kt)("p",null,"파라미터:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"name")," - 반환할 애셋의 이름")))}i.isMDXComponent=!0,n.default=i}}]);