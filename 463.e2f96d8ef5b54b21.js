"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[463],{463:function(e,a,n){n.r(a),n(3696);var s=n(1445);function p(){return p=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s])}return e},p.apply(this,arguments)}function t(e){let{components:a,...n}=e;return(0,s.yg)("wrapper",p({components:a},n),(0,s.yg)("aside",{className:"tip"},(0,s.yg)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,s.yg)("p",{parentName:"aside"},"이 가이드는 ",(0,s.yg)("a",{href:"/guides/asset-management",parentName:"p"},(0,s.yg)("inlineCode",{parentName:"a"},"Asset Management"))," 가이드에 있는 코드 예제를 기준으로 합니다.")),(0,s.yg)("p",null,"지금까지 모든 애셋을 ",(0,s.yg)("inlineCode",{parentName:"p"},"index.html")," 파일에 수동으로 포함했습니다. 하지만 애플리케이션이 커지면서 ",(0,s.yg)("a",{href:"/guides/caching",parentName:"p"},"파일 이름에 해시를 사용"),"하거나 ",(0,s.yg)("a",{href:"/guides/code-splitting",parentName:"p"},"다중 번들"),"로 내보내기 시작하면 ",(0,s.yg)("inlineCode",{parentName:"p"},"index.html")," 파일을 수동으로 관리하기 어렵습니다. 이 때 몇 가지 플러그인으로 이 프로세스를 훨씬 쉽게 관리할 수 있습니다."),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"preparation",parentName:"h2"}),"Preparation",(0,s.yg)("a",{href:"#preparation","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"먼저 프로젝트를 조금 수정해보겠습니다."),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"project")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," webpack-demo\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," |- package.json\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," |- package-lock.json\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," |- webpack.config.js\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," |- /dist\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," |- /src\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"   |- index.js\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"   |- print.js\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," |- /node_modules")))),(0,s.yg)("p",null,(0,s.yg)("inlineCode",{parentName:"p"},"src/print.js")," 파일에 로직을 추가합니다."),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"src/print.js")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-js",parentName:"pre"},(0,s.yg)("span",{className:"token keyword",parentName:"code"},"export")," ",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"default")," ",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,s.yg)("span",{className:"token function",parentName:"code"},"printMe"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  console",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"."),(0,s.yg)("span",{className:"token function",parentName:"code"},"log"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token string",parentName:"code"},"'I get called from print.js!'"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"))),(0,s.yg)("p",null,"그리고 ",(0,s.yg)("inlineCode",{parentName:"p"},"src/index.js")," 파일에서 이 함수를 사용합니다."),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"src/index.js")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"import _ from 'lodash';\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"import printMe from './print.js';\n")),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"function component() {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  const element = document.createElement('div');\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  const btn = document.createElement('button');\n")),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  element.innerHTML = _.join(['Hello', 'webpack'], ' ');\n")),"\n",(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  btn.innerHTML = 'Click me and check the console!';\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  btn.onclick = printMe;\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  element.appendChild(btn);\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  return element;\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"}\n")),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"document.body.appendChild(component());")))),(0,s.yg)("p",null,"webpack이 엔트리를 분할할 수 있도록 ",(0,s.yg)("inlineCode",{parentName:"p"},"dist/index.html")," 파일도 업데이트해 보겠습니다."),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"dist/index.html")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"<!DOCTYPE html>\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"<html>\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  <head>\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},'    <meta charset="utf-8" />\n')),(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    <title>Asset Management</title>\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    <title>Output Management</title>\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},'    <script src="./print.bundle.js"><\/script>\n')),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  </head>\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  <body>\n")),(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},'    <script src="bundle.js"><\/script>\n')),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},'    <script src="./index.bundle.js"><\/script>\n')),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  </body>\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"</html>")))),(0,s.yg)("p",null,"이제 설정을 수정합니다. ",(0,s.yg)("inlineCode",{parentName:"p"},"src/print.js"),"를 새 엔트리 포인트(",(0,s.yg)("inlineCode",{parentName:"p"},"print"),")로 추가합니다. 그리고 출력 번들 이름이 엔트리 포인트 이름을 기반으로 동적으로 생성되도록 변경합니다."),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"webpack.config.js")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"const path = require('path');\n")),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"module.exports = {\n")),(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  entry: './src/index.js',\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  entry: {\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    index: './src/index.js',\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    print: './src/print.js',\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  },\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  output: {\n")),(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    filename: 'bundle.js',\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    filename: '[name].bundle.js',\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    path: path.resolve(__dirname, 'dist'),\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  },\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"};")))),(0,s.yg)("p",null,(0,s.yg)("inlineCode",{parentName:"p"},"npm run build"),"를 실행하고 무엇이 생성되는지 살펴보겠습니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-bash",parentName:"pre"},(0,s.yg)("span",{className:"token punctuation",parentName:"code"},".."),".\n",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"webpack-cli",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]")," Compilation finished\nasset index.bundle.js ",(0,s.yg)("span",{className:"token number",parentName:"code"},"69.5")," KiB ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"minimized",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),"name: index",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,s.yg)("span",{className:"token number",parentName:"code"},"1")," related asset\nasset print.bundle.js ",(0,s.yg)("span",{className:"token number",parentName:"code"},"316")," bytes ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"minimized",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),"name: print",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")"),"\nruntime modules ",(0,s.yg)("span",{className:"token number",parentName:"code"},"1.36")," KiB ",(0,s.yg)("span",{className:"token number",parentName:"code"},"7")," modules\ncacheable modules ",(0,s.yg)("span",{className:"token number",parentName:"code"},"530")," KiB\n  ./src/index.js ",(0,s.yg)("span",{className:"token number",parentName:"code"},"406")," bytes ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"code generated",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]"),"\n  ./src/print.js ",(0,s.yg)("span",{className:"token number",parentName:"code"},"83")," bytes ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"code generated",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]"),"\n  ./node_modules/lodash/lodash.js ",(0,s.yg)("span",{className:"token number",parentName:"code"},"530")," KiB ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"code generated",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]"),"\nwebpack ",(0,s.yg)("span",{className:"token number",parentName:"code"},"5.4"),".0 compiled successfully ",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"in")," ",(0,s.yg)("span",{className:"token number",parentName:"code"},"1996")," ms")),(0,s.yg)("p",null,"webpack이 ",(0,s.yg)("inlineCode",{parentName:"p"},"print.bundle.js")," 과 ",(0,s.yg)("inlineCode",{parentName:"p"},"index.bundle.js")," 파일을 생성하는 것을 볼 수 있습니다. 이 파일은 ",(0,s.yg)("inlineCode",{parentName:"p"},"index.html")," 파일에도 명시되어 있습니다. 브라우저에서 ",(0,s.yg)("inlineCode",{parentName:"p"},"index.html"),"을 열고 버튼을 클릭하면 어떻게 되는지 확인할 수 있습니다."),(0,s.yg)("p",null,"그러나 엔트리 포인트 중 하나의 이름을 변경하거나 새 엔트리 포인트를 추가하면 어떻게 될까요? 생성된 번들은 빌드에서 이름이 변경되지만 ",(0,s.yg)("inlineCode",{parentName:"p"},"index.html")," 파일은 여전히 예전 이름을 참조합니다. ",(0,s.yg)("a",{href:"/plugins/html-webpack-plugin",parentName:"p"},(0,s.yg)("inlineCode",{parentName:"a"},"HtmlWebpackPlugin")),"을 사용하여 이 문제를 해결해보겠습니다."),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"setting-up-htmlwebpackplugin",parentName:"h2"}),"Setting up HtmlWebpackPlugin",(0,s.yg)("a",{href:"#setting-up-htmlwebpackplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"먼저 플러그인을 설치하고 ",(0,s.yg)("inlineCode",{parentName:"p"},"webpack.config.js")," 파일을 수정합니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-bash",parentName:"pre"},(0,s.yg)("span",{className:"token function",parentName:"code"},"npm")," ",(0,s.yg)("span",{className:"token function",parentName:"code"},"install")," --save-dev html-webpack-plugin")),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"webpack.config.js")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"const path = require('path');\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"const HtmlWebpackPlugin = require('html-webpack-plugin');\n")),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"module.exports = {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  entry: {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    index: './src/index.js',\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    print: './src/print.js',\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  },\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  plugins: [\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    new HtmlWebpackPlugin({\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"      title: 'Output Management',\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    }),\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  ],\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  output: {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    filename: '[name].bundle.js',\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    path: path.resolve(__dirname, 'dist'),\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  },\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"};")))),(0,s.yg)("p",null,"빌드하기 전에 ",(0,s.yg)("inlineCode",{parentName:"p"},"dist/")," 폴더에 이미 ",(0,s.yg)("inlineCode",{parentName:"p"},"index.html"),"이 있더라도 기본적으로 ",(0,s.yg)("inlineCode",{parentName:"p"},"HtmlWebpackPlugin"),"이 자체 ",(0,s.yg)("inlineCode",{parentName:"p"},"index.html")," 파일을 생성하는 것을 알아두세요. 이는 ",(0,s.yg)("inlineCode",{parentName:"p"},"index.html")," 파일이 새로 생성된 파일로 대체된다는 의미입니다. ",(0,s.yg)("inlineCode",{parentName:"p"},"npm run build"),"를 실행할 때 어떤 일이 발생하는지 살펴보겠습니다."),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-bash",parentName:"pre"},(0,s.yg)("span",{className:"token punctuation",parentName:"code"},".."),".\n",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"webpack-cli",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]")," Compilation finished\nasset index.bundle.js ",(0,s.yg)("span",{className:"token number",parentName:"code"},"69.5")," KiB ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"compared ",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"for")," emit",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"minimized",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),"name: index",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,s.yg)("span",{className:"token number",parentName:"code"},"1")," related asset\nasset print.bundle.js ",(0,s.yg)("span",{className:"token number",parentName:"code"},"316")," bytes ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"compared ",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"for")," emit",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"minimized",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),"name: print",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")"),"\nasset index.html ",(0,s.yg)("span",{className:"token number",parentName:"code"},"253")," bytes ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]"),"\nruntime modules ",(0,s.yg)("span",{className:"token number",parentName:"code"},"1.36")," KiB ",(0,s.yg)("span",{className:"token number",parentName:"code"},"7")," modules\ncacheable modules ",(0,s.yg)("span",{className:"token number",parentName:"code"},"530")," KiB\n  ./src/index.js ",(0,s.yg)("span",{className:"token number",parentName:"code"},"406")," bytes ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"code generated",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]"),"\n  ./src/print.js ",(0,s.yg)("span",{className:"token number",parentName:"code"},"83")," bytes ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"code generated",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]"),"\n  ./node_modules/lodash/lodash.js ",(0,s.yg)("span",{className:"token number",parentName:"code"},"530")," KiB ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"code generated",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]"),"\nwebpack ",(0,s.yg)("span",{className:"token number",parentName:"code"},"5.4"),".0 compiled successfully ",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"in")," ",(0,s.yg)("span",{className:"token number",parentName:"code"},"2189")," ms")),(0,s.yg)("p",null,"코드 편집기에서 ",(0,s.yg)("inlineCode",{parentName:"p"},"index.html"),"을 열면 ",(0,s.yg)("inlineCode",{parentName:"p"},"HtmlWebpackPlugin"),"이 완전히 새로운 파일을 생성했으며 모든 번들이 자동으로 추가된 것을 알 수 있습니다."),(0,s.yg)("p",null,(0,s.yg)("inlineCode",{parentName:"p"},"HtmlWebpackPlugin"),"이 제공하는 모든 기능과 옵션에 대해 더 자세히 알아보려면 ",(0,s.yg)("a",{href:"https://github.com/jantimon/html-webpack-plugin",parentName:"p"},(0,s.yg)("inlineCode",{parentName:"a"},"HtmlWebpackPlugin"))," 저장소를 확인해 보세요."),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"cleaning-up-the-dist-folder",parentName:"h2"}),"Cleaning up the ",(0,s.yg)("inlineCode",{parentName:"h2"},"/dist")," folder",(0,s.yg)("a",{href:"#cleaning-up-the-dist-folder","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"이전 가이드와 코드 예제에서 눈치챘겠지만 ",(0,s.yg)("inlineCode",{parentName:"p"},"/dist")," 폴더가 상당히 복잡해졌습니다. webpack은 파일을 생성하여 ",(0,s.yg)("inlineCode",{parentName:"p"},"/dist")," 폴더에 저장하지만, 프로젝트에서 실제로 사용하는 파일이 어떤 건지는 알지 못합니다."),(0,s.yg)("p",null,"일반적으로 사용하는 파일만 생성되도록 각 빌드 전에 ",(0,s.yg)("inlineCode",{parentName:"p"},"/dist")," 폴더를 정리하는 것이 좋습니다. ",(0,s.yg)("a",{href:"/configuration/output/#outputclean",parentName:"p"},(0,s.yg)("inlineCode",{parentName:"a"},"output.clean"))," 옵션을 사용하여 처리해보겠습니다."),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"webpack.config.js")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"const path = require('path');\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"const HtmlWebpackPlugin = require('html-webpack-plugin');\n")),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"module.exports = {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  entry: {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    index: './src/index.js',\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    print: './src/print.js',\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  },\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  plugins: [\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    new HtmlWebpackPlugin({\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"      title: 'Output Management',\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    }),\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  ],\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  output: {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    filename: '[name].bundle.js',\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    path: path.resolve(__dirname, 'dist'),\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    clean: true,\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  },\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"};")))),(0,s.yg)("p",null,"이제 ",(0,s.yg)("inlineCode",{parentName:"p"},"npm run build"),"를 실행하고 ",(0,s.yg)("inlineCode",{parentName:"p"},"/dist")," 폴더를 확인해보세요. 모든 것이 잘 되었다면 이제 오래된 파일 없이 빌드에서 생성된 파일만 볼 수 있습니다!"),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"the-manifest",parentName:"h2"}),"The Manifest",(0,s.yg)("a",{href:"#the-manifest","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,'webpack과 플러그인은 어떤 파일이 생성되는 것을 어떻게 "알고 있는지" 궁금할 것입니다. 답은 매니페스트에 있습니다. webpack은 모든 모듈이 출력 번들에 어떻게 매핑되는지 추적합니다. 만약 webpack의 ',(0,s.yg)("a",{href:"/configuration/output",parentName:"p"},(0,s.yg)("inlineCode",{parentName:"a"},"output")),"을 다른 방식으로 관리하는데 관심이 있다면 매니페스트부터 시작하는 것이 좋습니다."),(0,s.yg)("p",null,"매니페스트 데이터는 ",(0,s.yg)("a",{href:"https://github.com/shellscape/webpack-manifest-plugin",parentName:"p"},(0,s.yg)("inlineCode",{parentName:"a"},"WebpackManifestPlugin")),"을 사용하여 쉽게 적용 가능한 json 파일로 추출할 수 있습니다."),(0,s.yg)("p",null,"프로젝트에서 이 플러그인을 사용하는 방법에 대한 모든 예제를 다루지는 않겠지만 ",(0,s.yg)("a",{href:"/concepts/manifest",parentName:"p"},"콘셉 페이지")," 및 ",(0,s.yg)("a",{href:"/guides/caching",parentName:"p"},"캐싱 가이드"),"를 읽어 보면 이것이 장기 캐싱과 어떻게 연결되는지 확인할 수 있습니다."),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"conclusion",parentName:"h2"}),"Conclusion",(0,s.yg)("a",{href:"#conclusion","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"HTML에 번들을 동적으로 추가하는 방법을 배웠으므로 이제 ",(0,s.yg)("a",{href:"/guides/development",parentName:"p"},"개발 가이드"),"를 살펴보세요. 또는 심화 항목을 자세히 알아보고 싶다면 ",(0,s.yg)("a",{href:"/guides/code-splitting",parentName:"p"},"코드 스플리팅 가이드"),"를 추천합니다."))}t.isMDXComponent=!0,a.default=t}}]);