"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5229],{5229:function(e,a,n){n.r(a),n(7378);var t=n(2682);function p(){return p=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},p.apply(this,arguments)}const s=("Badge",e=>(console.warn("Component `%s` was not imported, exported, or provided by MDXProvider as global scope","Badge"),(0,t.kt)(t.kt.Fragment,null,e.children)));function o(e){let{components:a,...n}=e;return(0,t.kt)("wrapper",p({components:a},n),(0,t.kt)("p",null,"이 섹션에서는 webpack으로 컴파일된 코드에서 사용할 수 있는 모든 메서드를 다룹니다. Webpack을 사용하여 애플리케이션을 번들할 때 ",(0,t.kt)("a",{href:"https://en.wikipedia.org/wiki/ECMAScript#6th_Edition_-_ECMAScript_2015",parentName:"p"},"ES6"),", ",(0,t.kt)("a",{href:"https://en.wikipedia.org/wiki/CommonJS",parentName:"p"},"CommonJS")," 및 ",(0,t.kt)("a",{href:"https://en.wikipedia.org/wiki/Asynchronous_module_definition",parentName:"p"},"AMD"),"와 같은 여러 가지 구문 스타일 중 선택할 수 있습니다."),(0,t.kt)("p",null,"Webpack은 여러 모듈 구문을 지원하지만, 일관성을 유지하고 이상한 동작이나 버그를 피하려면 단일 구문을 따르는 것이 좋습니다. 실제로 webpack은 가장 가까운 상위 ",(0,t.kt)("inlineCode",{parentName:"p"},"package.json")," 파일에 값이 ",(0,t.kt)("inlineCode",{parentName:"p"},'"module"')," 이거나 ",(0,t.kt)("inlineCode",{parentName:"p"},"commonjs"),"인 ",(0,t.kt)("inlineCode",{parentName:"p"},'"type"')," 필드가 포함된 경우, ",(0,t.kt)("inlineCode",{parentName:"p"},".mjs")," 파일, ",(0,t.kt)("inlineCode",{parentName:"p"},".cjs")," 파일 또는 ",(0,t.kt)("inlineCode",{parentName:"p"},".js")," 파일에 대한 권장 사항을 적용합니다. 계속해서 읽기 전에 다음 적용 사항을 알아보세요."),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"package.json"),"에 ",(0,t.kt)("inlineCode",{parentName:"li"},'"type": "module"'),"이 있는 ",(0,t.kt)("inlineCode",{parentName:"li"},".mjs")," 또는 ",(0,t.kt)("inlineCode",{parentName:"li"},".js"),".",(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},"CommonJS가 허용되지 않습니다. 예를 들면 ",(0,t.kt)("inlineCode",{parentName:"li"},"require"),", ",(0,t.kt)("inlineCode",{parentName:"li"},"module.exports")," 또는 ",(0,t.kt)("inlineCode",{parentName:"li"},"exports"),"를 사용할 수 없습니다."),(0,t.kt)("li",{parentName:"ul"},"가져올 때 파일 확장자가 필요합니다. 예를 들어 ",(0,t.kt)("inlineCode",{parentName:"li"},"import './src/App'")," 대신에 ",(0,t.kt)("inlineCode",{parentName:"li"},"import './src/App.mjs'"),"를 사용해야 합니다. (",(0,t.kt)("a",{href:"/configuration/module/#resolvefullyspecified",parentName:"li"},(0,t.kt)("inlineCode",{parentName:"a"},"Rule.resolve.fullySpecified")),"를 사용하여 이 사항을 비활성화할 수 있습니다.)"))),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"package.json"),"에 ",(0,t.kt)("inlineCode",{parentName:"li"},'"type": "commonjs"'),"가 있는 ",(0,t.kt)("inlineCode",{parentName:"li"},".cjs")," 또는 ",(0,t.kt)("inlineCode",{parentName:"li"},".js"),".",(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"import"),"도 ",(0,t.kt)("inlineCode",{parentName:"li"},"export"),"도 사용할 수 없습니다."))),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"package.json"),"에 ",(0,t.kt)("inlineCode",{parentName:"li"},'"type": "module"'),"이 있는 ",(0,t.kt)("inlineCode",{parentName:"li"},".wasm"),".",(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},"wasm 파일을 가져올 때 파일 확장자가 필요합니다.")))),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"es6-recommended",parentName:"h2"}),"ES6 (Recommended)",(0,t.kt)("a",{href:"#es6-recommended","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"Webpack 버전 2는 기본적으로 ES6 모듈 구문을 지원합니다. 즉, babel과 같은 도구 없이 ",(0,t.kt)("inlineCode",{parentName:"p"},"import")," 및 ",(0,t.kt)("inlineCode",{parentName:"p"},"export"),"를 사용하여 이를 처리할 수 있습니다. 다른 ES6+ 기능에는 여전히 babel이 필요할 수 있습니다. Webpack이 지원하는 메서드는 다음과 같습니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"import",parentName:"h3"}),"import",(0,t.kt)("a",{href:"#import","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"다른 모듈의 ",(0,t.kt)("inlineCode",{parentName:"p"},"export"),"를 정적으로 ",(0,t.kt)("inlineCode",{parentName:"p"},"import")," 합니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import")," MyModule ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"from")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'./my-module.js'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{")," NamedExport ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"from")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'./other-module.js'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.kt)("p",{parentName:"aside"},"여기서 키워드는 ",(0,t.kt)("strong",{parentName:"p"},"정적으로"),"입니다. 일반적인 ",(0,t.kt)("inlineCode",{parentName:"p"},"import")," 문은 다른 로직 내에서 동적으로 사용하거나 변수를 포함할 수 없습니다. 자세한 내용은 ",(0,t.kt)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import",parentName:"p"},"세부 사양"),"에서 확인해 보세요. 동적 사용법은 아래의 ",(0,t.kt)("inlineCode",{parentName:"p"},"import()"),"를 참고하세요.")),(0,t.kt)("p",null,"Data URI를 ",(0,t.kt)("inlineCode",{parentName:"p"},"import")," 할 수도 있습니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'data:text/javascript;charset=utf-8;base64,Y29uc29sZS5sb2coJ2lubGluZSAxJyk7'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  number",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  fn",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"from")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'data:text/javascript;charset=utf-8;base64,ZXhwb3J0IGNvbnN0IG51bWJlciA9IDQyOwpleHBvcnQgY29uc3QgZm4gPSAoKSA9PiAiSGVsbG8gd29ybGQiOw=='"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"export",parentName:"h3"}),"export",(0,t.kt)("a",{href:"#export","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"무엇이든 ",(0,t.kt)("inlineCode",{parentName:"p"},"default")," 또는 이름이 지정된 내보내기로 내보냅니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 이름이 지정된 내보내기"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"export")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"var")," Count ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"5"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"export")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,t.kt)("span",{className:"token function",parentName:"code"},"Multiply"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"a",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},",")," b"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"return")," a ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"*")," b",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n\n",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 기본 내보내기"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"export")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"default")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 데이터..."),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"import-1",parentName:"h3"}),"import()",(0,t.kt)("a",{href:"#import-1","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function(string path):Promise")),(0,t.kt)("p",null,"모듈을 동적으로 로드합니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"import()"),"에 대한 호출은 분할 지점으로 처리됩니다. 즉, 요청된 모듈과 그 자식은 별도의 청크로 분할됩니다."),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,t.kt)("p",{parentName:"aside"},(0,t.kt)("a",{href:"https://whatwg.github.io/loader/",parentName:"p"},"ES2015 로더 사양"),"에서는 ",(0,t.kt)("inlineCode",{parentName:"p"},"import()"),"를 런타임에 ES2015 모듈을 동적으로 로드하는 메서드로 정의하고 있습니다.")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"if")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hot",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'lodash'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"then"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"_"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// lodash(일명 '_')로 작업 수행..."),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"))),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.kt)("p",{parentName:"aside"},"이 기능은 내부적으로 ",(0,t.kt)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"Promise")),"에 의존합니다. 이전 브라우저에서 ",(0,t.kt)("inlineCode",{parentName:"p"},"import()"),"를 사용하는 경우 ",(0,t.kt)("a",{href:"https://github.com/stefanpenner/es6-promise",parentName:"p"},"es6-promise")," 또는 ",(0,t.kt)("a",{href:"https://github.com/taylorhakes/promise-polyfill",parentName:"p"},"promise-polyfill"),"과 같은 폴리필을 사용하여 ",(0,t.kt)("inlineCode",{parentName:"p"},"Promise"),"를 대체해야 합니다.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"dynamic-expressions-in-import",parentName:"h3"}),"Dynamic expressions in import()",(0,t.kt)("a",{href:"#dynamic-expressions-in-import","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"import(foo)"),"와 같은 완전히 동적인 import 문을 사용하는 것은 불가능합니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"foo"),"는 잠재적으로 시스템이나 프로젝트의 모든 파일에 대한 경로가 될 수 있기 때문입니다."),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"import()"),"는 최소한 모듈 위치에 대한 정보를 포함해야 합니다. 번들링은 특정 디렉터리 또는 파일 집합으로 제한될 수 있습니다. 그러므로 동적 표현 식을 사용할 때 ",(0,t.kt)("inlineCode",{parentName:"p"},"import()")," 호출 시 잠재적으로 요청 가능한 모든 모듈이 포함됩니다. 예를 들어 ",(0,t.kt)("inlineCode",{parentName:"p"},"import(`./locale/${language}.json`)"),"은 ",(0,t.kt)("inlineCode",{parentName:"p"},"./locale")," 디렉터리의 모든 ",(0,t.kt)("inlineCode",{parentName:"p"},".json")," 파일을 새로운 청크로 번들합니다. 런타임에 ",(0,t.kt)("inlineCode",{parentName:"p"},"language")," 변수가 계산되면 ",(0,t.kt)("inlineCode",{parentName:"p"},"english.json")," 또는 ",(0,t.kt)("inlineCode",{parentName:"p"},"german.json"),"과 같은 모든 파일이 사용 가능하게 됩니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 쿠키나 다른 저장소에서 언어를 가져오는 방법이 있다고 상상해 보세요."),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," language ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token function",parentName:"code"},"detectVisitorLanguage"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token template-string",parentName:"code"},(0,t.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`"),(0,t.kt)("span",{className:"token string",parentName:"span"},"./locale/"),(0,t.kt)("span",{className:"token interpolation",parentName:"span"},(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"${"),"language",(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"}")),(0,t.kt)("span",{className:"token string",parentName:"span"},".json"),(0,t.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`")),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"then"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"module"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 번역과 관련된 작업을 수행합니다."),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,t.kt)("p",{parentName:"aside"},(0,t.kt)("a",{href:"/api/module-methods/#magic-comments",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"webpackInclude")," 및 ",(0,t.kt)("inlineCode",{parentName:"a"},"webpackExclude"))," 옵션을 사용하면 이 가져오기를 위해 webpack이 번들할 파일 수를 줄이는 정규식 패턴을 추가할 수 있습니다.")),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"magic-comments",parentName:"h4"}),"Magic Comments",(0,t.kt)("a",{href:"#magic-comments","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"기능을 작동시키기 위한 인라인 주석입니다. 가져오기에 주석을 추가하여 청크의 이름을 지정하거나 다른 모드를 선택하는 등의 여러 작업을 할 수 있습니다. 이 특별한 주석의 전체 목록과 주석이 수행하는 작업은 아래 코드와 설명을 참고하세요."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 단일 대상"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},'/* webpackChunkName: "my-chunk-name" */'),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},'/* webpackMode: "lazy" */'),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},'/* webpackExports: ["default", "named"] */'),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},'/* webpackFetchPriority: "high" */'),"\n  ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'module'"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\n",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 여러 가능한 대상"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"/* webpackInclude: /\\.json$/ */"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"/* webpackExclude: /\\.noimport\\.json$/ */"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},'/* webpackChunkName: "my-chunk-name" */'),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},'/* webpackMode: "lazy" */'),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"/* webpackPrefetch: true */"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"/* webpackPreload: true */"),"\n  ",(0,t.kt)("span",{className:"token template-string",parentName:"code"},(0,t.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`"),(0,t.kt)("span",{className:"token string",parentName:"span"},"./locale/"),(0,t.kt)("span",{className:"token interpolation",parentName:"span"},(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"${"),"language",(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"}")),(0,t.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`")),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token comment",parentName:"code"},"/* webpackIgnore: true */")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'ignored-module.js'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h5",null,(0,t.kt)("span",{id:"webpackignore",parentName:"h5"}),(0,t.kt)("inlineCode",{parentName:"h5"},"webpackIgnore"),(0,t.kt)("a",{href:"#webpackignore","aria-hidden":"true",tabIndex:"-1",parentName:"h5"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"true"),"로 설정하면 동적 import 구문 파싱을 비활성화합니다."),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.kt)("p",{parentName:"aside"},(0,t.kt)("inlineCode",{parentName:"p"},"webpackIgnore"),"를 ",(0,t.kt)("inlineCode",{parentName:"p"},"true"),"로 설정하면 코드 분할에서 벗어날 수 있습니다.")),(0,t.kt)("h5",null,(0,t.kt)("span",{id:"webpackchunkname",parentName:"h5"}),(0,t.kt)("inlineCode",{parentName:"h5"},"webpackChunkName"),(0,t.kt)("a",{href:"#webpackchunkname","aria-hidden":"true",tabIndex:"-1",parentName:"h5"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"새 청크의 이름입니다. Webpack 2.6.0부터 플레이스홀더 ",(0,t.kt)("inlineCode",{parentName:"p"},"[index]"),"와 ",(0,t.kt)("inlineCode",{parentName:"p"},"[request]"),"는 주어진 문자열 내에서 증가된 숫자 또는 실제 확인된 파일 이름으로 각각 지원합니다. 이 주석을 추가하면 개별 청크 이름이 [id].js 대신 [my-chunk-name].js로 지정됩니다."),(0,t.kt)("h5",null,(0,t.kt)("span",{id:"webpackfetchpriority",parentName:"h5"}),(0,t.kt)("inlineCode",{parentName:"h5"},"webpackFetchPriority"),(0,t.kt)("a",{href:"#webpackfetchpriority","aria-hidden":"true",tabIndex:"-1",parentName:"h5"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)(s,{text:"5.87.0+",mdxType:"Badge"}),(0,t.kt)("p",null,"특정 동적 import에 대한 ",(0,t.kt)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/fetchPriority",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"fetchPriority")),"를 설정합니다. ",(0,t.kt)("a",{href:"/configuration/module/#moduleparserjavascriptdynamicimportfetchpriority",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"module.parser.javascript.dynamicImportFetchPriority"))," 옵션을 사용하여 모든 동적 import에 전역 기본값을 설정할 수도 있습니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},'/* webpackFetchPriority: "high" */'),"\n  ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'path/to/module'"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h5",null,(0,t.kt)("span",{id:"webpackmode",parentName:"h5"}),(0,t.kt)("inlineCode",{parentName:"h5"},"webpackMode"),(0,t.kt)("a",{href:"#webpackmode","aria-hidden":"true",tabIndex:"-1",parentName:"h5"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"Webpack 2.6.0부터 동적 import를 해석하기 위한 다른 모드를 지정할 수 있습니다. 다음 옵션이 지원됩니다."),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"'lazy'")," (기본값): 각 ",(0,t.kt)("inlineCode",{parentName:"li"},"import()"),"된 모듈에 대해 지연 로드 가능한 청크를 생성합니다."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"'lazy-once'"),": ",(0,t.kt)("inlineCode",{parentName:"li"},"import()"),"에 대한 모든 호출을 만족시킬 수 있는 단일 지연 로드 가능 청크를 생성합니다. 청크는 ",(0,t.kt)("inlineCode",{parentName:"li"},"import()"),"에 대한 첫 번째 호출에서 가져오고, ",(0,t.kt)("inlineCode",{parentName:"li"},"import()"),"에 대한 후속 호출은 동일한 네트워크 응답을 사용합니다. 이것은 잠재적으로 요청 가능한 복수의 모듈 경로가 있는 ",(0,t.kt)("inlineCode",{parentName:"li"},"import(`./locales/${language}.json`)"),"와 같은 부분 동적 문일 경우에만 의미가 있습니다."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"'eager'"),": 추가 청크를 생성하지 않습니다. 모든 모듈은 현재 청크에 포함되며 추가 네트워크 요청은 발생하지 않습니다. 이미 해석된 ",(0,t.kt)("inlineCode",{parentName:"li"},"Promise"),"가 반환됩니다. 정적 가져오기와 달리 모듈은 ",(0,t.kt)("inlineCode",{parentName:"li"},"import()"),"가 호출될 때까지 실행되지 않습니다."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"'weak'"),": 모듈 함수가 이미 다른 방식으로 로드된 경우 모듈 로드를 시도합니다(예: 다른 청크가 이를 가져왔거나 모듈을 포함하는 스크립트가 로드된 경우). ",(0,t.kt)("inlineCode",{parentName:"li"},"Promise"),"가 여전히 반환되지만 청크가 이미 클라이언트에 있는 경우에만 성공적으로 해석됩니다. 모듈을 사용할 수 없으면 ",(0,t.kt)("inlineCode",{parentName:"li"},"Promise"),"가 거부됩니다. 네트워크 요청은 발생하지 않습니다. 이는 필요한 청크가 초기 요청에서 항상 수동으로 제공되는 (페이지에 내장된 경우) 범용 렌더링에 유용합니다. 하지만 앱 탐색이 초기에 제공되지 않은 가져오기를 트리거 하는 경우에는 유용하지 않습니다.")),(0,t.kt)("h5",null,(0,t.kt)("span",{id:"webpackprefetch",parentName:"h5"}),(0,t.kt)("inlineCode",{parentName:"h5"},"webpackPrefetch"),(0,t.kt)("a",{href:"#webpackprefetch","aria-hidden":"true",tabIndex:"-1",parentName:"h5"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"향후 탐색에 리소스가 필요할 수 있음을 브라우저에 알립니다. ",(0,t.kt)("a",{href:"/guides/code-splitting/#prefetchingpreloading-modules",parentName:"p"},"webpackPrefetch 작동 방식"),"에 대한 자세한 내용은 가이드를 확인하세요."),(0,t.kt)("h5",null,(0,t.kt)("span",{id:"webpackpreload",parentName:"h5"}),(0,t.kt)("inlineCode",{parentName:"h5"},"webpackPreload"),(0,t.kt)("a",{href:"#webpackpreload","aria-hidden":"true",tabIndex:"-1",parentName:"h5"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"현재 탐색 중에 리소스가 필요할 수 있음을 브라우저에 알립니다. ",(0,t.kt)("a",{href:"/guides/code-splitting/#prefetchingpreloading-modules",parentName:"p"},"webpackPreload 작동 방식"),"에 대한 자세한 내용은 가이드를 확인하세요."),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,t.kt)("p",{parentName:"aside"},"모든 옵션은 ",(0,t.kt)("inlineCode",{parentName:"p"},'/* webpackMode: "lazy-once", webpackChunkName: "all-i18n-data" */'),"와 같이 결합할 수 있습니다. 이것은 자바스크립트 객체에 래핑 되고 ",(0,t.kt)("a",{href:"https://nodejs.org/dist/latest-v8.x/docs/api/vm.html",parentName:"p"},"node VM"),"을 사용하여 실행됩니다. 중괄호를 추가할 필요는 없습니다.")),(0,t.kt)("h5",null,(0,t.kt)("span",{id:"webpackinclude",parentName:"h5"}),(0,t.kt)("inlineCode",{parentName:"h5"},"webpackInclude"),(0,t.kt)("a",{href:"#webpackinclude","aria-hidden":"true",tabIndex:"-1",parentName:"h5"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"가져오기 해석 중 일치하는지 확인할 정규식입니다. 일치하는 모듈만 ",(0,t.kt)("strong",{parentName:"p"},"번들로 제공됩니다"),"."),(0,t.kt)("h5",null,(0,t.kt)("span",{id:"webpackexclude",parentName:"h5"}),(0,t.kt)("inlineCode",{parentName:"h5"},"webpackExclude"),(0,t.kt)("a",{href:"#webpackexclude","aria-hidden":"true",tabIndex:"-1",parentName:"h5"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"가져오기 해석 중 일치하는지 확인할 정규식입니다. 일치하는 모듈은 ",(0,t.kt)("strong",{parentName:"p"},"번들로 제공되지 않습니다"),"."),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,t.kt)("p",{parentName:"aside"},(0,t.kt)("inlineCode",{parentName:"p"},"webpackInclude")," 및 ",(0,t.kt)("inlineCode",{parentName:"p"},"webpackExclude")," 옵션은 접두사와 간섭이 없습니다. 예: ",(0,t.kt)("inlineCode",{parentName:"p"},"./locale"),".")),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"webpackExports"),": 동적으로 ",(0,t.kt)("inlineCode",{parentName:"p"},"import()"),"된 모듈의 지정된 내보내기만 번들로 묶도록 webpack에 지시합니다. 청크의 출력 크기를 줄일 수 있습니다. ",(0,t.kt)("a",{href:"https://github.com/webpack/webpack/releases/tag/v5.0.0-beta.18",parentName:"p"},"webpack 5.0.0-beta.18"),"부터 사용 가능합니다."),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"commonjs",parentName:"h2"}),"CommonJS",(0,t.kt)("a",{href:"#commonjs","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"CommonJS의 목표는 브라우저 외부에서 JavaScript용 생태계를 지정하는 것입니다. Webpack에서 지원하는 CommonJS 메서드는 다음과 같습니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"require",parentName:"h3"}),"require",(0,t.kt)("a",{href:"#require","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-typescript",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"dependency",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," String",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"다른 모듈의 내보내기를 동기적으로 검색합니다. 컴파일러는 출력 번들에서 의존성을 사용할 수 있는지 확인합니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"var")," $ ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token function",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'jquery'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"var")," myModule ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token function",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'my-module'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"require"),"에 대한 특별한 주석도 활성화할 수 있습니다. 자세한 내용은 ",(0,t.kt)("a",{href:"/configuration/module/#moduleparserjavascriptcommonjsmagiccomments",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"module.parser.javascript.commonjsMagicComments")),"를 참고하세요."),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.kt)("p",{parentName:"aside"},"비동기식으로 사용하면 예상한 효과가 없을 수 있습니다.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"requireresolve",parentName:"h3"}),"require.resolve",(0,t.kt)("a",{href:"#requireresolve","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-typescript",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"resolve"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"dependency",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," String",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"모듈의 ID를 동기적으로 검색합니다. 컴파일러는 출력 번들에서 의존성을 사용할 수 있는지 확인합니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"require.cache[id]")," 또는 ",(0,t.kt)("inlineCode",{parentName:"p"},"__webpack_require__(id)"),"와 함께 사용할 수 있는 불투명 값으로 처리하는 것이 좋습니다 (이러한 사용을 피하는 것이 가장 좋습니다)."),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.kt)("p",{parentName:"aside"},"모듈 ID의 유형은 ",(0,t.kt)("a",{href:"/configuration/optimization/#optimizationmoduleids",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"optimization.moduleIds"))," 설정에 따라 ",(0,t.kt)("inlineCode",{parentName:"p"},"number")," 또는 ",(0,t.kt)("inlineCode",{parentName:"p"},"string"),"이 될 수 있습니다.")),(0,t.kt)("p",null,"자세한 내용은 ",(0,t.kt)("a",{href:"/api/module-variables/#moduleid-commonjs",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"module.id")),"를 참고하세요."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"requirecache",parentName:"h3"}),"require.cache",(0,t.kt)("a",{href:"#requirecache","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"동일한 모듈을 여러 번 require 하면 모듈이 한 번만 실행되고 하나의 내보내기만 발생합니다. 따라서 런타임에 캐시가 존재합니다. 이 캐시에서 값을 제거하면 새 모듈이 실행되고 새 내보내기가 발생합니다."),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.kt)("p",{parentName:"aside"},"이것은 드문 경우에만 호환성을 위해 필요합니다!")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"var")," d1 ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token function",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'dependency'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token function",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'dependency'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"===")," d1",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"delete")," require",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"cache",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"require",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"resolve"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'dependency'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token function",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'dependency'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"!==")," d1",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token comment",parentName:"code"},"// file.js에서"),"\nrequire",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"cache",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"id",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"===")," module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token function",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'./file.js'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"===")," module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"delete")," require",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"cache",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"id",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\nrequire",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"cache",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"id",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"===")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"undefined"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token function",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'./file.js'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"!==")," module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";")," ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 이론상 실제로 이것은 스택 오버플로를 일으킵니다."),"\nrequire",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"cache",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"id",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"!==")," module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"requireensure",parentName:"h3"}),"require.ensure",(0,t.kt)("a",{href:"#requireensure","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.kt)("p",{parentName:"aside"},(0,t.kt)("inlineCode",{parentName:"p"},"require.ensure()"),"는 webpack에만 해당하며 ",(0,t.kt)("inlineCode",{parentName:"p"},"import()"),"로 대체되었습니다.")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-ts",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"ensure"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"\n  dependencies",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," String",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token function-variable function",parentName:"code"},"callback"),(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"function"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token keyword",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token function-variable function",parentName:"code"},"errorCallback"),(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"function"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"error",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  chunkName",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," String\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"))),(0,t.kt)("p",null,"비동기식으로 로드될 지정된 ",(0,t.kt)("inlineCode",{parentName:"p"},"dependencies"),"를 별도의 번들로 분할합니다. CommonJS 모듈 구문을 사용할 때 이것은 의존성을 동적으로 로드하는 유일한 방법입니다. 즉, 이 코드는 작업 중에 실행될 수 있으며 특정 조건이 충족되는 경우에만 ",(0,t.kt)("inlineCode",{parentName:"p"},"dependencies"),"를 로드합니다."),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.kt)("p",{parentName:"aside"},"이 기능은 내부적으로 ",(0,t.kt)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"Promise")),"에 의존합니다. 이전 브라우저에서 ",(0,t.kt)("inlineCode",{parentName:"p"},"require.ensure"),"를 사용하는 경우 ",(0,t.kt)("a",{href:"https://github.com/stefanpenner/es6-promise",parentName:"p"},"es6-promise")," 또는 ",(0,t.kt)("a",{href:"https://github.com/taylorhakes/promise-polyfill",parentName:"p"},"promise-polyfill"),"과 같은 폴리필을 사용하여 ",(0,t.kt)("inlineCode",{parentName:"p"},"Promise"),"를 대체해야 합니다.")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"var")," a ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token function",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'normal-dep'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"if")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hot",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  require",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"ensure"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,t.kt)("span",{className:"token string",parentName:"code"},"'b'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"var")," c ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token function",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'c'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 특별한 작업을 수행..."),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"))),(0,t.kt)("p",null,"다음 파라미터는 위에서 지정한 순서대로 지원됩니다."),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"dependencies"),": ",(0,t.kt)("inlineCode",{parentName:"li"},"callback"),"의 코드 실행에 필요한 모든 모듈을 선언하는 문자열 배열입니다."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"callback"),": 의존성이 로드되면 webpack이 실행할 함수입니다. ",(0,t.kt)("inlineCode",{parentName:"li"},"require")," 함수 구현은 이 함수에 대한 파라미터로 전송됩니다. 함수 본문은 이것을 사용하여 실행에 필요한 추가 ",(0,t.kt)("inlineCode",{parentName:"li"},"require()")," 모듈을 사용할 수 있습니다."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"errorCallback"),": Webpack이 의존성을 불러오지 못했을 때 실행되는 함수입니다."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"chunkName"),": 특별히 이 ",(0,t.kt)("inlineCode",{parentName:"li"},"require.ensure()"),"에 의해 생성된 청크에 부여된 이름입니다. 다양한 ",(0,t.kt)("inlineCode",{parentName:"li"},"require.ensure()")," 호출에 동일한 ",(0,t.kt)("inlineCode",{parentName:"li"},"chunkName"),"을 전달하면 해당 코드를 단일 청크로 결합할 수 있으므로 브라우저에서 로드하는 번들이 하나만 생성됩니다.")),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.kt)("p",{parentName:"aside"},(0,t.kt)("inlineCode",{parentName:"p"},"require"),"의 구현이 ",(0,t.kt)("inlineCode",{parentName:"p"},"callback")," 함수에 인수로 전달되어도 ",(0,t.kt)("inlineCode",{parentName:"p"},"require.ensure([], function(request) { request('someModule'); })")," 같은 임의의 이름을 사용하면 webpack의 정적 파서에서 처리되지 않습니다. 대신 ",(0,t.kt)("inlineCode",{parentName:"p"},"require.ensure([], function(require) { require('someModule'); })"),"와 같이 ",(0,t.kt)("inlineCode",{parentName:"p"},"require"),"를 사용하세요.")),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"amd",parentName:"h2"}),"AMD",(0,t.kt)("a",{href:"#amd","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"AMD(Asynchronous Module Definition)는 모듈을 작성하고 로드하기 위한 인터페이스를 정의하는 JavaScript 사양입니다. Webpack에서 지원하는 AMD 방식은 다음과 같습니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"define-with-factory",parentName:"h3"}),"define (with factory)",(0,t.kt)("a",{href:"#define-with-factory","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-ts",parentName:"pre"},(0,t.kt)("span",{className:"token function",parentName:"code"},"define"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"name",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," String",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"dependencies",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," String",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token function-variable function",parentName:"code"},"factoryMethod"),(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"function"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token operator",parentName:"code"},"..."),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"dependencies"),"가 제공되면 ",(0,t.kt)("inlineCode",{parentName:"p"},"factoryMethod"),"가 각 의존성의 내보내기와 함께 같은 순서로 호출됩니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"dependencies"),"가 제공되지 않으면 ",(0,t.kt)("inlineCode",{parentName:"p"},"factoryMethod"),"가 ",(0,t.kt)("inlineCode",{parentName:"p"},"require"),", ",(0,t.kt)("inlineCode",{parentName:"p"},"exports")," 및 ",(0,t.kt)("inlineCode",{parentName:"p"},"module"),"과 함께 호출됩니다(호환성을 위함입니다!). 이 함수가 값을 반환하면 모듈에서 이 값을 내보냅니다. 컴파일러는 각 의존성을 사용할 수 있는지 확인합니다."),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.kt)("p",{parentName:"aside"},"Webpack은 ",(0,t.kt)("inlineCode",{parentName:"p"},"name")," 인수를 무시합니다.")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token function",parentName:"code"},"define"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,t.kt)("span",{className:"token string",parentName:"code"},"'jquery'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'my-module'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"$",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},",")," myModule"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// $와 myModule로 작업을 수행하세요..."),"\n\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 함수 내보내기"),"\n  ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"return")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,t.kt)("span",{className:"token function",parentName:"code"},"doSomething"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// ..."),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.kt)("p",{parentName:"aside"},"비동기 함수에서는 사용할 수 없습니다.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"define-with-value",parentName:"h3"}),"define (with value)",(0,t.kt)("a",{href:"#define-with-value","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-ts",parentName:"pre"},(0,t.kt)("span",{className:"token function",parentName:"code"},"define"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"value",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"!"),(0,t.kt)("span",{className:"token builtin",parentName:"code"},"Function"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"))),(0,t.kt)("p",null,"제공된 ",(0,t.kt)("inlineCode",{parentName:"p"},"value"),"를 내보냅니다. 여기서 ",(0,t.kt)("inlineCode",{parentName:"p"},"value"),"는 함수를 제외한 모든 것이 될 수 있습니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token function",parentName:"code"},"define"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  answer",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"42"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.kt)("p",{parentName:"aside"},"비동기 함수에서는 사용할 수 없습니다.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"require-amd-version",parentName:"h3"}),"require (amd-version)",(0,t.kt)("a",{href:"#require-amd-version","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-ts",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"dependencies",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," String",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,t.kt)("span",{className:"token function-variable function",parentName:"code"},"callback"),(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"function"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token operator",parentName:"code"},"..."),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"require.ensure"),"와 유사하게, 주어진 ",(0,t.kt)("inlineCode",{parentName:"p"},"dependencies"),"를 비동기식으로 로드되는 별도의 번들로 분할합니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"callback"),"은 ",(0,t.kt)("inlineCode",{parentName:"p"},"dependencies")," 배열의 각 종속성을 내보낼 때 호출됩니다."),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.kt)("p",{parentName:"aside"},"이 기능은 내부적으로 ",(0,t.kt)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"Promise")),"에 의존합니다. Internet Explorer 11과 같은 이전 브라우저에서 AMD를 사용하는 경우 ",(0,t.kt)("a",{href:"https://github.com/stefanpenner/es6-promise",parentName:"p"},"es6-promise")," 또는 ",(0,t.kt)("a",{href:"https://github.com/taylorhakes/promise-polyfill",parentName:"p"},"promise-polyfill"),"과 같은 폴리필을 사용하여 ",(0,t.kt)("inlineCode",{parentName:"p"},"Promise"),"를 대체해야 합니다.")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token function",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,t.kt)("span",{className:"token string",parentName:"code"},"'b'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"b"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"var")," c ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token function",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'c'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.kt)("p",{parentName:"aside"},"청크 이름을 제공하는 옵션이 없습니다.")),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"labeled-modules",parentName:"h2"}),"Labeled Modules",(0,t.kt)("a",{href:"#labeled-modules","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"내부 ",(0,t.kt)("inlineCode",{parentName:"p"},"LabeledModulesPlugin"),"을 통해 모듈 내에서 다음과 같은 내보내기 및 요청을 위한 메서드 사용이 가능합니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"export-label",parentName:"h3"}),"export label",(0,t.kt)("a",{href:"#export-label","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"제공된 ",(0,t.kt)("inlineCode",{parentName:"p"},"value"),"를 내보냅니다. label은 함수 선언이나 변수 선언 앞에 올 수 있습니다. 함수 이름 또는 변수 이름은 값을 내보내는 데 사용되는 식별자입니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-ts",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"export"),(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"var")," answer ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"42"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token function-variable function",parentName:"code"},"export"),(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,t.kt)("span",{className:"token function",parentName:"code"},"method"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"value",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 작업을 수행하세요..."),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.kt)("p",{parentName:"aside"},"비동기 함수에서 사용하면 기대한 효과가 없을 수 있습니다.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"require-label",parentName:"h3"}),"require label",(0,t.kt)("a",{href:"#require-label","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"현재 범위에서 사용 가능한 의존성의 모든 내보내기를 만듭니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"require")," label은 문자열 앞에 올 수 있습니다. 의존성은 ",(0,t.kt)("inlineCode",{parentName:"p"},"export")," label이 있는 값을 내보내야 합니다. CommonJS 또는 AMD 모듈은 사용할 수 없습니다."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"some-dependency.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-ts",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"export"),(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"var")," answer ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"42"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token function-variable function",parentName:"code"},"export"),(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,t.kt)("span",{className:"token function",parentName:"code"},"method"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"value",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 작업을 수행하세요..."),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-ts",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"require"),(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'some-dependency'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token builtin",parentName:"code"},"console"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"log"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"answer",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token function",parentName:"code"},"method"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token operator",parentName:"code"},"..."),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"webpack",parentName:"h2"}),"Webpack",(0,t.kt)("a",{href:"#webpack","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"위에서 설명한 모듈 구문 외에도 webpack에 한정된 몇가지 사용자 정의 메서드를 허용합니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"requirecontext",parentName:"h3"}),"require.context",(0,t.kt)("a",{href:"#requirecontext","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-ts",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"context"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"directory",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," String",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"includeSubdirs",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," Boolean",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"/* 선택, 기본값 true */"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"filter",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," RegExp",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"/* 선택, 기본값 /^\\.\\/.*$/, 모든 파일 */"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"mode",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," String",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"/* 선택, 'sync' | 'eager' | 'weak' | 'lazy' | 'lazy-once', 기본값 'sync' */"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"directory"),"에 대한 경로, ",(0,t.kt)("inlineCode",{parentName:"p"},"includeSubdirs")," 옵션, 포함된 모듈을 좀 더 세밀하게 제어하기 위한 ",(0,t.kt)("inlineCode",{parentName:"p"},"filter"),", 로드 작동 방식을 정의하는 ",(0,t.kt)("inlineCode",{parentName:"p"},"mode"),"를 사용하여 전체 의존성 그룹을 지정합니다. 기본 모듈은 나중에 쉽게 해석할 수 있습니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"var")," context ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," require",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"context"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'components'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token boolean",parentName:"code"},"true"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token regex",parentName:"code"},"/\\.html$/"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"var")," componentA ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," context",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"resolve"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'componentA'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"mode"),"가 ",(0,t.kt)("inlineCode",{parentName:"p"},"'lazy'"),"로 설정되면 기본 모듈이 비동기식으로 로드됩니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"var")," context ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," require",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"context"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'locales'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token boolean",parentName:"code"},"true"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token regex",parentName:"code"},"/\\.json$/"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'lazy'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token function",parentName:"code"},"context"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'localeA'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"then"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"locale"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// locale로 작업을 수행"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"사용 가능한 모드의 전체 목록과 그 동작은 ",(0,t.kt)("a",{href:"#import-1",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"import()"))," 문서에 설명되어 있습니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"requireinclude",parentName:"h3"}),"require.include",(0,t.kt)("a",{href:"#requireinclude","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-ts",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"include"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"dependency",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," String",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"실행하지 않고 ",(0,t.kt)("inlineCode",{parentName:"p"},"dependency"),"를 포함합니다. 출력 청크에서 모듈의 위치를 최적화하는 데 사용할 수 있습니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},"require",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"include"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'a'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\nrequire",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"ensure"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,t.kt)("span",{className:"token string",parentName:"code"},"'a'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'b'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"/* ... */"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\nrequire",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"ensure"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,t.kt)("span",{className:"token string",parentName:"code"},"'a'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'c'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"/* ... */"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"결과는 다음과 같습니다."),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"엔트리 청크: ",(0,t.kt)("inlineCode",{parentName:"li"},"file.js")," 와 ",(0,t.kt)("inlineCode",{parentName:"li"},"a")),(0,t.kt)("li",{parentName:"ul"},"익명 청크: ",(0,t.kt)("inlineCode",{parentName:"li"},"b")),(0,t.kt)("li",{parentName:"ul"},"익명 청크: ",(0,t.kt)("inlineCode",{parentName:"li"},"c"))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"require.include('a')"),"가 없으면 두 익명 청크에 복제됩니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"requireresolveweak",parentName:"h3"}),"require.resolveWeak",(0,t.kt)("a",{href:"#requireresolveweak","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"require.resolve"),"와 유사하지만, ",(0,t.kt)("inlineCode",{parentName:"p"},"module"),'을 번들로 가져오지 않습니다. 이것은 "약한" 의존성으로 간주합니다.'),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"if")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"__webpack_modules__",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"require",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"resolveWeak"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'module'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 모듈을 사용할 수 있을 때 수행..."),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"if")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"require",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"cache",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"require",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"resolveWeak"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'module'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 이전에 모듈이 로드된 경우 수행..."),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n\n",(0,t.kt)("span",{className:"token comment",parentName:"code"},'// 동적 해석("context")을 수행할 수 있습니다.'),"\n",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 다른 require/import 메서드와 유사합니다."),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," page ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'Foo'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n__webpack_modules__",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"require",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"resolveWeak"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token template-string",parentName:"code"},(0,t.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`"),(0,t.kt)("span",{className:"token string",parentName:"span"},"./page/"),(0,t.kt)("span",{className:"token interpolation",parentName:"span"},(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"${"),"page",(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"}")),(0,t.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`")),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,t.kt)("p",{parentName:"aside"},(0,t.kt)("inlineCode",{parentName:"p"},"require.resolveWeak"),"은 ",(0,t.kt)("a",{href:"https://github.com/faceyspacey/react-universal-component",parentName:"p"},"react-universal-component"),"와 같은 패키지에서 사용되는 ",(0,t.kt)("em",{parentName:"p"},"universal rendering"),"(SSR + Code Splitting)의 기초입니다. 코드가 서버와 클라이언트의 초기 페이지 로드에서 동기적으로 렌더링되도록 합니다. 청크가 수동으로 제공되거나 어떻게든 사용할 수 있어야 합니다. 청크로 번들 되어야 함을 나타내지 않고 모듈을 요구할 수 있습니다. 사용자 탐색이 추가 가져오기를 트리거할 때 인계받는 ",(0,t.kt)("inlineCode",{parentName:"p"},"import()"),"와 함께 사용됩니다.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"warning",parentName:"h3"}),"warning",(0,t.kt)("a",{href:"#warning","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"모듈 소스에 정적으로 분석할 수 없는 요구 사항이 포함되어 있으면, 중요한 종속성 경고가 표시됩니다."),(0,t.kt)("p",null,"예제 코드:"),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token function",parentName:"code"},"someFn"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"require",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token function",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"bind"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token keyword",parentName:"code"},"null"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token function",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"variable",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))))}o.isMDXComponent=!0,a.default=o}}]);