"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9529],{9529:function(e,a,n){n.r(a),n(7378);var t=n(2682);function p(){return p=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},p.apply(this,arguments)}function s(e){let{components:a,...n}=e;return(0,t.kt)("wrapper",p({components:a},n),(0,t.kt)("p",null,"원래 청크(및 그 안에 가져온 모듈)는 webpack 내부 그래프에서 부모-자식 관계로 연결되었습니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"CommonsChunkPlugin"),"은 중복되는 의존성을 피하고자 사용되었지만, 추가 최적화는 불가능했습니다."),(0,t.kt)("p",null,"webpack v4부터 ",(0,t.kt)("inlineCode",{parentName:"p"},"optimization.splitChunks"),"를 위해 ",(0,t.kt)("inlineCode",{parentName:"p"},"CommonsChunkPlugin"),"은 제거되었습니다."),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"defaults",parentName:"h2"}),"Defaults",(0,t.kt)("a",{href:"#defaults","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"즉시 사용 가능한 ",(0,t.kt)("inlineCode",{parentName:"p"},"SplitChunksPlugin"),"은 대부분의 사용자에게 잘 작동합니다."),(0,t.kt)("p",null,"초기 청크를 변경하면 HTML 파일이 프로젝트를 실행하기 위해 포함해야 하는 스크립트 태그에 영향을 미치기 때문에 기본적으로 on-demand 청크에만 영향을 미칩니다."),(0,t.kt)("p",null,"Webpack은 다음 조건에 따라 자동으로 청크를 분할합니다."),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"새 청크를 공유 할 수 있거나 모듈이 ",(0,t.kt)("inlineCode",{parentName:"li"},"node_modules")," 폴더에 있는 경우"),(0,t.kt)("li",{parentName:"ul"},"새 청크가 20kb보다 클 경우(min+gz 이전에)"),(0,t.kt)("li",{parentName:"ul"},"요청 시 청크를 로드할 때 최대 병렬 요청 수가 30개 이하일 경우"),(0,t.kt)("li",{parentName:"ul"},"초기 페이지 로드 시 최대 병렬 요청 수가 30개 이하일 경우")),(0,t.kt)("p",null,"마지막 두 가지 조건을 충족하려고 할 때 더 큰 청크가 선호됩니다."),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"configuration",parentName:"h2"}),"Configuration",(0,t.kt)("a",{href:"#configuration","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"Webpack은 이 기능에 대한 더 많은 제어를 원하는 개발자를 위해 옵션 세트를 제공합니다."),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.kt)("p",{parentName:"aside"},"웹 성능 모범 사례에 맞게 기본 설정이 선택되어 있지만, 프로젝트에 대한 최적의 전략은 다를 수 있습니다. 설정을 변경하는 경우 실제 이점이 있는지 확인하기 위해 변경 사항의 영향을 측정해야 합니다.")),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"optimizationsplitchunks",parentName:"h2"}),"optimization.splitChunks",(0,t.kt)("a",{href:"#optimizationsplitchunks","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"이 설정 객체는 ",(0,t.kt)("inlineCode",{parentName:"p"},"SplitChunksPlugin"),"의 기본 동작을 나타냅니다."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      chunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'async'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      minSize",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"20000"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      minRemainingSize",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"0"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      minChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"1"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      maxAsyncRequests",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"30"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      maxInitialRequests",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"30"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      enforceSizeThreshold",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"50000"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        defaultVendors",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          test",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token regex",parentName:"code"},"/[\\\\/]node_modules[\\\\/]/"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          priority",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"-"),(0,t.kt)("span",{className:"token number",parentName:"code"},"10"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          reuseExistingChunk",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token boolean",parentName:"code"},"true"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"default"),(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          minChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"2"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          priority",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"-"),(0,t.kt)("span",{className:"token number",parentName:"code"},"20"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          reuseExistingChunk",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token boolean",parentName:"code"},"true"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.kt)("p",{parentName:"aside"},"webpack에서 파일 경로를 처리할 때 항상 Unix 시스템에서는 ",(0,t.kt)("inlineCode",{parentName:"p"},"/"),", Windows에서는 ",(0,t.kt)("inlineCode",{parentName:"p"},"\\"),"를 포함합니다. 그렇기 때문에 ",(0,t.kt)("inlineCode",{parentName:"p"},"{cacheGroup}.test")," 필드에 ",(0,t.kt)("inlineCode",{parentName:"p"},"[\\\\/]"),"를 사용하여 경로 구분자를 나타내야 합니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"{cacheGroup}.test"),"의 ",(0,t.kt)("inlineCode",{parentName:"p"},"/")," 또는 ",(0,t.kt)("inlineCode",{parentName:"p"},"\\"),"는 크로스 플랫폼 사용 시 문제를 유발합니다.")),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.kt)("p",{parentName:"aside"},"webpack 5부터 ",(0,t.kt)("inlineCode",{parentName:"p"},"{cacheGroup}.test"),"에 엔트리 이름을 전달하고 ",(0,t.kt)("inlineCode",{parentName:"p"},"{cacheGroup}.name"),"에 기존 청크 이름을 사용하는 것은 더는 허용되지 않습니다.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksautomaticnamedelimiter",parentName:"h3"}),"splitChunks.automaticNameDelimiter",(0,t.kt)("a",{href:"#splitchunksautomaticnamedelimiter","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"string = '~'")),(0,t.kt)("p",null,"기본적으로 webpack은 출처와 청크 이름을 사용하여 이름을 생성합니다(예: ",(0,t.kt)("inlineCode",{parentName:"p"},"vendors~main.js"),"). 이 옵션을 사용하면 생성된 이름에 사용할 구분 기호를 지정할 수 있습니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunkschunks",parentName:"h3"}),"splitChunks.chunks",(0,t.kt)("a",{href:"#splitchunkschunks","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"string = 'async'")," ",(0,t.kt)("inlineCode",{parentName:"p"},"function (chunk)")),(0,t.kt)("p",null,"이것은 최적화를 위해 선택될 청크를 나타냅니다. 문자열이 제공될 때 유효한 값은 ",(0,t.kt)("inlineCode",{parentName:"p"},"all"),", ",(0,t.kt)("inlineCode",{parentName:"p"},"async")," 및 ",(0,t.kt)("inlineCode",{parentName:"p"},"initial"),"입니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"all"),"을 제공하는 것은 비동기 청크와 동기 청크 간에도 청크를 공유할 수 있다는 것을 의미하기 때문에 특히 강력할 수 있습니다."),(0,t.kt)("p",null,"대체 캐시 그룹(",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.fallbackCacheGroup.chunks"),")에도 적용됩니다."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 모든 유형의 청크를 포함합니다."),"\n      chunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'all'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"또는 더 많은 제어를 위한 기능을 제공할 수 있습니다. 반환 값은 각 청크를 포함할지 여부를 나타냅니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      ",(0,t.kt)("span",{className:"token function",parentName:"code"},"chunks"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"chunk"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// `my-excluded-chunk`를 제외합니다."),"\n        ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"return")," chunk",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"name ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"!==")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'my-excluded-chunk'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,t.kt)("p",{parentName:"aside"},"이 설정을 ",(0,t.kt)("a",{href:"/plugins/html-webpack-plugin/",parentName:"p"},"HtmlWebpackPlugin"),"과 결합할 수 있습니다. 이는 생성 된 모든 vendor 청크를 주입합니다.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksmaxasyncrequests",parentName:"h3"}),"splitChunks.maxAsyncRequests",(0,t.kt)("a",{href:"#splitchunksmaxasyncrequests","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"number = 30")),(0,t.kt)("p",null,"on-demand 로드 시의 최대 병렬 요청 수입니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksmaxinitialrequests",parentName:"h3"}),"splitChunks.maxInitialRequests",(0,t.kt)("a",{href:"#splitchunksmaxinitialrequests","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"number = 30")),(0,t.kt)("p",null,"엔트리 포인트의 최대 병렬 요청 수입니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksdefaultsizetypes",parentName:"h3"}),"splitChunks.defaultSizeTypes",(0,t.kt)("a",{href:"#splitchunksdefaultsizetypes","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"[string] = ['javascript', 'unknown']")),(0,t.kt)("p",null,"크기에 숫자를 사용할 때 적용되는 크기 유형을 설정합니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksminchunks",parentName:"h3"}),"splitChunks.minChunks",(0,t.kt)("a",{href:"#splitchunksminchunks","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"number = 1")),(0,t.kt)("p",null,"모듈이 분할 전에 청크 간에 공유되어야 하는 최소 개수입니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunkshidepathinfo",parentName:"h3"}),"splitChunks.hidePathInfo",(0,t.kt)("a",{href:"#splitchunkshidepathinfo","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"boolean")),(0,t.kt)("p",null,"maxSize로 분할된 부분의 이름을 만들 때 경로 정보가 노출되지 않도록 합니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksminsize",parentName:"h3"}),"splitChunks.minSize",(0,t.kt)("a",{href:"#splitchunksminsize","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"number = 20000")," ",(0,t.kt)("inlineCode",{parentName:"p"},"{ [index: string]: number }")),(0,t.kt)("p",null,"생성할 청크의 최소 byte 크기입니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksminsizereduction",parentName:"h3"}),"splitChunks.minSizeReduction",(0,t.kt)("a",{href:"#splitchunksminsizereduction","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"number")," ",(0,t.kt)("inlineCode",{parentName:"p"},"{ [index: string]: number }")),(0,t.kt)("p",null,"청크를 생성하는 데 필요한 기본 청크(번들)의 바이트 단위의 줄어들 최소 크기입니다. 즉, 청크로 분할해도 기본 청크(번들)의 크기가 주어진 바이트만큼 줄어들지 않으면 ",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.minSize")," 값을 충족하더라도 분할되지 않습니다."),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,t.kt)("p",{parentName:"aside"},"청크가 생성되려면 ",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.minSizeReduction")," 과 ",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.minSize"),"가 모두 충족되어야 합니다.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksenforcesizethreshold",parentName:"h3"}),"splitChunks.enforceSizeThreshold",(0,t.kt)("a",{href:"#splitchunksenforcesizethreshold","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"splitchunkscachegroupscachegroupenforcesizethreshold",parentName:"h4"}),(0,t.kt)("inlineCode",{parentName:"h4"},"splitChunks.cacheGroups.{cacheGroup}.enforceSizeThreshold"),(0,t.kt)("a",{href:"#splitchunkscachegroupscachegroupenforcesizethreshold","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"number = 50000")),(0,t.kt)("p",null,"분할이 적용되고 기타 제한(minRemainingSize, maxAsyncRequests, maxInitialRequests)이 무시되는 임계 크기 값입니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksminremainingsize",parentName:"h3"}),"splitChunks.minRemainingSize",(0,t.kt)("a",{href:"#splitchunksminremainingsize","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"splitchunkscachegroupscachegroupminremainingsize",parentName:"h4"}),(0,t.kt)("inlineCode",{parentName:"h4"},"splitChunks.cacheGroups.{cacheGroup}.minRemainingSize"),(0,t.kt)("a",{href:"#splitchunkscachegroupscachegroupminremainingsize","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"number = 0")),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.minRemainingSize")," 옵션은 분할 후 남아있는 청크의 최소 크기가 제한을 초과하도록 하여 크기가 0인 모듈을 방지하기 위해 webpack 5에 도입되었습니다. ",(0,t.kt)("a",{href:"/configuration/mode/#mode-development",parentName:"p"},"'development' 모드"),"에서 기본값은 ",(0,t.kt)("inlineCode",{parentName:"p"},"0"),"입니다. 다른 경우 ",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.minRemainingSize"),"는 기본적으로 ",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.minSize")," 값으로 설정되므로 심층 제어가 필요한 드문 경우를 제외하고는 수동으로 지정할 필요가 없습니다."),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.kt)("p",{parentName:"aside"},(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.minRemainingSize"),"는 단일 청크가 남아있을 때만 적용됩니다.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunkslayer",parentName:"h3"}),"splitChunks.layer",(0,t.kt)("a",{href:"#splitchunkslayer","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"splitchunkscachegroupscachegrouplayer",parentName:"h4"}),(0,t.kt)("inlineCode",{parentName:"h4"},"splitChunks.cacheGroups.{cacheGroup}.layer"),(0,t.kt)("a",{href:"#splitchunkscachegroupscachegrouplayer","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"RegExp")," ",(0,t.kt)("inlineCode",{parentName:"p"},"string")," ",(0,t.kt)("inlineCode",{parentName:"p"},"function")),(0,t.kt)("p",null,"모듈 계층별로 캐시 그룹에 모듈을 할당합니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksmaxsize",parentName:"h3"}),"splitChunks.maxSize",(0,t.kt)("a",{href:"#splitchunksmaxsize","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"number = 0")),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"maxSize"),"를 사용하면(캐시 그룹 ",(0,t.kt)("inlineCode",{parentName:"p"},"optimization.splitChunks.cacheGroups[x].maxSize"),"당 전역적으로 ",(0,t.kt)("inlineCode",{parentName:"p"},"optimization.splitChunks.maxSize")," 또는 대체 캐시 그룹 ",(0,t.kt)("inlineCode",{parentName:"p"},"optimization.splitChunks.fallbackCacheGroup.maxSize"),"의 경우) webpack이 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxSize")," byte보다 큰 청크를 더 작은 부분으로 분할하도록 합니다. 분할된 크기는 최소 ",(0,t.kt)("inlineCode",{parentName:"p"},"minSize"),"(",(0,t.kt)("inlineCode",{parentName:"p"},"maxSize")," 다음)입니다.\n알고리즘은 결정론적이며 모듈 변경은 로컬에만 영향을 미칩니다. 따라서 장기 캐싱을 사용할 때 사용할 수 있으며 기록이 필요하지 않습니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"maxSize"),"는 힌트일 뿐이며 모듈이 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxSize")," 보다 크거나 분할이 ",(0,t.kt)("inlineCode",{parentName:"p"},"minSize"),"를 벗어날 때 위반될 수 있습니다."),(0,t.kt)("p",null,"청크에 이미 이름이 있는 경우 각 부분은 해당 이름에서 파생된 새 이름을 얻습니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"optimization.splitChunks.hidePathInfo"),"의 값에 따라 첫 번째 모듈 이름이나 해시에서 파생된 키를 추가합니다."),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"maxSize")," 옵션은 HTTP/2 및 장기 캐싱과 함께 사용하기 위한 것입니다. 더 나은 캐싱을 위해 요청수가 증가합니다. 빠른 재구축을 위해 파일 크기를 줄이는 데도 사용할 수 있습니다."),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,t.kt)("p",{parentName:"aside"},(0,t.kt)("inlineCode",{parentName:"p"},"maxSize"),"는 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxInitialRequest/maxAsyncRequests"),"보다 우선순위가 높습니다. 실제 우선순위는 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxInitialRequest/maxAsyncRequests < maxSize < minSize"),"입니다.")),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,t.kt)("p",{parentName:"aside"},(0,t.kt)("inlineCode",{parentName:"p"},"maxSize")," 값을 설정하면 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxAsyncSize")," 및 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxInitialSize")," 값이 모두 설정됩니다.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksmaxasyncsize",parentName:"h3"}),"splitChunks.maxAsyncSize",(0,t.kt)("a",{href:"#splitchunksmaxasyncsize","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"number")),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"maxSize"),"와 마찬가지로 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxAsyncSize"),"는 전역적으로(",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.maxAsyncSize"),") 캐시 그룹(",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.cacheGroups.{cacheGroup}.maxAsyncSize"),") 또는 대체 캐시 그룹(",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.fallbackCacheGroup.maxAsyncSize"),")에 적용될 수 있습니다."),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"maxAsyncSize"),"와 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxSize"),"의 차이점은 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxAsyncSize"),"가 on-demand 로딩 청크에만 영향을 미친다는 점입니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksmaxinitialsize",parentName:"h3"}),"splitChunks.maxInitialSize",(0,t.kt)("a",{href:"#splitchunksmaxinitialsize","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"number")),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"maxSize"),"와 마찬가지로 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxInitialSize"),"는 전역적으로(",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.maxInitialSize"),") 캐시 그룹(",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.cacheGroups.{cacheGroup}.maxInitialSize"),") 또는 대체 캐시 그룹(",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.fallbackCacheGroup.maxInitialSize"),")에 적용될 수 있습니다."),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"maxInitialSize"),"와 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxSize"),"의 차이점은 ",(0,t.kt)("inlineCode",{parentName:"p"},"maxInitialSize"),"가 초기 로딩 청크 에만 영향을 미친다는 것입니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksname",parentName:"h3"}),"splitChunks.name",(0,t.kt)("a",{href:"#splitchunksname","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"boolean = false")," ",(0,t.kt)("inlineCode",{parentName:"p"},"function (module, chunks, cacheGroupKey) => string")," ",(0,t.kt)("inlineCode",{parentName:"p"},"string")),(0,t.kt)("p",null,"또한 ",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.cacheGroups.{cacheGroup}.name"),"와 같이 각 캐시 그룹에 대해서도 사용 가능합니다."),(0,t.kt)("p",null,"이는 분할 청크의 이름입니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"false"),"를 제공하면 청크의 이름이 동일하게 유지되므로 불필요하게 이름이 변경되지 않습니다. 프로덕션 빌드에 권장되는 값입니다."),(0,t.kt)("p",null,"문자열이나 함수를 제공하면 이름을 커스텀 할 수 있습니다. 항상 같은 문자열을 반환하는 문자열이나 함수를 지정하면 모든 공통 모듈과 vendor가 단일 청크로 병합됩니다. 이로 인해 초기 다운로드가 더 커지고 페이지 로드가 느려질 수 있습니다."),(0,t.kt)("p",null,"함수를 명시한 경우 청크의 이름을 선택하는 데 특히 유용한 ",(0,t.kt)("inlineCode",{parentName:"p"},"chunk.name")," 속성(여기서 ",(0,t.kt)("inlineCode",{parentName:"p"},"chunk"),"는 ",(0,t.kt)("inlineCode",{parentName:"p"},"chunks")," 배열의 요소)을 찾을 수 있습니다."),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.name"),"이 ",(0,t.kt)("a",{href:"/configuration/entry-context/#entry",parentName:"p"},"엔트리 포인트"),"와 일치하면 엔트리 포인트가 제거됩니다."),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,t.kt)("p",{parentName:"aside"},(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.cacheGroups.{cacheGroup}.name"),"은 소스청크의 부모인 청크로 모듈을 이용하는 데 사용할 수 있습니다. 예를 들어 ",(0,t.kt)("inlineCode",{parentName:"p"},'name: "entry-name"'),"을 사용하여 모듈을 ",(0,t.kt)("inlineCode",{parentName:"p"},"entry-name")," 청크로 이동합니다. 요청 시 명명된 청크를 사용할 수도 있지만 선택한 모듈이 청크 아래에서만 사용된다는 점에 주의해야 합니다.")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"main.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import")," _ ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"from")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'lodash'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\nconsole",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"log"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"_",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"join"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,t.kt)("span",{className:"token string",parentName:"code"},"'Hello'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'webpack'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"' '"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        commons",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          test",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token regex",parentName:"code"},"/[\\\\/]node_modules[\\\\/]/"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 여기서 cacheGroupKey는 cacheGroup의 키로 `commons`입니다."),"\n          ",(0,t.kt)("span",{className:"token function",parentName:"code"},"name"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},",")," chunks",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},",")," cacheGroupKey"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n            ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," moduleFileName ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," module\n              ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"identifier"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"\n              ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"split"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'/'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"\n              ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"reduceRight"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"item"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," item",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n            ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," allChunksNames ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," chunks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"map"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"item"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," item",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"name",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"join"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'~'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n            ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"return")," ",(0,t.kt)("span",{className:"token template-string",parentName:"code"},(0,t.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`"),(0,t.kt)("span",{className:"token interpolation",parentName:"span"},(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"${"),"cacheGroupKey",(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"}")),(0,t.kt)("span",{className:"token string",parentName:"span"},"-"),(0,t.kt)("span",{className:"token interpolation",parentName:"span"},(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"${"),"allChunksNames",(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"}")),(0,t.kt)("span",{className:"token string",parentName:"span"},"-"),(0,t.kt)("span",{className:"token interpolation",parentName:"span"},(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"${"),"moduleFileName",(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"}")),(0,t.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`")),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n          ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          chunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'all'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks")," 구성으로 webpack을 실행하면 다음의 이름으로 공통 그룹 청크도 출력됩니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"commons-main-lodash.js.e7519d2bb8777058fa27.js"),"(해시는 실제 출력의 예로 제공됩니다)."),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.kt)("p",{parentName:"aside"},"다른 분할 청크에 동일한 이름을 할당할 때 모든 vendor 모듈은 단일 공유 청크에 배치되지만, 더 많은 코드가 다운로드될 수 있으므로 권장하지 않습니다.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunksusedexports",parentName:"h3"}),"splitChunks.usedExports",(0,t.kt)("a",{href:"#splitchunksusedexports","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"splitchunkscachegroupscachegroupusedexports",parentName:"h4"}),(0,t.kt)("inlineCode",{parentName:"h4"},"splitChunks.cacheGroups{cacheGroup}.usedExports"),(0,t.kt)("a",{href:"#splitchunkscachegroupscachegroupusedexports","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"boolean = true")),(0,t.kt)("p",null,"모듈이 export 할 파일의 이름을 수정(mangle)하고 사용하지 않는 export를 생략하고 보다 효율적인 코드를 생성하기 위해 어떤 export를 사용하는지 알아봅니다.\n",(0,t.kt)("inlineCode",{parentName:"p"},"true"),"인 경우 각 런타임에 대해 사용된 export를 분석하고, ",(0,t.kt)("inlineCode",{parentName:"p"},'"global"'),"인 경우 결합한 모든 런타임에 대해 전역적으로 export를 분석합니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"splitchunkscachegroups",parentName:"h3"}),"splitChunks.cacheGroups",(0,t.kt)("a",{href:"#splitchunkscachegroups","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"캐시 그룹은 ",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.*"),"의 모든 옵션을 상속 및(또는) 재정의할 수 있습니다. 그러나 ",(0,t.kt)("inlineCode",{parentName:"p"},"test"),", ",(0,t.kt)("inlineCode",{parentName:"p"},"priority")," 및 ",(0,t.kt)("inlineCode",{parentName:"p"},"reuseExistingChunk"),"는 캐시 그룹 수준에서만 구성할 수 있습니다. 기본 캐시 그룹을 비활성화하려면 ",(0,t.kt)("inlineCode",{parentName:"p"},"false"),"로 설정하세요."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"default"),(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token boolean",parentName:"code"},"false"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"splitchunkscachegroupscachegrouppriority",parentName:"h4"}),(0,t.kt)("inlineCode",{parentName:"h4"},"splitChunks.cacheGroups.{cacheGroup}.priority"),(0,t.kt)("a",{href:"#splitchunkscachegroupscachegrouppriority","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"number = -20")),(0,t.kt)("p",null,"모듈은 여러 캐시 그룹에 속할 수 있습니다. 최적화는 ",(0,t.kt)("inlineCode",{parentName:"p"},"priority"),"(우선순위)가 더 높은 캐시 그룹을 선호합니다. 기본 그룹은 커스텀 그룹이 더 높은 우선순위를 가질 수 있도록 음수 우선순위를 갖습니다(커스텀 그룹일 경우 기본값은 ",(0,t.kt)("inlineCode",{parentName:"p"},"0"),"입니다)."),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"splitchunkscachegroupscachegroupreuseexistingchunk",parentName:"h4"}),(0,t.kt)("inlineCode",{parentName:"h4"},"splitChunks.cacheGroups.{cacheGroup}.reuseExistingChunk"),(0,t.kt)("a",{href:"#splitchunkscachegroupscachegroupreuseexistingchunk","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"boolean = true")),(0,t.kt)("p",null,"현재 청크에 이미 기본 번들에서 분리된 모듈이 포함되어 있으면 새로 생성되는 대신 재사용됩니다. 이것은 청크의 파일 이름에 영향을 줄 수 있습니다."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        defaultVendors",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          reuseExistingChunk",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token boolean",parentName:"code"},"true"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"splitchunkscachegroupscachegrouptype",parentName:"h4"}),(0,t.kt)("inlineCode",{parentName:"h4"},"splitChunks.cacheGroups.{cacheGroup}.type"),(0,t.kt)("a",{href:"#splitchunkscachegroupscachegrouptype","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function")," ",(0,t.kt)("inlineCode",{parentName:"p"},"RegExp")," ",(0,t.kt)("inlineCode",{parentName:"p"},"string")),(0,t.kt)("p",null,"모듈 유형별로 캐시 그룹에 모듈을 할당할 수 있습니다."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        json",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          type",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'json'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"splitchunkscachegroupstest",parentName:"h4"}),"splitChunks.cacheGroups.test",(0,t.kt)("a",{href:"#splitchunkscachegroupstest","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"splitchunkscachegroupscachegrouptest",parentName:"h4"}),(0,t.kt)("inlineCode",{parentName:"h4"},"splitChunks.cacheGroups.{cacheGroup}.test"),(0,t.kt)("a",{href:"#splitchunkscachegroupscachegrouptest","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"function (module, { chunkGraph, moduleGraph }) => boolean")," ",(0,t.kt)("inlineCode",{parentName:"p"},"RegExp")," ",(0,t.kt)("inlineCode",{parentName:"p"},"string")),(0,t.kt)("p",null,"캐시 그룹에 의해 선택되는 모듈을 제어합니다. 생략하면 모든 모듈이 선택됩니다. 이는 절대 경로 모듈 리소스 또는 청크 이름과 일치할 수 있습니다. 청크 이름이 일치하면 청크의 모든 모듈이 선택됩니다."),(0,t.kt)("p",null,"아래와 같이 ",(0,t.kt)("inlineCode",{parentName:"p"},"{cacheGroup}.test"),"에 기능을 제공합니다."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        svgGroup",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          ",(0,t.kt)("span",{className:"token function",parentName:"code"},"test"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"module"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n            ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// `module.resource`는 디스크에 있는 파일의 절대 경로를 포함합니다."),"\n            ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 플랫폼 간 호환성을 위해 / 또는 \\ 대신 `path.sep`을 사용합니다."),"\n            ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," path ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token function",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'path'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n            ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"return")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"\n              module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"resource ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"&&"),"\n              module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"resource",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"endsWith"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'.svg'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"&&"),"\n              module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"resource",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"includes"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token template-string",parentName:"code"},(0,t.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`"),(0,t.kt)("span",{className:"token interpolation",parentName:"span"},(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"${"),"path",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"."),"sep",(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"}")),(0,t.kt)("span",{className:"token string",parentName:"span"},"cacheable_svgs"),(0,t.kt)("span",{className:"token interpolation",parentName:"span"},(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"${"),"path",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"."),"sep",(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"}")),(0,t.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`")),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"\n            ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n          ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        byModuleTypeGroup",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          ",(0,t.kt)("span",{className:"token function",parentName:"code"},"test"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"module"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n            ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"return")," module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"type ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"===")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'javascript/auto'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n          ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"module")," 및 ",(0,t.kt)("inlineCode",{parentName:"p"},"chunks")," 객체에서 어떤 정보를 사용할 수 있는지 확인하려면 콜백에 ",(0,t.kt)("inlineCode",{parentName:"p"},"debugger;")," 문을 넣으면 됩니다. 그런 다음 ",(0,t.kt)("a",{href:"/contribute/debugging/#devtools",parentName:"p"},"디버그 모드에서 webpack 빌드를 실행"),"하여 Chromium DevTools의 파라미터를 검사합니다."),(0,t.kt)("p",null,"아래는 ",(0,t.kt)("inlineCode",{parentName:"p"},"{cacheGroup}.test"),"에 ",(0,t.kt)("inlineCode",{parentName:"p"},"RegExp"),"를 제공한 경우입니다."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        defaultVendors",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 플랫폼 간 호환성을 위한 경로 구분 기호로 `[\\\\/]`의 사용에 유의하세요."),"\n          test",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token regex",parentName:"code"},"/[\\\\/]node_modules[\\\\/]|vendor[\\\\/]analytics_provider|vendor[\\\\/]other_lib/"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"splitchunkscachegroupscachegroupfilename",parentName:"h4"}),(0,t.kt)("inlineCode",{parentName:"h4"},"splitChunks.cacheGroups.{cacheGroup}.filename"),(0,t.kt)("a",{href:"#splitchunkscachegroupscachegroupfilename","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"string")," ",(0,t.kt)("inlineCode",{parentName:"p"},"function (pathData, assetInfo) => string")),(0,t.kt)("p",null,"초기 청크인 경우에만 파일 이름을 재정의할 수 있습니다.\n",(0,t.kt)("a",{href:"/configuration/output/#outputfilename",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"output.filename")),"에서 사용할 수 있는 모든 플레이스홀더는 여기에서도 사용할 수 있습니다."),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.kt)("p",{parentName:"aside"},"이 옵션은 ",(0,t.kt)("inlineCode",{parentName:"p"},"splitChunks.filename"),"에서 전역적으로 설정할 수도 있지만, 이는 권장되지 않으며 ",(0,t.kt)("a",{href:"#splitchunkschunks",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"splitChunks.chunks")),"가 ",(0,t.kt)("inlineCode",{parentName:"p"},"'initial'"),"로 설정되지 않는 경우 오류가 발생할 수 있습니다. 전역으로 설정하지 마세요.")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        defaultVendors",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          filename",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'[name].bundle.js'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"아래는 함수로 사용하는 방법입니다."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        defaultVendors",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          ",(0,t.kt)("span",{className:"token function-variable function",parentName:"code"},"filename"),(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"pathData"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n            ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 요구 사항에 따라 파일 이름 문자열을 생성하기 위해 pathData 객체를 사용하세요."),"\n            ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"return")," ",(0,t.kt)("span",{className:"token template-string",parentName:"code"},(0,t.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`"),(0,t.kt)("span",{className:"token interpolation",parentName:"span"},(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"${"),"pathData",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"."),"chunk",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"."),"name",(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"}")),(0,t.kt)("span",{className:"token string",parentName:"span"},"-bundle.js"),(0,t.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`")),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n          ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"파일 이름 앞에 경로를 제공하여 폴더 구조를 생성할 수 있습니다(예: ",(0,t.kt)("inlineCode",{parentName:"p"},"'js/vendor/bundle.js'"),")."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        defaultVendors",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          filename",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'js/[name]/bundle.js'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"splitchunkscachegroupscachegroupenforce",parentName:"h4"}),(0,t.kt)("inlineCode",{parentName:"h4"},"splitChunks.cacheGroups.{cacheGroup}.enforce"),(0,t.kt)("a",{href:"#splitchunkscachegroupscachegroupenforce","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"boolean = false")),(0,t.kt)("p",null,"Webpack에 ",(0,t.kt)("a",{href:"#splitchunksminsize",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"splitChunks.minSize")),", ",(0,t.kt)("a",{href:"#splitchunksminchunks",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"splitChunks.minChunks")),", ",(0,t.kt)("a",{href:"#splitchunksmaxasyncrequests",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"splitChunks.maxAsyncRequests"))," 및 ",(0,t.kt)("a",{href:"#splitchunksmaxinitialrequests",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"splitChunks.maxInitialRequests"))," 옵션을 무시하고 항상 이 캐시 그룹에 대한 청크를 생성하도록 지시합니다."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        defaultVendors",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          enforce",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token boolean",parentName:"code"},"true"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"splitchunkscachegroupscachegroupidhint",parentName:"h4"}),(0,t.kt)("inlineCode",{parentName:"h4"},"splitChunks.cacheGroups.{cacheGroup}.idHint"),(0,t.kt)("a",{href:"#splitchunkscachegroupscachegroupidhint","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"string")),(0,t.kt)("p",null,"청크 ID에 대한 힌트를 설정합니다. 청크의 파일 이름에 추가됩니다."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        defaultVendors",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          idHint",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'vendors'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"examples",parentName:"h2"}),"Examples",(0,t.kt)("a",{href:"#examples","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"defaults-example-1",parentName:"h3"}),"Defaults: Example 1",(0,t.kt)("a",{href:"#defaults-example-1","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token comment",parentName:"code"},"// index.js"),"\n\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'./a'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";")," ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 동적 import"))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token comment",parentName:"code"},"// a.js"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'react'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\n",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."))),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"결과:")," ",(0,t.kt)("inlineCode",{parentName:"p"},"react"),"를 포함하는 별도의 청크가 생성됩니다. import 호출에서 이 청크는 ",(0,t.kt)("inlineCode",{parentName:"p"},"./a"),"를 포함하는 원래 청크와 병렬로 로드됩니다."),(0,t.kt)("p",null,"이유:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"조건 1: 청크는 ",(0,t.kt)("inlineCode",{parentName:"li"},"node_modules"),"의 모듈을 포함합니다"),(0,t.kt)("li",{parentName:"ul"},"조건 2: ",(0,t.kt)("inlineCode",{parentName:"li"},"react"),"가 30kb보다 큽니다"),(0,t.kt)("li",{parentName:"ul"},"조건 3: import 호출 시 병렬 요청 수는 2입니다"),(0,t.kt)("li",{parentName:"ul"},"조건 4: 초기 페이지 로드 시 요청에 영향을 주지 않습니다")),(0,t.kt)("p",null,"이 이유는 무엇일까요? ",(0,t.kt)("inlineCode",{parentName:"p"},"react"),"는 애플리케이션 코드만큼 자주 변경되지 않을 것입니다. 별도의 청크로 이동하면 이 청크를 앱 코드와 별도로 캐시할 수 있습니다(청크 해시, 레코드, Cache-Control 또는 장기 캐시 접근 방식을 사용한다고 가정합니다)."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"defaults-example-2",parentName:"h3"}),"Defaults: Example 2",(0,t.kt)("a",{href:"#defaults-example-2","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token comment",parentName:"code"},"// entry.js"),"\n\n",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 동적 imports"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'./a'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'./b'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token comment",parentName:"code"},"// a.js"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'./helpers'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";")," ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// helpers의 크기는 40kb입니다"),"\n\n",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."))),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token comment",parentName:"code"},"// b.js"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'./helpers'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'./more-helpers'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";")," ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// more-helpers 또한 40kb의 크기를 가집니다"),"\n\n",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."))),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"결과:")," ",(0,t.kt)("inlineCode",{parentName:"p"},"./helpers"),"와 이에 대한 모든 의존성을 포함하는 별도의 청크가 생성됩니다. import 호출에서 이 청크는 원래 청크와 병렬로 로드됩니다."),(0,t.kt)("p",null,"이유:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"조건 1: 청크는 두 import 호출 간에 공유됩니다"),(0,t.kt)("li",{parentName:"ul"},"조건 2: ",(0,t.kt)("inlineCode",{parentName:"li"},"helpers"),"는 30kb보다 큽니다"),(0,t.kt)("li",{parentName:"ul"},"조건 3: import 호출 시 병렬 요청 수는 2입니다"),(0,t.kt)("li",{parentName:"ul"},"조건 4: 초기 페이지 로드 시 요청에 영향을 주지 않습니다")),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"helpers"),"의 내용을 각 청크에 넣으면 코드가 두 번 다운로드됩니다. 별도의 청크를 사용하면 한 번만 발생합니다. 우리는 추가 요청 비용을 지불하며 이는 절충안으로 간주할 수 있습니다. 그렇기 때문에 최소 크기는 30kb입니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"split-chunks-example-1",parentName:"h3"}),"Split Chunks: Example 1",(0,t.kt)("a",{href:"#split-chunks-example-1","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"엔트리 포인트 간에 공유되는 모든 코드를 포함하는 ",(0,t.kt)("inlineCode",{parentName:"p"},"commons")," 청크를 만듭니다."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        commons",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          name",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'commons'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          chunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'initial'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          minChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"2"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.kt)("p",{parentName:"aside"},"이 구성은 초기 번들을 확장할 수 있으므로 모듈이 즉시 필요하지 않을 때 동적 import를 사용하는 것이 좋습니다.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"split-chunks-example-2",parentName:"h3"}),"Split Chunks: Example 2",(0,t.kt)("a",{href:"#split-chunks-example-2","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"전체 애플리케이션에서 ",(0,t.kt)("inlineCode",{parentName:"p"},"node_modules"),"의 모든 코드를 포함하는 ",(0,t.kt)("inlineCode",{parentName:"p"},"vendors")," 청크를 만듭니다."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        commons",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          test",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token regex",parentName:"code"},"/[\\\\/]node_modules[\\\\/]/"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          name",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'vendors'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          chunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'all'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.kt)("p",{parentName:"aside"},"이로 인해 모든 외부 패키지가 포함된 큰 청크가 생성될 수 있습니다. 핵심 프레임워크와 유틸리티만 포함하고 나머지 종속성을 동적으로 로드하는 것이 좋습니다.")),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"split-chunks-example-3",parentName:"h3"}),"Split Chunks: Example 3",(0,t.kt)("a",{href:"#split-chunks-example-3","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"RegExp"),"와 일치하는 특정 ",(0,t.kt)("inlineCode",{parentName:"p"},"node_modules")," 패키지를 포함하는 ",(0,t.kt)("inlineCode",{parentName:"p"},"custom vendor")," 청크를 만듭니다."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    splitChunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      cacheGroups",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        vendor",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          test",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token regex",parentName:"code"},"/[\\\\/]node_modules[\\\\/](react|react-dom)[\\\\/]/"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          name",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'vendor'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          chunks",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'all'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,t.kt)("p",{parentName:"aside"},"이로 인해 ",(0,t.kt)("inlineCode",{parentName:"p"},"react"),"와 ",(0,t.kt)("inlineCode",{parentName:"p"},"react-dom"),"이 별도의 청크로 분할됩니다. 어떤 패키지가 청크에 포함되었는지 확실하지 않은 경우 자세한 내용은 ",(0,t.kt)("a",{href:"/guides/code-splitting/#bundle-analysis",parentName:"p"},"Bundle Analysis")," 섹션을 참고하세요.")))}s.isMDXComponent=!0,a.default=s}}]);