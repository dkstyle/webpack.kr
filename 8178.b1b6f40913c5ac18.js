"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8178],{8178:function(e,n,a){a.r(n),a(7378);var t=a(2682);function p(){return p=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e},p.apply(this,arguments)}const l=("Badge",e=>(console.warn("Component `%s` was not imported, exported, or provided by MDXProvider as global scope","Badge"),(0,t.kt)(t.kt.Fragment,null,e.children)));function i(e){let{components:n,...a}=e;return(0,t.kt)("wrapper",p({components:n},a),(0,t.kt)("p",null,"Webpack 내부적으로 사용하는 플러그인의 목록입니다."),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.kt)("p",{parentName:"aside"},"Webpack 기반으로 나만의 컴파일러를 구축하거나, 내부 검토할 때만 신경 써야합니다.")),(0,t.kt)("p",null,"내부 플러그인의 범주:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{href:"#environment",parentName:"li"},"environment")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{href:"#compiler",parentName:"li"},"compiler")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{href:"#entry",parentName:"li"},"entry")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{href:"#output",parentName:"li"},"output")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{href:"#source",parentName:"li"},"source")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{href:"#optimize",parentName:"li"},"optimize"))),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"environment",parentName:"h2"}),"environment",(0,t.kt)("a",{href:"#environment","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"컴파일러의 환경에 영향을 주는 플러그인입니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"nodeenvironmentplugin",parentName:"h3"}),"NodeEnvironmentPlugin",(0,t.kt)("a",{href:"#nodeenvironmentplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"webpack.node.NodeEnvironmentPlugin()")),(0,t.kt)("p",null,"컴파일러에 Node.js 스타일의 파일 시스템을 적용합니다."),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"compiler",parentName:"h2"}),"compiler",(0,t.kt)("a",{href:"#compiler","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"컴파일러에 영향을 주는 플러그인입니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"memorycacheplugin",parentName:"h3"}),"MemoryCachePlugin",(0,t.kt)("a",{href:"#memorycacheplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"MemoryCachePlugin()")),(0,t.kt)("p",null,"모듈이 메모리에 캐시되는 컴파일러에 캐시를 추가합니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"progressplugin",parentName:"h3"}),"ProgressPlugin",(0,t.kt)("a",{href:"#progressplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"ProgressPlugin(handler)")),(0,t.kt)("p",null,"컴파일러에 훅을 하여 진행 정보를 추출합니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"handler"),"는 ",(0,t.kt)("inlineCode",{parentName:"p"},"function(percentage, message)"),"라는 서명이 있어야 합니다. Percentage는 0과 1 사이의 값으로 불립니다. 0은 시작, 1은 끝을 나타냅니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"recordidsplugin",parentName:"h3"}),"RecordIdsPlugin",(0,t.kt)("a",{href:"#recordidsplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"RecordIdsPlugin()")),(0,t.kt)("p",null,"레코드로부터 청크 아이디와 모듈을 저장하고 복원합니다."),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"entry",parentName:"h2"}),"entry",(0,t.kt)("a",{href:"#entry","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"컴파일에 엔트리 청크를 포함하는 플러그인입니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"entryplugin",parentName:"h3"}),"EntryPlugin",(0,t.kt)("a",{href:"#entryplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"EntryPlugin(context, entry, options)")),(0,t.kt)("p",null,"컴파일에 엔트리 청크를 추가합니다. 청크의 이름은 ",(0,t.kt)("inlineCode",{parentName:"p"},"options.name"),"이고 오직 하나의 모듈만 포함합니다(의존성 추가). 모듈은 ",(0,t.kt)("inlineCode",{parentName:"p"},"context")," (절대 경로)의 ",(0,t.kt)("inlineCode",{parentName:"p"},"entry"),"에서 확인됩니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"prefetchplugin",parentName:"h3"}),"PrefetchPlugin",(0,t.kt)("a",{href:"#prefetchplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"PrefetchPlugin(context, request)")),(0,t.kt)("p",null,"병렬 컴파일을 더 사용하기 위해서 의존성과 ",(0,t.kt)("inlineCode",{parentName:"p"},"request"),"를 프리페치합니다. 어떤 청크도 생성되지 않습니다. 모듈은 ",(0,t.kt)("inlineCode",{parentName:"p"},"context")," (절대 경로)의 ",(0,t.kt)("inlineCode",{parentName:"p"},"request"),"에서 확인됩니다."),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"output",parentName:"h2"}),"output",(0,t.kt)("a",{href:"#output","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"jsonptemplateplugin",parentName:"h3"}),"JsonpTemplatePlugin",(0,t.kt)("a",{href:"#jsonptemplateplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"JsonpTemplatePlugin(options)")),(0,t.kt)("p",null,"청크는 JSONP-calls로 래핑되어 있습니다. 로딩 알고리즘은 엔트리 청크에 포함이 됩니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"<script>")," 태그를 추가함으로써 청크를 로드합니다."),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"options"),"는 출력 옵션입니다."),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"options.jsonpFunction"),"은 JSONP 함수입니다."),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"options.publicPath"),"는 청크를 로딩하기 위한 경로로 사용됩니다."),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"options.chunkFilename"),"는 청크가 예상되는 파일 이름 이름입니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"nodetemplateplugin",parentName:"h3"}),"NodeTemplatePlugin",(0,t.kt)("a",{href:"#nodetemplateplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"node/NodeTemplatePlugin(options)")),(0,t.kt)("p",null,"청크는 번들 모듈을 내보내는 Node.js 모듈로 래핑되어 있습니다. 엔트리 청크는 청크를 요구함으로써 로드됩니다."),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"options"),"는 출력 옵션입니다."),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"options.chunkFilename"),"는 청크를 로딩하기 위한 경로로 사용됩니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"librarytemplateplugin",parentName:"h3"}),"LibraryTemplatePlugin",(0,t.kt)("a",{href:"#librarytemplateplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"LibraryTemplatePlugin(name, target)")),(0,t.kt)("p",null,"엔트리 청크들은 ",(0,t.kt)("inlineCode",{parentName:"p"},"type")," 유형의 ",(0,t.kt)("inlineCode",{parentName:"p"},"name")," 라이브러리로부터 꾸며집니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"webworkertemplateplugin",parentName:"h3"}),"WebWorkerTemplatePlugin",(0,t.kt)("a",{href:"#webworkertemplateplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"webworker/WebWorkerTemplatePlugin(options)")),(0,t.kt)("p",null,"청크는 ",(0,t.kt)("inlineCode",{parentName:"p"},"importScripts"),"에 의해 로드됩니다. 그렇지 않다면 ",(0,t.kt)("a",{href:"#jsonptemplateplugin",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"JsonpTemplatePlugin")),"과 비슷합니다."),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"options"),"은 출력 옵션입니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"evaldevtoolmoduleplugin",parentName:"h3"}),"EvalDevToolModulePlugin",(0,t.kt)("a",{href:"#evaldevtoolmoduleplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"// @sourceURL"),"로 주석이 달린 ",(0,t.kt)("inlineCode",{parentName:"p"},"eval"),"로 각각의 모듈을 래핑함으로써 모듈 템플릿을 꾸밉니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"sourcemapdevtoolplugin",parentName:"h3"}),"SourceMapDevToolPlugin",(0,t.kt)("a",{href:"#sourcemapdevtoolplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SourceMapDevToolPlugin(sourceMapFilename, sourceMappingURLComment, moduleFilenameTemplate, fallbackModuleFilenameTemplate)")),(0,t.kt)("p",null,"각 청크에 대한 소스맵을 생성함으로써 템플릿들을 꾸밉니다."),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"sourceMapFilename"),"은 소스맵의 파일 이름 템플릿입니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"[hash]"),", ",(0,t.kt)("inlineCode",{parentName:"p"},"[name]"),", ",(0,t.kt)("inlineCode",{parentName:"p"},"[id]"),", ",(0,t.kt)("inlineCode",{parentName:"p"},"[file]")," 과 ",(0,t.kt)("inlineCode",{parentName:"p"},"[filebase]"),"는 교체되었습니다. 만약에 인자가 없으면, 소스맵은 DataUrl로 인라인 될 것입니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"hotmodulereplacementplugin",parentName:"h3"}),"HotModuleReplacementPlugin",(0,t.kt)("a",{href:"#hotmodulereplacementplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"HotModuleReplacementPlugin(options)")),(0,t.kt)("p",null,"Hot module replacement 대한 지원을 추가합니다. 런타임 코드를 추가한 템플릿을 꾸밉니다. `module.hot' API를 추가합니다."),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"options.hotUpdateChunkFilename"),"은 hot 업데이트 청크 파일 이름입니다."),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"options.hotUpdateMainFilename"),"은 hot 업데이트 매니페스트 파일 이름입니다."),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"options.hotUpdateFunction"),"는 hot 업데이트의 JSON 함수 이름입니다."),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"source",parentName:"h2"}),"source",(0,t.kt)("a",{href:"#source","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"모듈의 소스 코드에 영향을 미치는 플러그인입니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"apiplugin",parentName:"h3"}),"APIPlugin",(0,t.kt)("a",{href:"#apiplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"webpack_public_path, webpack_require, webpack_modules 과 webpack_chunk_load에 접근할 수 있도록 설정합니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"require.valueOf"),"와 ",(0,t.kt)("inlineCode",{parentName:"p"},"require.onError"),"가 다른 플러그인으로 처리되지 않도록 합니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"compatibilityplugin",parentName:"h3"}),"CompatibilityPlugin",(0,t.kt)("a",{href:"#compatibilityplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"현재는 쓸모가 없습니다. 다른 모듈 로더과의 호환성을 보장합니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"constplugin",parentName:"h3"}),"ConstPlugin",(0,t.kt)("a",{href:"#constplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"파서에 의해 발사된 훅을 사용함으로써 dead branch를 추가로 제거를 가능하게 하려고 ",(0,t.kt)("inlineCode",{parentName:"p"},"if (...)"),"문과 삼항 연산자를 평가하여 ",(0,t.kt)("inlineCode",{parentName:"p"},"true/false"),"로 바꾸려고 시도합니다."),(0,t.kt)("p",null,"프로덕션 모드에는 dead branch와 관련하여 여러 최적화 들이 있습니다."),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{href:"https://github.com/fabiosantoscode/terser",parentName:"li"},"Terser")," 이 수행한 최적화입니다."),(0,t.kt)("li",{parentName:"ul"},"Webpack이 수행한 최적화 입니다.")),(0,t.kt)("p",null,"Webpack은 조건문을 평가하려고 할 것입니다. 만약 성공한다면 dead branch가 제거됩니다. Webpck은 컴파일러가 알지 못하는 한 상수 폴딩을 할 수 없습니다. 다음 예시를 봅시다."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{")," calculateTax ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"from")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'./tax'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," ",(0,t.kt)("span",{className:"token constant",parentName:"code"},"FOO")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"1"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"if")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token constant",parentName:"code"},"FOO")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"===")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"0"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// dead branch"),"\n  ",(0,t.kt)("span",{className:"token function",parentName:"code"},"calculateTax"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"))),(0,t.kt)("p",null,"위의 예시에서, webpack은 branch를 자를 수 없지만, Terser는 할 수 있습니다. 그러나 만약 ",(0,t.kt)("inlineCode",{parentName:"p"},"FOO"),"가 ",(0,t.kt)("a",{href:"/plugins/define-plugin/",parentName:"p"},"DefinePlugin")," 을 사용하면, webpack은 성공할 것입니다."),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"import { calculateTax } from './tax';"),"도 제거된다는 점을 언급해야 합니다. 왜냐하면 ",(0,t.kt)("inlineCode",{parentName:"p"},"calculateTax()")," 호출이 dead branch에 있어 제거되었기 때문입니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"provideplugin",parentName:"h3"}),"ProvidePlugin",(0,t.kt)("a",{href:"#provideplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"ProvidePlugin(name, request)")),(0,t.kt)("p",null,"만약에 모듈에서 ",(0,t.kt)("inlineCode",{parentName:"p"},"name"),"이 사용되는 경우는 ",(0,t.kt)("inlineCode",{parentName:"p"},"require(<request>)"),"에 의해 로드된 모듈에 의해서 채워집니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"nodestuffplugin",parentName:"h3"}),"NodeStuffPlugin",(0,t.kt)("a",{href:"#nodestuffplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"NodeStuffPlugin(options, context)")),(0,t.kt)("p",null,"Node.js 모듈에서는 일반적으로 사용할 수 있는 항목을 제공합니다."),(0,t.kt)("p",null,"또한, ",(0,t.kt)("inlineCode",{parentName:"p"},"module"),"을 사용하는 경우에는 일부의 Node.js 항목으로 채워지도록 합니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"requirejsstuffplugin",parentName:"h3"}),"RequireJsStuffPlugin",(0,t.kt)("a",{href:"#requirejsstuffplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"require.js에서는 일반적으로 사용할 수 있는 항목을 제공합니다."),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"require[js].config"),"는 제거됩니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"require.version"),"은 ",(0,t.kt)("inlineCode",{parentName:"p"},"0.0.0"),"입니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"requirejs.onError"),"는 ",(0,t.kt)("inlineCode",{parentName:"p"},"require.onError"),"에 매핑이 됩니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"nodesourceplugin",parentName:"h3"}),"NodeSourcePlugin",(0,t.kt)("a",{href:"#nodesourceplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"node/NodeSourcePlugin(options)")),(0,t.kt)("p",null,"이 모듈은 Node.js 환경이 아니면 사용할 수 없는 Node.js의 내용을 추가합니다."),(0,t.kt)("p",null,"사용되는 경우에는 ",(0,t.kt)("inlineCode",{parentName:"p"},"process"),", ",(0,t.kt)("inlineCode",{parentName:"p"},"console"),", ",(0,t.kt)("inlineCode",{parentName:"p"},"Buffer"),"와 ",(0,t.kt)("inlineCode",{parentName:"p"},"glo"),"에 대한 polyfills을 추가해야 합니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"nodetargetplugin",parentName:"h3"}),"NodeTargetPlugin",(0,t.kt)("a",{href:"#nodetargetplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"node/NodeTargetPlugin()")),(0,t.kt)("p",null,"만약 Node.js 환경에서 번들을 실행하는 경우에는 플러그인을 사용해야 합니다."),(0,t.kt)("p",null,"만약 네이티브 모듈이 번들 되어있더라도 올바르게 로드되도록 보장합니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"amdplugin",parentName:"h3"}),"AMDPlugin",(0,t.kt)("a",{href:"#amdplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"dependencies/AMDPlugin(options)")),(0,t.kt)("p",null,"AMD 스타일의 ",(0,t.kt)("inlineCode",{parentName:"p"},"define"),"과 ",(0,t.kt)("inlineCode",{parentName:"p"},"require")," 모듈을 제공합니다. 또한, ",(0,t.kt)("inlineCode",{parentName:"p"},"require.amd"),", ",(0,t.kt)("inlineCode",{parentName:"p"},"define.amd")," 와 webpack_amd_options## 를 파라미터로 전달된 ",(0,t.kt)("inlineCode",{parentName:"p"},"options"),"에 바인딩합니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"commonjsplugin",parentName:"h3"}),"CommonJsPlugin",(0,t.kt)("a",{href:"#commonjsplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"dependencies/CommonJsPlugin")),(0,t.kt)("p",null,"CommonJs 스타일의 ",(0,t.kt)("inlineCode",{parentName:"p"},"require")," 모듈을 제공합니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"requirecontextplugin",parentName:"h3"}),"RequireContextPlugin",(0,t.kt)("a",{href:"#requirecontextplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"dependencies/RequireContextPlugin(modulesDirectories, extensions)")),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"require.content"),"를 제공합니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"modulesDirectories"),"와 ",(0,t.kt)("inlineCode",{parentName:"p"},"extensions")," 파라미터는 파일에 대한 요청을 대체할 수 있는 것을 찾는 데 사용됩니다. 리졸버에 제공하는 것과 동일한 배열을 제공하는 것이 유용합니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"requireensureplugin",parentName:"h3"}),"RequireEnsurePlugin",(0,t.kt)("a",{href:"#requireensureplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"dependencies/RequireEnsurePlugin()")),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"require.ensure"),"를 제공합니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"requireincludeplugin",parentName:"h3"}),"RequireIncludePlugin",(0,t.kt)("a",{href:"#requireincludeplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"dependencies/RequireIncludePlugin()")),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"require.include"),"를 제공합니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"defineplugin",parentName:"h3"}),"DefinePlugin",(0,t.kt)("a",{href:"#defineplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"DefinePlugin(definitions)")),(0,t.kt)("p",null,"식별자에 대해 상수를 정의합니다."),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"definitions"),"은 객체입니다."),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"optimize",parentName:"h2"}),"optimize",(0,t.kt)("a",{href:"#optimize","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"webpack.optimize")," 네임스페이스 아래의 모든 플러그인은 ",(0,t.kt)("a",{href:"/configuration/mode/#mode-none",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"mode"))," 가 ",(0,t.kt)("inlineCode",{parentName:"p"},"'none'"),"으로 설정된 경우에만 사용해야 합니다. 그렇지 않다면 플러그인은 두 번 적용되어야 합니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"limitchunkcountplugin",parentName:"h3"}),"LimitChunkCountPlugin",(0,t.kt)("a",{href:"#limitchunkcountplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"optimize/LimitChunkCountPlugin(options)")),(0,t.kt)("p",null,"병합 청크의 제한된 청크 수는 `options.maxChunks'보다 작습니다."),(0,t.kt)("p",null,"각 청크에 대한 오버헤드는 ",(0,t.kt)("inlineCode",{parentName:"p"},"options.chunkOverhead")," 또는 기본값인 10000에 의해 제공됩니다. 엔트리 청크의 크기는 ",(0,t.kt)("inlineCode",{parentName:"p"},"options.entryChunkMultiplicator")," (또는 10)에 의해 곱해집니다."),(0,t.kt)("p",null,"전체적인 크기를 가장 많이 줄인 청크가 첫 번째로 병합됩니다. 만약 여러 조합이 같으면 병합된 크기가 작은 것이 선택됩니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"mergeduplicatechunksplugin",parentName:"h3"}),"MergeDuplicateChunksPlugin",(0,t.kt)("a",{href:"#mergeduplicatechunksplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"optimize/MergeDuplicateChunksPlugin()")),(0,t.kt)("p",null,"같은 모듈의 청크가 병합됩니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"removeemptychunksplugin",parentName:"h3"}),"RemoveEmptyChunksPlugin",(0,t.kt)("a",{href:"#removeemptychunksplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"optimize/RemoveEmptyChunksPlugin()")),(0,t.kt)("p",null,"모든 부모 청크에 포함된 모듈은 청크로부터 제거됩니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"minchunksizeplugin",parentName:"h3"}),"MinChunkSizePlugin",(0,t.kt)("a",{href:"#minchunksizeplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"optimize/MinChunkSizePlugin(minChunkSize)"),"-"),(0,t.kt)("p",null,"각 청크의 최소 크기가 ",(0,t.kt)("inlineCode",{parentName:"p"},"minChunkSize"),"가 될 때까지 청크를 병합합니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"moduleconcatenationplugin",parentName:"h3"}),"ModuleConcatenationPlugin",(0,t.kt)("a",{href:"#moduleconcatenationplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("a",{href:"/plugins/module-concatenation-plugin/",parentName:"p"},"ModuleConcatenationPlugin page"),"에 대한 구체적인 내용을 확인해보세요."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"flagincludedchunksplugin",parentName:"h3"}),"FlagIncludedChunksPlugin",(0,t.kt)("a",{href:"#flagincludedchunksplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"optimize/FlagIncludedChunksPlugin()")),(0,t.kt)("p",null,"청크에 포함된 청크의 청크 아이디를 추가합니다. 불필요한 청크 로드를 제거할 수 있습니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"realcontenthashplugin",parentName:"h3"}),"RealContentHashPlugin",(0,t.kt)("a",{href:"#realcontenthashplugin","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"optimize/RealContentHashPlugin()")),(0,t.kt)("p",null,(0,t.kt)("a",{href:"/configuration/optimization/#optimizationrealcontenthash",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"optimization.realContentHash"))," 옵션이 활성화 될 때, webpack은 내부적으로 ",(0,t.kt)("inlineCode",{parentName:"p"},"RealContentHashPlugin"),"을 컴파일러에 추가합니다."),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"hook",parentName:"h4"}),"Hook",(0,t.kt)("a",{href:"#hook","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"RealContentHashPlugin"),"은 해시 업데이트를 커스터마이징할 수 있는 훅인 ",(0,t.kt)("inlineCode",{parentName:"p"},"updateHash")," ",(0,t.kt)(l,{text:"5.8.0+",parentName:"p",mdxType:"Badge"}),"를 제공합니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," webpack ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token function",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'webpack'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," RealContentHashPlugin ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," webpack",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"optimize",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"RealContentHashPlugin",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// ..."),"\ncompiler",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hooks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"tap"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'MyPlugin'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"compilation"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," hooks ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," RealContentHashPlugin",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"getCompilationHooks"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n  hooks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"updateHash",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"tap"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'MyPlugin'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"content",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},",")," oldHash"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 이곳에서 원하는데로 해시를 계산할 수 있습니다."),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))))}i.isMDXComponent=!0,n.default=i}}]);