"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5365],{5365:function(e,a,n){n.r(a),n(3696);var l=n(1445);function i(){return i=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(e[l]=n[l])}return e},i.apply(this,arguments)}function t(e){let{components:a,...n}=e;return(0,l.yg)("wrapper",i({components:a},n),(0,l.yg)("p",null,"다음의 Node.js 옵션은 특정 ",(0,l.yg)("a",{href:"https://nodejs.org/docs/latest/api/globals.html",parentName:"p"},"Node.js globals"),"을 폴리필할지 mock할지 설정합니다."),(0,l.yg)("p",null,"이 기능은 webpack 내부 ",(0,l.yg)("a",{href:"https://github.com/webpack/webpack/blob/main/lib/NodeStuffPlugin.js",parentName:"p"},(0,l.yg)("inlineCode",{parentName:"a"},"NodeStuffPlugin"))," 플러그인에서 제공합니다."),(0,l.yg)("aside",{className:"warning"},(0,l.yg)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,l.yg)("p",{parentName:"aside"},"webpack5 부터, ",(0,l.yg)("inlineCode",{parentName:"p"},"node")," 옵션에서 ",(0,l.yg)("inlineCode",{parentName:"p"},"global"),", ",(0,l.yg)("inlineCode",{parentName:"p"},"__filename")," 또는 ",(0,l.yg)("inlineCode",{parentName:"p"},"__dirname"),"만 설정할 수 있습니다. webpack5의 Node.js에서 ",(0,l.yg)("inlineCode",{parentName:"p"},"fs"),"를 폴리필할 방법을 찾고 있다면 ",(0,l.yg)("a",{href:"/configuration/resolve/#resolvefallback",parentName:"p"},"resolve.fallback"),"를 참고하세요.")),(0,l.yg)("h2",null,(0,l.yg)("span",{id:"node",parentName:"h2"}),"node",(0,l.yg)("a",{href:"#node","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,l.yg)("span",{className:"header-link",parentName:"a"}))),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"false")," ",(0,l.yg)("inlineCode",{parentName:"p"},"object")),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"webpack.config.js")),(0,l.yg)("pre",null,(0,l.yg)("code",{className:"hljs language-javascript",parentName:"pre"},"module",(0,l.yg)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,l.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,l.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,l.yg)("span",{className:"token comment",parentName:"code"},"//..."),"\n  node",(0,l.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,l.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    global",(0,l.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,l.yg)("span",{className:"token boolean",parentName:"code"},"false"),(0,l.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n    __filename",(0,l.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,l.yg)("span",{className:"token boolean",parentName:"code"},"false"),(0,l.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n    __dirname",(0,l.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,l.yg)("span",{className:"token boolean",parentName:"code"},"false"),(0,l.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,l.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,l.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,l.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,l.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"node")," 옵션을 ",(0,l.yg)("inlineCode",{parentName:"p"},"false"),"로 설정하여 ",(0,l.yg)("inlineCode",{parentName:"p"},"NodeStuffPlugin")," 플러그인을 완전히 끌 수 있습니다."),(0,l.yg)("h2",null,(0,l.yg)("span",{id:"nodeglobal",parentName:"h2"}),"node.global",(0,l.yg)("a",{href:"#nodeglobal","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,l.yg)("span",{className:"header-link",parentName:"a"}))),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"boolean")," ",(0,l.yg)("inlineCode",{parentName:"p"},"'warn'")),(0,l.yg)("aside",{className:"tip"},(0,l.yg)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,l.yg)("p",{parentName:"aside"},"전역변수가 필요한 모듈을 사용하는 경우 ",(0,l.yg)("inlineCode",{parentName:"p"},"global")," 대신 ",(0,l.yg)("inlineCode",{parentName:"p"},"ProvidePlugin"),"을 사용하세요.")),(0,l.yg)("p",null,"이 객체의 정확한 동작은 ",(0,l.yg)("a",{href:"https://nodejs.org/api/globals.html#globals_global",parentName:"p"},"Node.js 문서"),"를 참고하세요."),(0,l.yg)("p",null,"옵션:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"true"),": 폴리필 제공."),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"false"),": 아무것도 제공하지 않습니다. 이 객체를 예상하는 코드는 ",(0,l.yg)("inlineCode",{parentName:"li"},"ReferenceError"),"가 발생할 수 있습니다."),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"'warn'"),": ",(0,l.yg)("inlineCode",{parentName:"li"},"global"),"을 사용할 때 경고 표시.")),(0,l.yg)("h2",null,(0,l.yg)("span",{id:"node__filename",parentName:"h2"}),"node.__filename",(0,l.yg)("a",{href:"#node__filename","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,l.yg)("span",{className:"header-link",parentName:"a"}))),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"boolean")," ",(0,l.yg)("inlineCode",{parentName:"p"},"'mock' | 'warn-mock' | 'node-module' | 'eval-only'")),(0,l.yg)("p",null,"옵션:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"true"),": ",(0,l.yg)("a",{href:"/configuration/entry-context/#context",parentName:"li"},(0,l.yg)("inlineCode",{parentName:"a"},"context")," 옵션"),"에 상대적인 ",(0,l.yg)("strong",{parentName:"li"},"입력")," 파일의 dirname."),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"false"),": Webpack은 ",(0,l.yg)("inlineCode",{parentName:"li"},"__filename")," 코드를 건드리지 않습니다. 즉 일반적인 Node.js ",(0,l.yg)("inlineCode",{parentName:"li"},"__filename")," 동작이 있음을 의미합니다. Node.js 환경에서 실행할 때 ",(0,l.yg)("strong",{parentName:"li"},"출력")," 파일 이름입니다."),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"'mock'"),": 고정값 ",(0,l.yg)("inlineCode",{parentName:"li"},"'/index.js'"),"."),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"'warn-mock'"),": ",(0,l.yg)("inlineCode",{parentName:"li"},"'/index.js'"),"의 고정값을 사용하되 경고를 표시합니다."),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"node-module"),": ",(0,l.yg)("inlineCode",{parentName:"li"},"output.module"),"이 활성화되면 CommonJS 모듈의 ",(0,l.yg)("inlineCode",{parentName:"li"},"__filename"),"을 ",(0,l.yg)("inlineCode",{parentName:"li"},"fileURLToPath(import.meta.url)"),"로 바꿉니다."),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"'eval-only'"))),(0,l.yg)("h2",null,(0,l.yg)("span",{id:"node__dirname",parentName:"h2"}),"node.__dirname",(0,l.yg)("a",{href:"#node__dirname","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,l.yg)("span",{className:"header-link",parentName:"a"}))),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"boolean")," ",(0,l.yg)("inlineCode",{parentName:"p"},"'mock' | 'warn-mock' | 'node-module' | 'eval-only'")),(0,l.yg)("p",null,"옵션:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"true"),": ",(0,l.yg)("a",{href:"/configuration/entry-context/#context",parentName:"li"},(0,l.yg)("inlineCode",{parentName:"a"},"context")," 옵션"),"에 상대적인 ",(0,l.yg)("strong",{parentName:"li"},"입력")," 파일의 dirname."),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"false"),": Webpack은 ",(0,l.yg)("inlineCode",{parentName:"li"},"__dirname")," 코드를 건드리지 않습니다. 즉 일반적인 Node.js ",(0,l.yg)("inlineCode",{parentName:"li"},"__dirname")," 동작이 있음을 의미합니다. Node.js 환경에서 실행할 때 ",(0,l.yg)("strong",{parentName:"li"},"출력")," 파일 이름입니다."),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"'mock'"),": 고정값 ",(0,l.yg)("inlineCode",{parentName:"li"},"'/'"),"."),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"'warn-mock'"),": ",(0,l.yg)("inlineCode",{parentName:"li"},"'/'"),"의 고정값을 사용하되 경고를 표시합니다."),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"node-module"),": ",(0,l.yg)("inlineCode",{parentName:"li"},"output.module"),"이 활성화된 경우 CommonJS 모듈의 ",(0,l.yg)("inlineCode",{parentName:"li"},"__dirname"),"을 ",(0,l.yg)("inlineCode",{parentName:"li"},'fileURLToPath(import.meta.url + "/..")'),"로 바꿉니다."),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"'eval-only'"))))}t.isMDXComponent=!0,a.default=t}}]);