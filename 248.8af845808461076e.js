"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[248],{248:function(e,a,n){n.r(a),n(3696);var t=n(1445);function p(){return p=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},p.apply(this,arguments)}function s(e){let{components:a,...n}=e;return(0,t.yg)("wrapper",p({components:a},n),(0,t.yg)("p",null,"JavaScript는 서버와 클라이언트 모두 작성이 가능하기 때문에 webpack은 webpack ",(0,t.yg)("a",{href:"/configuration",parentName:"p"},"설정"),"에서 다수의 배포 ",(0,t.yg)("em",{parentName:"p"},"대상을")," 제공합니다."),(0,t.yg)("aside",{className:"warning"},(0,t.yg)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,t.yg)("p",{parentName:"aside"},"webpack의 ",(0,t.yg)("inlineCode",{parentName:"p"},"target")," 프로퍼티를 ",(0,t.yg)("inlineCode",{parentName:"p"},"output.libraryTarget")," 프로퍼티와 혼동하지 않아야 합니다. 자세한 내용은 ",(0,t.yg)("inlineCode",{parentName:"p"},"output")," 프로퍼티에 대한 ",(0,t.yg)("a",{href:"/concepts/output/",parentName:"p"},"가이드"),"를 확인해 주세요.")),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"usage",parentName:"h2"}),"Usage",(0,t.yg)("a",{href:"#usage","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"target")," 프로퍼티를 설정하려면 webpack 설정에서 target 값을 설정하기만 하면 됩니다."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"webpack.config.js")),(0,t.yg)("pre",null,(0,t.yg)("code",{className:"hljs language-javascript",parentName:"pre"},"module",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  target",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},"'node'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.yg)("p",null,"위 예제에서 ",(0,t.yg)("inlineCode",{parentName:"p"},"node")," webpack을 사용하면 Node.js와 유사한 환경에서 사용할 수 있도록 컴파일됩니다. (Node.js의 ",(0,t.yg)("inlineCode",{parentName:"p"},"require"),"를 사용하여 청크를 로드하고 ",(0,t.yg)("inlineCode",{parentName:"p"},"fs"),"나 ",(0,t.yg)("inlineCode",{parentName:"p"},"path"),"와 같은 모듈은 수정하지 않습니다.)"),(0,t.yg)("p",null,"각 ",(0,t.yg)("em",{parentName:"p"},"target은")," 배포와 환경에 관련된 다양한 추가 기능이 있으며, 필요에 맞게 지원됩니다. ",(0,t.yg)("a",{href:"/configuration/target/",parentName:"p"},"사용 가능한 target"),"을 확인하세요."),(0,t.yg)("aside",{className:"todo"},(0,t.yg)("h6",{className:"todo__prefix",parentName:"aside"},"todo"),(0,t.yg)("p",{parentName:"aside"},"다른 인기 있는 target 값에 대한 추가 확장")),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"multiple-targets",parentName:"h2"}),"Multiple Targets",(0,t.yg)("a",{href:"#multiple-targets","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,"webpack에서는 한 개 이상의 문자열을 ",(0,t.yg)("inlineCode",{parentName:"p"},"target")," 프로퍼티에 전달할 수 ",(0,t.yg)("strong",{parentName:"p"},"없습니다"),". 하지만 두 개의 개별 설정을 번들링하여 동일한 라이브러리를 생성할 수 있습니다."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"webpack.config.js")),(0,t.yg)("pre",null,(0,t.yg)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.yg)("span",{className:"token keyword",parentName:"code"},"const")," path ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.yg)("span",{className:"token function",parentName:"code"},"require"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.yg)("span",{className:"token string",parentName:"code"},"'path'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.yg)("span",{className:"token keyword",parentName:"code"},"const")," serverConfig ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  target",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},"'node'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n  output",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    path",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," path",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.yg)("span",{className:"token function",parentName:"code"},"resolve"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),"__dirname",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},"'dist'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n    filename",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},"'lib.node.js'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.yg)("span",{className:"token comment",parentName:"code"},"//…"),"\n",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n\n",(0,t.yg)("span",{className:"token keyword",parentName:"code"},"const")," clientConfig ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  target",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},"'web'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.yg)("span",{className:"token comment",parentName:"code"},"// <=== 기본값은 'web'이므로 생략 가능"),"\n  output",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    path",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," path",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.yg)("span",{className:"token function",parentName:"code"},"resolve"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),"__dirname",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},"'dist'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n    filename",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},"'lib.js'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.yg)("span",{className:"token comment",parentName:"code"},"//…"),"\n",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n\nmodule",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"["),"serverConfig",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},",")," clientConfig",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.yg)("p",null,"위 예제에서는 ",(0,t.yg)("inlineCode",{parentName:"p"},"dist")," 폴더에 ",(0,t.yg)("inlineCode",{parentName:"p"},"lib.js"),"와 ",(0,t.yg)("inlineCode",{parentName:"p"},"lib.node.js")," 파일을 생성합니다."),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"resources",parentName:"h2"}),"Resources",(0,t.yg)("a",{href:"#resources","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,"위의 옵션에서 볼 수 있듯이 여러 배포 ",(0,t.yg)("em",{parentName:"p"},"target을")," 선택할 수 있습니다. 다음은 참고할 수 있는 예제 및 리소스 목록입니다."),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},(0,t.yg)("a",{href:"https://github.com/TheLarkInn/compare-webpack-target-bundles",parentName:"strong"},"compare-webpack-target-bundles")),": 다양한 webpack ",(0,t.yg)("em",{parentName:"li"},"target을")," 테스트하고 볼 수 있는 유용한 리소스 입니다. 그리고 버그 리포팅에도 유용합니다."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},(0,t.yg)("a",{href:"https://github.com/chentsulin/electron-react-boilerplate",parentName:"strong"},"Boilerplate of Electron-React Application")),": electron의 메인 프로세스와 렌더러 프로세스에 대한 빌드 프로세스의 좋은 예입니다.")),(0,t.yg)("aside",{className:"todo"},(0,t.yg)("h6",{className:"todo__prefix",parentName:"aside"},"todo"),(0,t.yg)("p",{parentName:"aside"},"라이브 코드나 보일러플레이트에서 사용되는 webpack target의 최신 예제를 찾아야 합니다.")))}s.isMDXComponent=!0,a.default=s}}]);