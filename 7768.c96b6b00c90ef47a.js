"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7768],{7768:function(e,a,n){n.r(a),n(3696);var t=n(1445);function o(){return o=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},o.apply(this,arguments)}function p(e){let{components:a,...n}=e;return(0,t.yg)("wrapper",o({components:a},n),(0,t.yg)("p",null,"ECMAScript 모듈(ESM)은 웹에서 모듈을 사용하기 위한 ",(0,t.yg)("a",{href:"https://tc39.github.io/ecma262/#sec-modules",parentName:"p"},"사양"),"입니다.\n모든 최신 브라우저와 권장하는 웹 모듈 코드 작성법에서 지원됩니다."),(0,t.yg)("p",null,"Webpack은 ECMAScript 모듈을 최적화하기 위한 처리를 지원합니다."),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"exporting",parentName:"h2"}),"Exporting",(0,t.yg)("a",{href:"#exporting","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"export")," 키워드를 사용하면 ESM 항목을 다른 모듈에 노출할 수 있습니다."),(0,t.yg)("pre",null,(0,t.yg)("code",{className:"hljs language-js",parentName:"pre"},(0,t.yg)("span",{className:"token keyword",parentName:"code"},"export")," ",(0,t.yg)("span",{className:"token keyword",parentName:"code"},"const")," ",(0,t.yg)("span",{className:"token constant",parentName:"code"},"CONSTANT")," ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.yg)("span",{className:"token number",parentName:"code"},"42"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n\n",(0,t.yg)("span",{className:"token keyword",parentName:"code"},"export")," ",(0,t.yg)("span",{className:"token keyword",parentName:"code"},"let")," variable ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.yg)("span",{className:"token number",parentName:"code"},"42"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.yg)("span",{className:"token comment",parentName:"code"},"// 오직 읽는 값만 노출됩니다."),"\n",(0,t.yg)("span",{className:"token comment",parentName:"code"},"// 외부에서 변수를 수정할 수 없습니다."),"\n\n",(0,t.yg)("span",{className:"token keyword",parentName:"code"},"export")," ",(0,t.yg)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,t.yg)("span",{className:"token function",parentName:"code"},"fun"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  console",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.yg)("span",{className:"token function",parentName:"code"},"log"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.yg)("span",{className:"token string",parentName:"code"},"'fun'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),"\n\n",(0,t.yg)("span",{className:"token keyword",parentName:"code"},"export")," ",(0,t.yg)("span",{className:"token keyword",parentName:"code"},"class")," ",(0,t.yg)("span",{className:"token class-name",parentName:"code"},"C")," ",(0,t.yg)("span",{className:"token keyword",parentName:"code"},"extends")," ",(0,t.yg)("span",{className:"token class-name",parentName:"code"},"Super")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.yg)("span",{className:"token function",parentName:"code"},"method"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    console",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.yg)("span",{className:"token function",parentName:"code"},"log"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.yg)("span",{className:"token string",parentName:"code"},"'method'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n  ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),"\n",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),"\n\n",(0,t.yg)("span",{className:"token keyword",parentName:"code"},"let")," a",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},",")," b",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},",")," other",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.yg)("span",{className:"token keyword",parentName:"code"},"export")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{")," a",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},",")," b",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},",")," other ",(0,t.yg)("span",{className:"token keyword",parentName:"code"},"as")," c ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n\n",(0,t.yg)("span",{className:"token keyword",parentName:"code"},"export")," ",(0,t.yg)("span",{className:"token keyword",parentName:"code"},"default")," ",(0,t.yg)("span",{className:"token number",parentName:"code"},"1")," ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"+")," ",(0,t.yg)("span",{className:"token number",parentName:"code"},"2")," ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"+")," ",(0,t.yg)("span",{className:"token number",parentName:"code"},"3")," ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"+")," ",(0,t.yg)("span",{className:"token function",parentName:"code"},"more"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"importing",parentName:"h2"}),"Importing",(0,t.yg)("a",{href:"#importing","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"import")," 키워드를 사용하면 다른 모듈에 대한 참조를 ESM으로 가져올 수 있습니다."),(0,t.yg)("pre",null,(0,t.yg)("code",{className:"hljs language-js",parentName:"pre"},(0,t.yg)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{")," ",(0,t.yg)("span",{className:"token constant",parentName:"code"},"CONSTANT"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},",")," variable ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}")," ",(0,t.yg)("span",{className:"token keyword",parentName:"code"},"from")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},"'./module.js'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.yg)("span",{className:"token comment",parentName:"code"},'// 다른 모듈에 export하기 위해 "bindings"를 가져옵니다.'),"\n",(0,t.yg)("span",{className:"token comment",parentName:"code"},"// 바인딩은 활성상태입니다. 값은 복사되지 않습니다."),"\n",(0,t.yg)("span",{className:"token comment",parentName:"code"},'// 대신 "변수"에 접근하면 현재 값을 얻습니다.'),"\n",(0,t.yg)("span",{className:"token comment",parentName:"code"},"// 가져온 모듈에서"),"\n\n",(0,t.yg)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"*")," ",(0,t.yg)("span",{className:"token keyword",parentName:"code"},"as")," module ",(0,t.yg)("span",{className:"token keyword",parentName:"code"},"from")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},"'./module.js'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\nmodule",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.yg)("span",{className:"token function",parentName:"code"},"fun"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.yg)("span",{className:"token comment",parentName:"code"},'// 모든 export를 가지는 "네임스페이스 객체"를 가져옵니다.'),"\n\n",(0,t.yg)("span",{className:"token keyword",parentName:"code"},"import")," theDefaultValue ",(0,t.yg)("span",{className:"token keyword",parentName:"code"},"from")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},"'./module.js'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.yg)("span",{className:"token comment",parentName:"code"},'// "기본" export를 가져오는 단축입니다.'))),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"flagging-modules-as-esm",parentName:"h2"}),"Flagging modules as ESM",(0,t.yg)("a",{href:"#flagging-modules-as-esm","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,"기본적으로 webpack은 파일이 ESM인지 또는 다른 모듈 시스템인지 자동으로 감지합니다."),(0,t.yg)("p",null,"Node.js는 ",(0,t.yg)("inlineCode",{parentName:"p"},"package.json"),"의 속성을 사용하여 파일의 모듈 유형을 명시적으로 설정하는 방법을 확립했습니다.\npackage.json에서 ",(0,t.yg)("inlineCode",{parentName:"p"},'"type": "module"'),"을 설정하면 package.json 아래의 모든 파일이 ECMAScript 모듈이 됩니다.\n",(0,t.yg)("inlineCode",{parentName:"p"},'"type": "commonjs"'),"를 설정하면 CommonJS 모듈이 됩니다."),(0,t.yg)("pre",null,(0,t.yg)("code",{className:"hljs language-json",parentName:"pre"},(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.yg)("span",{className:"token property",parentName:"code"},'"type"'),(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},'"module"'),"\n",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"))),(0,t.yg)("p",null,"또한, 파일은 ",(0,t.yg)("inlineCode",{parentName:"p"},".mjs")," 또는 ",(0,t.yg)("inlineCode",{parentName:"p"},".cjs")," 확장자를 사용해서 모듈 유형을 설정할 수 있습니다. ",(0,t.yg)("inlineCode",{parentName:"p"},".mjs"),"는 ESM이 되도록 강제하고, ",(0,t.yg)("inlineCode",{parentName:"p"},".cjs"),"는 CommonJS가 되도록 강제합니다."),(0,t.yg)("p",null,"DataURIs에서 ",(0,t.yg)("inlineCode",{parentName:"p"},"text/javascript")," 또는 ",(0,t.yg)("inlineCode",{parentName:"p"},"application/javascript")," mime 유형을 사용하면 모듈 유형도 ESM으로 강제로 적용됩니다."),(0,t.yg)("p",null,"모듈 형식뿐 아니라 모듈 플래그를 ESM으로 지정하는 것은 로직 해석, interop 로직 및 모듈에서 사용 가능한 심볼에 영향을 줍니다."),(0,t.yg)("p",null,"ESM의 import는 더 엄격하게 해석됩니다. 상대적 요청에는 ",(0,t.yg)("a",{href:"/configuration/module/#resolvefullyspecified",parentName:"p"},(0,t.yg)("inlineCode",{parentName:"a"},"fullySpecified=false")),"로 동작을 비활성화하지 않는 한 파일 이름과 파일 확장자가 포함되어야 합니다 (예를 들면 ",(0,t.yg)("inlineCode",{parentName:"p"},"*.js")," 또는 ",(0,t.yg)("inlineCode",{parentName:"p"},"*.mjs"),")."),(0,t.yg)("aside",{className:"tip"},(0,t.yg)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,t.yg)("p",{parentName:"aside"},'import "lodash" 같이 패키지에 대한 요청은 여전히 지원됩니다.')),(0,t.yg)("p",null,'ESM이 아닌 경우는 "기본" export만 가져올 수 있습니다. 명명된 export를 사용할 수 없습니다.'),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"require"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"module"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"exports"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"__filename"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"__dirname")," 같은 CommonJs 구문을 사용할 수 없습니다."),(0,t.yg)("aside",{className:"tip"},(0,t.yg)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,t.yg)("p",{parentName:"aside"},"HMR은 ",(0,t.yg)("a",{href:"/api/module-variables/#modulehot-webpack-specific",parentName:"p"},(0,t.yg)("inlineCode",{parentName:"a"},"module.hot"))," 대신 ",(0,t.yg)("a",{href:"/api/module-variables/#importmetawebpackhot",parentName:"p"},(0,t.yg)("inlineCode",{parentName:"a"},"import.meta.webpackHot")),"과 함께 사용할 수 있습니다.")))}p.isMDXComponent=!0,a.default=p}}]);