"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9553],{9553:function(e,a,n){n.r(a),n(3696);var t=n(1445);function p(){return p=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},p.apply(this,arguments)}function o(e){let{components:a,...n}=e;return(0,t.yg)("wrapper",p({components:a},n),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"webpack.config.js"),"에서 ",(0,t.yg)("a",{href:"/guides/development",parentName:"p"},"development와")," ",(0,t.yg)("a",{href:"/guides/production",parentName:"p"},"production의")," 빌드를 명확하게 구분하기 위해 환경 변수를 사용할 수 있습니다."),(0,t.yg)("aside",{className:"tip"},(0,t.yg)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,t.yg)("p",{parentName:"aside"},"webpack의 환경 변수는 ",(0,t.yg)("inlineCode",{parentName:"p"},"bash"),"와 ",(0,t.yg)("inlineCode",{parentName:"p"},"CMD.exe")," 같은 운영체제 쉘에서의 ",(0,t.yg)("a",{href:"https://en.wikipedia.org/wiki/Environment_variable",parentName:"p"},"환경 변수와")," 다릅니다.")),(0,t.yg)("p",null,"webpack 커맨드라인 ",(0,t.yg)("a",{href:"/api/cli/#environment-options",parentName:"p"},"환경 옵션인")," ",(0,t.yg)("inlineCode",{parentName:"p"},"--env")," 를 사용하면 원하는 만큼 많은 환경 변수를 전달할 수 있습니다. 환경 변수는 ",(0,t.yg)("inlineCode",{parentName:"p"},"webpack.config.js"),"에서 액세스 할 수 있습니다. 예를 들면, ",(0,t.yg)("inlineCode",{parentName:"p"},"--env production")," 나 ",(0,t.yg)("inlineCode",{parentName:"p"},"--env goal=local"),"."),(0,t.yg)("pre",null,(0,t.yg)("code",{className:"hljs language-bash",parentName:"pre"},"npx webpack --env ",(0,t.yg)("span",{className:"token assign-left variable",parentName:"code"},"goal"),(0,t.yg)("span",{className:"token operator",parentName:"code"},"="),"local --env production --progress")),(0,t.yg)("aside",{className:"tip"},(0,t.yg)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,t.yg)("p",{parentName:"aside"},"할당없이 ",(0,t.yg)("inlineCode",{parentName:"p"},"env")," 변수를 설정하면 ",(0,t.yg)("inlineCode",{parentName:"p"},"--env production"),"은 기본적으로 ",(0,t.yg)("inlineCode",{parentName:"p"},"env.production")," 값을 ",(0,t.yg)("inlineCode",{parentName:"p"},"true"),"로 설정합니다. 사용할 수 있는 다른 구문도 있습니다. 자세한 내용은 ",(0,t.yg)("a",{href:"/api/cli/#environment-options",parentName:"p"},"webpack CLI")," 문서를 참고하세요.")),(0,t.yg)("p",null,"webpack 설정을 변경해야 할 사항이 있습니다. 일반적으로, ",(0,t.yg)("inlineCode",{parentName:"p"},"module.exports"),"는 설정 객체를 가리킵니다. ",(0,t.yg)("inlineCode",{parentName:"p"},"env")," 변수를 사용하려면 ",(0,t.yg)("inlineCode",{parentName:"p"},"module.exports"),"를 함수로 변환해야 합니다."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"webpack.config.js")),(0,t.yg)("pre",null,(0,t.yg)("code",{className:"hljs language-js",parentName:"pre"},(0,t.yg)("span",{className:"token keyword",parentName:"code"},"const")," path ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.yg)("span",{className:"token function",parentName:"code"},"require"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.yg)("span",{className:"token string",parentName:"code"},"'path'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n\nmodule",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.yg)("span",{className:"token function-variable function",parentName:"code"},"exports")," ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.yg)("span",{className:"token parameter",parentName:"code"},"env"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.yg)("span",{className:"token comment",parentName:"code"},"// 여기에서 env.<변수> 를 사용하세요."),"\n  console",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.yg)("span",{className:"token function",parentName:"code"},"log"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.yg)("span",{className:"token string",parentName:"code"},"'Goal: '"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},",")," env",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"."),"goal",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";")," ",(0,t.yg)("span",{className:"token comment",parentName:"code"},"// 'local'"),"\n  console",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.yg)("span",{className:"token function",parentName:"code"},"log"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.yg)("span",{className:"token string",parentName:"code"},"'Production: '"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},",")," env",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"."),"production",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";")," ",(0,t.yg)("span",{className:"token comment",parentName:"code"},"// true"),"\n\n  ",(0,t.yg)("span",{className:"token keyword",parentName:"code"},"return")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    entry",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},"'./src/index.js'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n    output",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      filename",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},"'bundle.js'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n      path",(0,t.yg)("span",{className:"token operator",parentName:"code"},":")," path",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.yg)("span",{className:"token function",parentName:"code"},"resolve"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"("),"__dirname",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},"'dist'"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.yg)("aside",{className:"tip"},(0,t.yg)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,t.yg)("p",{parentName:"aside"},"Webpack CLI는 webpack 설정 내에서 접근할 수 있는 ",(0,t.yg)("a",{href:"/api/cli/#cli-environment-variables",parentName:"p"},"빌트인 환경 변수"),"를 제공합니다.")))}o.isMDXComponent=!0,a.default=o}}]);