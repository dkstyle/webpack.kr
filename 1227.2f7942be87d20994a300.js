"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1227],{1227:function(a,e,n){n.r(e),n(7378);var t=n(2682);function s(){return s=Object.assign?Object.assign.bind():function(a){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(a[t]=n[t])}return a},s.apply(this,arguments)}function p(a){let{components:e,...n}=a;return(0,t.kt)("wrapper",s({components:e},n),(0,t.kt)("p",null,"플러그인은 서드파티 개발자들에게 webpack 엔진의 모든 잠재력을 보여줍니다. 단계별로 빌드 callback을 사용하여 개발자들은 webpack의 빌드 프로세스에 자신만의 행동을 도입할 수 있습니다. 플러그인을 빌드하는 것은 로더를 빌딩 하는 것보다 조금 더 진보되었습니다. 왜냐하면, 플러그인은 몇몇 webpack의 low-level에 내장된 훅을 이해할 필요가 있기 때문입니다. 이제 소스 코드를 읽어볼 준비를 해봅시다!"),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"creating-a-plugin",parentName:"h2"}),"Creating a Plugin",(0,t.kt)("a",{href:"#creating-a-plugin","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"Webpack용 plugin은 다음과 같이 구성됩니다."),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"JavaScript function 또는 JavaScript class로 이름을 붙입니다."),(0,t.kt)("li",{parentName:"ul"},"프로토타입에서 ",(0,t.kt)("inlineCode",{parentName:"li"},"apply")," 메소드를 정의합니다."),(0,t.kt)("li",{parentName:"ul"},"특정한 ",(0,t.kt)("a",{href:"/api/compiler-hooks/",parentName:"li"},"이벤트 훅"),"으로 지정합니다."),(0,t.kt)("li",{parentName:"ul"},"webpack 내부에 있는 인스턴스의 특정한 데이터를 처리합니다."),(0,t.kt)("li",{parentName:"ul"},"기능적으로 완벽해지면 webpack에서 제공하는 callback을 호출합니다.")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token comment",parentName:"code"},"// A JavaScript class."),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"class")," ",(0,t.kt)("span",{className:"token class-name",parentName:"code"},"MyExampleWebpackPlugin")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// `apply`를 compiler를 인자로 받는 프로토타입 메소드로 정의합니다."),"\n  ",(0,t.kt)("span",{className:"token function",parentName:"code"},"apply"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"compiler"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// attach할 이벤트 훅을 지정합니다."),"\n    compiler",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hooks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"emit",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"tapAsync"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"\n      ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'MyExampleWebpackPlugin'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},",")," callback"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        console",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"log"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'This is an example plugin!'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n        console",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"log"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"\n          ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'Here’s the `compilation` object which represents a single build of assets:'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n          compilation\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\n        ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// Webpack에서 제공되는 플러그인 API를 사용하여 빌드를 처리합니다."),"\n        compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"addModule"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token comment",parentName:"code"},"/* ... */"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\n        ",(0,t.kt)("span",{className:"token function",parentName:"code"},"callback"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"))),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"basic-plugin-architecture",parentName:"h2"}),"Basic plugin architecture",(0,t.kt)("a",{href:"#basic-plugin-architecture","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"플러그인은 ",(0,t.kt)("inlineCode",{parentName:"p"},"apply"),"라는 프로토타입 메소드로 인스턴스화 된 객체입니다. 이러한 ",(0,t.kt)("inlineCode",{parentName:"p"},"apply")," 메소드는 플러그인을 설치하는 동안 webpack 컴파일러에 의해 한번 호출됩니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"apply")," 메소드는 컴파일러 callback에 대해 접근 권한을 부여하는 기본 webpack 컴파일러에 의해 참조됩니다. 플러그인의 구조는 다음과 같습니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"class")," ",(0,t.kt)("span",{className:"token class-name",parentName:"code"},"HelloWorldPlugin")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token function",parentName:"code"},"apply"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"compiler"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    compiler",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hooks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"done",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"tap"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"\n      ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'Hello World Plugin'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"stats ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"/* 훅의 탭이 끝나면 stats는 인자로 통과됩니다.*/"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        console",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"log"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'Hello World!'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n\nmodule",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," HelloWorldPlugin",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"그런 다음에 플러그인을 사용하려면 webpack의 설정인 ",(0,t.kt)("inlineCode",{parentName:"p"},"plugins")," 배열에 인스턴스를 포함해야합니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token comment",parentName:"code"},"// webpack.config.js"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"var")," HelloWorldPlugin ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token function",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'hello-world'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\nmodule",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// ... 여기서 구성을 설정할 것 ..."),"\n  plugins",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,t.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,t.kt)("span",{className:"token class-name",parentName:"code"},"HelloWorldPlugin"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{")," options",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token boolean",parentName:"code"},"true")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"플러그인 옵션을 통해 전달되는 옵션의 유효성을 확인하려면 ",(0,t.kt)("a",{href:"https://github.com/webpack/schema-utils",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"schema-utils")),"를 사용하세요. 다음은 사용 예제입니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{")," validate ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"from")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'schema-utils'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\n",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// options 객체에 대한 schema"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," schema ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  type",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'object'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  properties",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    test",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      type",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'string'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"export")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"default")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"class")," ",(0,t.kt)("span",{className:"token class-name",parentName:"code"},"HelloWorldPlugin")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token function",parentName:"code"},"constructor"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"options ",(0,t.kt)("span",{className:"token operator",parentName:"span"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"{"),(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"}")),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    ",(0,t.kt)("span",{className:"token function",parentName:"code"},"validate"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"schema",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," options",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      name",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'Hello World Plugin'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      baseDataPath",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'options'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n\n  ",(0,t.kt)("span",{className:"token function",parentName:"code"},"apply"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"compiler"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"))),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"compiler-and-compilation",parentName:"h2"}),"Compiler and Compilation",(0,t.kt)("a",{href:"#compiler-and-compilation","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"플러그인 개발 중 가장 중요한 두 개의 리소스는 ",(0,t.kt)("a",{href:"/api/node/#compiler-instance",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"compiler"))," 와 ",(0,t.kt)("a",{href:"/api/compilation-hooks/",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"compilation"))," 객체입니다. 두 가지의 역할을 이해하는 것은 webpack 엔진을 확장하는 첫 번째 단계입니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"class")," ",(0,t.kt)("span",{className:"token class-name",parentName:"code"},"HelloCompilationPlugin")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token function",parentName:"code"},"apply"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"compiler"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// callback 함수에 인자로 compilation을 제공하는 훅으로 compliation 훅을 탭 합니다."),"\n    compiler",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hooks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"tap"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'HelloCompilationPlugin'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"compilation"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 이제 컴파일을 통해 이용할 수 있는 다양한 훅들을 이용할 수 있습니다."),"\n      compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hooks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"optimize",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"tap"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'HelloCompilationPlugin'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        console",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"log"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'Assets are being optimized.'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n\nmodule",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," HelloCompilationPlugin",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"compiler"),", ",(0,t.kt)("inlineCode",{parentName:"p"},"compilation")," 그리고 다른 중요한 객체에서 사용 가능한 훅들은 ",(0,t.kt)("a",{href:"/api/plugins/",parentName:"p"},"플러그인 API")," 문서를 참고해 주세요."),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"async-event-hooks",parentName:"h2"}),"Async event hooks",(0,t.kt)("a",{href:"#async-event-hooks","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"일부 플러그인 훅은 비동기입니다. 이를 탭 하려면, 동기로 동작하는 ",(0,t.kt)("inlineCode",{parentName:"p"},"tap")," 메소드를 사용하거나 비동기 메소드인 ",(0,t.kt)("inlineCode",{parentName:"p"},"tapAsync")," 또는 ",(0,t.kt)("inlineCode",{parentName:"p"},"tapPromise")," 메소드를 사용할 수 있습니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"tapasync",parentName:"h3"}),"tapAsync",(0,t.kt)("a",{href:"#tapasync","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"tapAsync")," 메소드를 사용하여 플러그인을 탭해야 할 경우 함수에서 마지막 인자로 제공되는 callback 함수를 호출해야 할 필요가 있습니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"class")," ",(0,t.kt)("span",{className:"token class-name",parentName:"code"},"HelloAsyncPlugin")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token function",parentName:"code"},"apply"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"compiler"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    compiler",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hooks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"emit",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"tapAsync"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"\n      ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'HelloAsyncPlugin'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},",")," callback"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// Do something async..."),"\n        ",(0,t.kt)("span",{className:"token function",parentName:"code"},"setTimeout"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          console",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"log"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'Done with async work...'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n          ",(0,t.kt)("span",{className:"token function",parentName:"code"},"callback"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"1000"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n\nmodule",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," HelloAsyncPlugin",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h4",null,(0,t.kt)("span",{id:"tappromise",parentName:"h4"}),"tapPromise",(0,t.kt)("a",{href:"#tappromise","aria-hidden":"true",tabIndex:"-1",parentName:"h4"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"플러그인에 탭 하기 위해 ",(0,t.kt)("inlineCode",{parentName:"p"},"tapPromise"),"를 사용할 때, 동기식 작업이 완료될 때의 해석 promise를 반드시 반환해야 할 필요가 있습니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"class")," ",(0,t.kt)("span",{className:"token class-name",parentName:"code"},"HelloAsyncPlugin")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token function",parentName:"code"},"apply"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"compiler"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    compiler",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hooks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"emit",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"tapPromise"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'HelloAsyncPlugin'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"compilation"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 끝났을 때 해석을 반환해야 합니다.."),"\n      ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"return")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,t.kt)("span",{className:"token class-name",parentName:"code"},"Promise"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"resolve",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},",")," reject"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        ",(0,t.kt)("span",{className:"token function",parentName:"code"},"setTimeout"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          console",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"log"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'Done with async work...'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n          ",(0,t.kt)("span",{className:"token function",parentName:"code"},"resolve"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token number",parentName:"code"},"1000"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n\nmodule",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," HelloAsyncPlugin",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"example",parentName:"h2"}),"Example",(0,t.kt)("a",{href:"#example","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"일단 webpack compiler와 각각의 개별적인 compilations를 이해 할 수 있게 되면, 엔진 자체로 할 수 있는 가능성이 무궁무진해집니다. 기존 파일을 다시 포맷하거나 파생 파일을 만들거나 완전히 새로운 애셋을 만들 수 있습니다."),(0,t.kt)("p",null,"새로운 빌드 파일인 ",(0,t.kt)("inlineCode",{parentName:"p"},"assets.md"),"를 생성하는 예제를 작성해봅시다. 내용은 빌드에 있는 모든 애셋 파일을 나열합니다. 이 플러그인은 다음과 같습니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"class")," ",(0,t.kt)("span",{className:"token class-name",parentName:"code"},"FileListPlugin")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"static")," defaultOptions ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    outputFile",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'assets.md'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 어떤 옵션이 플러그인의 생성자에 전달될 때,"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// (이는 플러그인의 public API입니다.)"),"\n  ",(0,t.kt)("span",{className:"token function",parentName:"code"},"constructor"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"options ",(0,t.kt)("span",{className:"token operator",parentName:"span"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"{"),(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"}")),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 기본 옵션에 대해 사용자 지정 옵션을 적용하고"),"\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 병합된 옵션을 플러그인 메소드에 추가로 사용할 수 있게 합니다."),"\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 여기서 모든 옵션을 확인해야 합니다."),"\n    ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"this"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"options ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"..."),"FileListPlugin",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"defaultOptions",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"..."),"options ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n\n  ",(0,t.kt)("span",{className:"token function",parentName:"code"},"apply"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"compiler"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," pluginName ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," FileListPlugin",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"name",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// webpack 모듈 인스턴스는 컴파일러 객체로부터 접근할 수 있으며,"),"\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 이는 사용되는 모듈의 정확한 버전을 보장합니다."),"\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// (webpack 또는 직접적으로 어떤 심볼을 require/import 하지 말아야 합니다.)"),"\n    ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{")," webpack ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," compiler",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// Compilation 객체는 몇 가지 유용한 상수에 대한 참조를 제공합니다."),"\n    ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{")," Compilation ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," webpack",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// Rawsource는 compilation에서 애셋 소스를 나타내는데"),"\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},'// 사용해야 하는 "sources" 클래스 중 하나입니다.'),"\n    ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{")," RawSource ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," webpack",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"sources",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 이전 단계에서 compilation 프로세스를 추가로 탭하기 위해서는"),"\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},'// "thisCompilation" 훅을 탭해야합니다.'),"\n    compiler",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hooks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"thisCompilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"tap"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"pluginName",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"compilation"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 특정 단계에서 애셋 처리 파이프라인으로 탭합니다."),"\n      compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hooks",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"processAssets",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"tap"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          name",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," pluginName",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n\n          ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 이후 애셋 처리 단계 중 하나를 사용하여"),"\n          ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 모든 애셋이 이미 다른 플러그인에 의해 compliation에 추가되었는지 확인합니다."),"\n          stage",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," Compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token constant",parentName:"code"},"PROCESS_ASSETS_STAGE_SUMMARIZE"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"assets"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          ",(0,t.kt)("span",{className:"token comment",parentName:"code"},'// "assets"는 compilation의 모든 애셋을 포함하는 객체이고,'),"\n          ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 객체의 key는 애셋의 경로 이름입니다."),"\n          ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 그리고 values 파일 소스입니다."),"\n\n          ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 모든 애셋을 거쳐 반복하고"),"\n          ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 마크다운 파일로 내용을 생성합니다."),"\n          ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," content ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"="),"\n            ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'# In this build:\\n\\n'")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"+"),"\n            Object",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"keys"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"assets",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"\n              ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"map"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"filename"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,t.kt)("span",{className:"token template-string",parentName:"code"},(0,t.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`"),(0,t.kt)("span",{className:"token string",parentName:"span"},"- "),(0,t.kt)("span",{className:"token interpolation",parentName:"span"},(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"${"),"filename",(0,t.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"}")),(0,t.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`")),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"\n              ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"join"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'\\n'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\n          ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 출력 디렉터리 webpack에 의해 자동으로 생성되도록"),"\n          ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// compilation에 새로운 애셋을 추가합니다."),"\n          compilation",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,t.kt)("span",{className:"token function",parentName:"code"},"emitAsset"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"\n            ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"this"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"options",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"outputFile",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n            ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,t.kt)("span",{className:"token class-name",parentName:"code"},"RawSource"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"content",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),"\n          ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n        ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n      ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),"\n\nmodule",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{")," FileListPlugin ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"const")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{")," FileListPlugin ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token function",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'./file-list-plugin.js'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\n",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 플러그인에 webpack 설정을 사용합니다."),"\nmodule",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// …"),"\n\n  plugins",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 기본 옵션을 사용하여 플러그인을 추가합니다."),"\n    ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,t.kt)("span",{className:"token class-name",parentName:"code"},"FileListPlugin"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 또는"),"\n\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// 지원되는 옵션을 전달하도록 선택할 수 있습니다."),"\n    ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,t.kt)("span",{className:"token class-name",parentName:"code"},"FileListPlugin"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      outputFile",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token string",parentName:"code"},"'my-assets.md'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"이렇게 하면 다음과 같은 이름을 가진 마크다운 파일이 생성됩니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-markdown",parentName:"pre"},"# In this build:\n\n- main.css\n- main.js\n- index.html\n")),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,t.kt)("p",{parentName:"aside"},"위의 예시에서 비동기식 동작으로 수행할 필요가 없기 때문에 동기식 ",(0,t.kt)("inlineCode",{parentName:"p"},"tap()")," 메소드로 ",(0,t.kt)("inlineCode",{parentName:"p"},"processAssets"),"을 탭 합니다. 그러나 ",(0,t.kt)("inlineCode",{parentName:"p"},"processAssets")," 훅은 비동기식이므로 필요하다면 ",(0,t.kt)("inlineCode",{parentName:"p"},"tapPromise()")," 또는 ",(0,t.kt)("inlineCode",{parentName:"p"},"tapAsync()"),"를 사용할 수도 있습니다.")),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,t.kt)("p",{parentName:"aside"},(0,t.kt)("a",{href:"/api/compilation-hooks/#processassets",parentName:"p"},(0,t.kt)("inlineCode",{parentName:"a"},"processAssets"))," 훅은 지정한 단계를 실행하기 전에 다른 플러그인에 의하여 추가된 애셋 뿐만 아니라 나중에 추가된 애셋을 가로챌 수도 있는 ",(0,t.kt)("inlineCode",{parentName:"p"},"additionalAssets")," 프로퍼티도 지원합니다. 이는 compilation의 일부분인 애셋을 완전히 가로 챌 수도 있습니다. 그러나 이 예시에서 이전 단계에서 생성된 모든 애셋을 캡쳐하기 위한 단계인 ",(0,t.kt)("inlineCode",{parentName:"p"},"SUMMARIZE"),"를 사용하는 것이 좋습니다.(이는 일반적으로 모든 애셋을 설명합니다.)")),(0,t.kt)("h2",null,(0,t.kt)("span",{id:"different-plugin-shapes",parentName:"h2"}),"Different Plugin Shapes",(0,t.kt)("a",{href:"#different-plugin-shapes","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"플러그인은 탭 하는 이벤트 훅에 따라 타입으로 분류될 수 있습니다. 모든 이벤트 훅은 동기 또는 비동기 waterfall 또는 병렬 훅으로 사전에 정의되어 있고 훅은 내부적으로 call/callAsync 메소드를 사용하여 호출됩니다. 지원되거나 탭이 된 훅의 목록은 일반적으로 ",(0,t.kt)("inlineCode",{parentName:"p"},"this.hooks")," 프로퍼티에 명시되어 있습니다."),(0,t.kt)("p",null,"예시는 다음과 같습니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"this"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"."),"hooks ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  shouldEmit",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,t.kt)("span",{className:"token class-name",parentName:"code"},"SyncBailHook"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,t.kt)("span",{className:"token string",parentName:"code"},"'compilation'"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"이것은 ",(0,t.kt)("inlineCode",{parentName:"p"},"SyncBailHook")," 타입의 훅인 ",(0,t.kt)("inlineCode",{parentName:"p"},"shouldEmit"),"만이 지원되는 훅이고 ",(0,t.kt)("inlineCode",{parentName:"p"},"shouldEmit")," 훅에 탭 되는 플러그인에 전달되는 유일한 파라미터는 ",(0,t.kt)("inlineCode",{parentName:"p"},"compilation"),"입니다."),(0,t.kt)("p",null,"지원되는 다양한 훅의 타입은 다음과 같습니다."),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"synchronous-hooks",parentName:"h3"}),"Synchronous Hooks",(0,t.kt)("a",{href:"#synchronous-hooks","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"SyncHook")),(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"new SyncHook([params])"),"로 정의됩니다."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"tap")," 메소드를 사용하여 탭 됩니다."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"call(...params)")," 메소드를 사용하여 호출됩니다."))),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"Bail Hooks")),(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"SyncBailHook[params]"),"로 정의됩니다."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"tap")," 메소드를 사용하여 탭 됩니다."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"call(...params)")," 메소드를 사용하여 호출됩니다.")),(0,t.kt)("p",{parentName:"li"},"Bail Hook 타입의 훅들은, 각각의 callback 플러그인이 특정한 ",(0,t.kt)("inlineCode",{parentName:"p"},"args"),"를 사용하여 차례로 호출됩니다. 만약 플러그인에 의해 정의되지 않은 값을 제외하고 값이 반환된다면 훅에 의해 값이 반환되고 추가 플러그인 callback은 호출되지 않습니다. 많은 유용한 ",(0,t.kt)("inlineCode",{parentName:"p"},"optimizeChunks"),", ",(0,t.kt)("inlineCode",{parentName:"p"},"optimizeChunkModules"),"와 같은 이벤트는 SyncBailHooks입니다.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"Waterfall Hooks")),(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"SyncWaterfallHook[params]"),"로 정의됩니다."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"tap")," 메소드를 사용하여 탭 됩니다."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"call(...params)")," 메소드를 사용하여 호출됩니다.")),(0,t.kt)("p",{parentName:"li"},"여기서 각각 플러그인은 이전 플러그인의 반환 값으로부터 인자들을 차례로 호출합니다. 플러그인은 실행 순서를 반드시 고려해야합니다.\n실행된 이전의 플러그인으로부터 인자들을 반드시 허용해야합니다. 첫 번째 플러그인의 값은 ",(0,t.kt)("inlineCode",{parentName:"p"},"init"),"입니다. 따라서 waterfall hooks에는 최소 1개의 parameter를 제공해야 합니다. 이 패턴은 ",(0,t.kt)("inlineCode",{parentName:"p"},"ModuleTemplate"),", ",(0,t.kt)("inlineCode",{parentName:"p"},"ChunkTemplate")," 등과 같은 webpack 템플릿과 관련된 탭 될 수 있는 인스턴스에서 사용됩니다."))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"asynchronous-hooks",parentName:"h3"}),"Asynchronous Hooks",(0,t.kt)("a",{href:"#asynchronous-hooks","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"Async Series Hook")),(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"AsyncSeriesHook[params]"),"로 정의됩니다."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"tap"),"/",(0,t.kt)("inlineCode",{parentName:"li"},"tapAsync"),"/",(0,t.kt)("inlineCode",{parentName:"li"},"tapPromise")," 메소드를 사용하여 탭 됩니다."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"callAsync(...params)")," 메소드를 사용하여 호출됩니다.")),(0,t.kt)("p",{parentName:"li"},"플러그인 핸들러 함수는 ",(0,t.kt)("inlineCode",{parentName:"p"},"(err?: Error) -> void")," 서명이 있는 callback 함수와 모든 인자들이 호출됩니다. 핸들러 함수는 등록된 순서대로 호출 됩니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"callback"),"은 모든 핸들러가 호출되고 난 뒤 호출됩니다.\nAsync Series Hook은 또한 ",(0,t.kt)("inlineCode",{parentName:"p"},"emit"),", ",(0,t.kt)("inlineCode",{parentName:"p"},"run"),"과 같은 이벤트에 흔히 사용되는 패턴입니다.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"Async waterfall")," 플러그인은 waterfall 방식으로 비동기식으로 적용될 것입니다."),(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"AsyncWaterfallHook[params]"),"로 정의됩니다."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"tap"),"/",(0,t.kt)("inlineCode",{parentName:"li"},"tapAsync"),"/",(0,t.kt)("inlineCode",{parentName:"li"},"tapPromise")," 메소드를 사용하여 탭 됩니다."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"callAsync(...params)")," 메소드를 사용하여 호출됩니다.")),(0,t.kt)("p",{parentName:"li"},"플러그인 핸들러 함수는 ",(0,t.kt)("inlineCode",{parentName:"p"},"(err: Error, nextValue: any) -> void.")," 서명이 있는 callback 함수와 현재 값으로 호출됩니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"nextValue"),"가 호출되면 다음 핸들러의 현재 값이 됩니다. 첫 번째 핸들러의 현재 값은 ",(0,t.kt)("inlineCode",{parentName:"p"},"init"),"입니다. 모든 핸들러가 적용된 후 callback은 마지막 값으로 호출됩니다. 만약 어떤 핸들러가 ",(0,t.kt)("inlineCode",{parentName:"p"},"err")," 값을 전달하면 callback은 오류가 호출되고 더이상 핸들러는 호출되지 않습니다.\n이 플러그인 패턴은 ",(0,t.kt)("inlineCode",{parentName:"p"},"before-resolve"),"와 ",(0,t.kt)("inlineCode",{parentName:"p"},"after-resolve"),"와 같은 이벤트에서 사용할 수 있습니다.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"Async Series Bail")),(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"AsyncSeriesBailHook[params]"),"로 정의됩니다."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"tap"),"/",(0,t.kt)("inlineCode",{parentName:"li"},"tapAsync"),"/",(0,t.kt)("inlineCode",{parentName:"li"},"tapPromise")," 메소드를 사용하여 탭 됩니다."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"callAsync(...params)")," 메소드를 사용하여 호출됩니다."))),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"Async Parallel")),(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"AsyncParallelHook[params]"),"로 정의됩니다."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"tap"),"/",(0,t.kt)("inlineCode",{parentName:"li"},"tapAsync"),"/",(0,t.kt)("inlineCode",{parentName:"li"},"tapPromise")," 메소드를 사용하여 탭 됩니다."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"callAsync(...params)")," 메소드를 사용하여 호출됩니다.")))),(0,t.kt)("h3",null,(0,t.kt)("span",{id:"configuration-defaults",parentName:"h3"}),"Configuration defaults",(0,t.kt)("a",{href:"#configuration-defaults","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"플러그인의 기본값이 적용된 후 webpack은 설정의 기본값을 적용합니다. 이를 통해 플러그인은 고유의 기본값을 제공하고 사전에 플러그인의 설정을 만드는 방법을 제공합니다."))}p.isMDXComponent=!0,e.default=p}}]);